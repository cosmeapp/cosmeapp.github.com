{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/favicon.ico","path":"favicon.ico","modified":1,"renderable":0},{"_id":"source/images/charles/4.jpeg","path":"images/charles/4.jpeg","modified":1,"renderable":0},{"_id":"source/images/charles/3.png","path":"images/charles/3.png","modified":1,"renderable":0},{"_id":"source/images/charles/8.jpeg","path":"images/charles/8.jpeg","modified":1,"renderable":0},{"_id":"source/images/charles/5.jpeg","path":"images/charles/5.jpeg","modified":1,"renderable":0},{"_id":"source/images/charles/9.jpeg","path":"images/charles/9.jpeg","modified":1,"renderable":0},{"_id":"source/images/test_pic/1.jpeg","path":"images/test_pic/1.jpeg","modified":1,"renderable":0},{"_id":"source/images/test_pic/7.jpeg","path":"images/test_pic/7.jpeg","modified":1,"renderable":0},{"_id":"source/images/test_pic/登录.jpeg","path":"images/test_pic/登录.jpeg","modified":1,"renderable":0},{"_id":"source/images/test_pic/代表数据.jpeg","path":"images/test_pic/代表数据.jpeg","modified":1,"renderable":0},{"_id":"source/images/test_pic/填写规则.jpeg","path":"images/test_pic/填写规则.jpeg","modified":1,"renderable":0},{"_id":"source/images/test_pic/联系.jpeg","path":"images/test_pic/联系.jpeg","modified":1,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/gitalk/gitalk.css","path":"gitalk/gitalk.css","modified":1,"renderable":1},{"_id":"themes/next/source/gitalk/gitalk.css.map","path":"gitalk/gitalk.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"source/images/charles/6.png","path":"images/charles/6.png","modified":1,"renderable":0},{"_id":"source/images/mobile-dialog/2.png","path":"images/mobile-dialog/2.png","modified":1,"renderable":0},{"_id":"source/images/mobile-dialog/3.png","path":"images/mobile-dialog/3.png","modified":1,"renderable":0},{"_id":"source/images/mobile-dialog/1.png","path":"images/mobile-dialog/1.png","modified":1,"renderable":0},{"_id":"source/images/test_pic/23.jpeg","path":"images/test_pic/23.jpeg","modified":1,"renderable":0},{"_id":"source/images/test_pic/tracup.jpeg","path":"images/test_pic/tracup.jpeg","modified":1,"renderable":0},{"_id":"themes/next/source/gitalk/gitalk.min.js","path":"gitalk/gitalk.min.js","modified":1,"renderable":1},{"_id":"source/images/charles/7.jpeg","path":"images/charles/7.jpeg","modified":1,"renderable":0},{"_id":"source/images/mobile-dialog/4.png","path":"images/mobile-dialog/4.png","modified":1,"renderable":0},{"_id":"source/images/test_pic/测试用例.jpeg","path":"images/test_pic/测试用例.jpeg","modified":1,"renderable":0},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"source/images/charles/2.png","path":"images/charles/2.png","modified":1,"renderable":0},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"source/images/charles/1.png","path":"images/charles/1.png","modified":1,"renderable":0},{"_id":"themes/next/source/gitalk/gitalk.js","path":"gitalk/gitalk.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/gitalk/gitalk.js.map","path":"gitalk/gitalk.js.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"source/images/npm/npm-check.jpeg","path":"images/npm/npm-check.jpeg","modified":1,"renderable":0},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/gitalk/gitalk.min.js.map","path":"gitalk/gitalk.min.js.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"74a81c3b7494c541bb425c857fbd788b15b97f6d","modified":1509287360348},{"_id":"source/favicon.ico","hash":"e131ec2d8931487fa5b6f12c0d9c0d0068367b96","modified":1496311390000},{"_id":"source/iOS开发-AVFoundation.md","hash":"81fa199d3ea95927ca2ec69e94327899c1c4857d","modified":1509198458117},{"_id":"source/FlexboxLayout的封装过程.md","hash":"fb60a48686a223156f8c7214b28eccad8c0d9210","modified":1509166720582},{"_id":"source/Android多线程.md","hash":"9fde15a6e62ca4af56bcadf434ceb2700fab49cc","modified":1509166720807},{"_id":"source/移动端弹框.md","hash":"c4e0395afc8b439441d20094ed17fdb59733ae3d","modified":1509212873997},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1505700759000},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1505700759000},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1505700759000},{"_id":"themes/next/.gitignore","hash":"32ea93f21d8693d5d8fa4eef1c51a21ad0670047","modified":1505700759000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1505700759000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1505700759000},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1505700759000},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1505700759000},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1505700759000},{"_id":"themes/next/README.cn.md","hash":"6d9177e7dad87e6129760e4b559bd3f7a15429d7","modified":1505700759000},{"_id":"themes/next/.travis.yml","hash":"d60d4a5375fea23d53b2156b764a99b2e56fa660","modified":1505700759000},{"_id":"themes/next/bower.json","hash":"7d7938f9da896fe710aa0e9120140e528bf058df","modified":1505700759000},{"_id":"themes/next/README.md","hash":"950ca6e9c0fa607d290a5b1fd883df44725b36b2","modified":1505700759000},{"_id":"themes/next/.DS_Store","hash":"e5d23d4a7c4c0963a8dd78b72835a422c204be78","modified":1505703413000},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1505700759000},{"_id":"themes/next/package.json","hash":"193dad6f59a588908fac082cc46fe067dac1b84d","modified":1505700759000},{"_id":"themes/next/_config.yml","hash":"901ecab822ec12c06c4a3f80a3cb21beceec9358","modified":1507702794425},{"_id":"source/_discarded/何厚铧.md","hash":"275e51fee7584d95cadfc6255fa9302879980149","modified":1509089356283},{"_id":"source/_drafts/Untitled.md","hash":"01055f188a7c14da0f2844f8d2e00ef3c8125894","modified":1509089358117},{"_id":"source/archives/index.md","hash":"eda846fa46ec1896198384aa679822358612dfb8","modified":1507702446246},{"_id":"source/categories/index.md","hash":"ffea1992d8b484856f0eaa64b34ba156881c8d91","modified":1507702706179},{"_id":"source/_drafts/hello-world.md","hash":"43aa5635a255ec92bae0c4973ee4b328467982af","modified":1509089076619},{"_id":"source/_posts/android-multi-thread.md","hash":"147f3ce93b2d6b197d850e8f649f253b0912a277","modified":1509287218365},{"_id":"source/_posts/.DS_Store","hash":"6c5ccdbad462a7ac7b241ccae7a6589ee8f6217e","modified":1506432701000},{"_id":"source/_posts/create-hexo-blog.md","hash":"34480812c62f809fb3251ba660250aefc25ffa9a","modified":1505924381000},{"_id":"source/_posts/es6-destructuring-and-spread-operator.md","hash":"0efbb9fce57cad8e6a71edd3d753d73040803907","modified":1505924204000},{"_id":"source/_posts/fast-scrolling-with-recyclerview.md","hash":"28800748edf447f1d33794a188f8c88cd5c8f040","modified":1506475198000},{"_id":"source/_posts/google-flexbox-layout.md","hash":"589e128af4adbc85dc0a7eb1fb76582b9dc80e27","modified":1509287071893},{"_id":"source/_posts/git-basic.md","hash":"cd45593c8baad4291eecaf2bc95b341dbfe1d943","modified":1505926533000},{"_id":"source/_posts/install-charles-certificate-android.md","hash":"842c84508665ffddcf95a896e90c3043f1ce10d2","modified":1507538093651},{"_id":"source/_posts/git-flow.md","hash":"b790b71f3f84daaaf386db4232ebb9170d890733","modified":1505926349000},{"_id":"source/_posts/mobile-dialog.md","hash":"093e37b3cf5b560d8dda00a3b8f7f5de67de9c57","modified":1509287508692},{"_id":"source/_posts/iOS-AVFoundation.md","hash":"b1b7e53f6891cb9a01a21c07ec6ecfb88cf35add","modified":1509287328490},{"_id":"source/_posts/source-nav.md","hash":"45d48fba25a15aed5ee7e994498d281512fd9e28","modified":1505926332000},{"_id":"source/_posts/software-test-basis.md","hash":"aa02e319b290d7568b408146fe25a57928e7c717","modified":1509091082830},{"_id":"source/_posts/travis-ci-auto-build.md","hash":"4a4f41e487dd0fb3605e331632eca811caee9f54","modified":1505702666000},{"_id":"source/_posts/npm-source.md","hash":"55d7479c5a42f5571ee3b8f08eebfb9a2b63777d","modified":1505924325000},{"_id":"source/_posts/weekly-2017-05-06.md","hash":"24fe48ba2f028ff0f2b7fc1c9634916e23abf8a1","modified":1505700759000},{"_id":"source/_posts/php-mess-detector.md","hash":"7b3a4d80a296ebe7121809b30ec4d1e0da222395","modified":1506415426000},{"_id":"source/_posts/weekly-2017-05-27.md","hash":"95a525d7168e71d9e4600f243e946fd019f2e392","modified":1507701984506},{"_id":"source/_posts/weekly-2017-06-12.md","hash":"1c67f70ed6e73ff683a10c990e68d22a8e4fc76c","modified":1505700759000},{"_id":"source/_posts/weekly-2017-06-19.md","hash":"18fb87715bd7156760e7512e9b79b880000baaef","modified":1505700759000},{"_id":"source/_posts/sublime-text.md","hash":"1f26b7eb47da4242dfa60178073acf384013678f","modified":1506430863000},{"_id":"source/_posts/weekly-2017-06-26.md","hash":"829dd616e98bde8ece9fea62bcf603bb54cf519c","modified":1505700759000},{"_id":"source/_posts/weekly-2017-07-03.md","hash":"042532ae43a4e724488811ae79637026f1f8cb2a","modified":1505700759000},{"_id":"source/_posts/weekly-2017-07-17.md","hash":"faf086009a2e82640da9d54e53cc780226237d65","modified":1505700759000},{"_id":"source/_posts/weekly-2017-07-25.md","hash":"bad13a346959bc369b926acde3c5d3a7966b3829","modified":1505700759000},{"_id":"source/_posts/weekly-2017-07-10.md","hash":"4ef8f1632551d6eb7611a598674452d33d5b5e04","modified":1505700759000},{"_id":"source/_posts/weekly-2017-08-02.md","hash":"299b1b18719786b164e7c420be58231926073781","modified":1505700759000},{"_id":"source/_posts/weekly-2017-05-13.md","hash":"07114a4e8a06991cc45c724335301c6ceb737f78","modified":1506413709000},{"_id":"source/_posts/weekly-2017-08-13.md","hash":"2a94ea5ba353c4ba376c8581b5fb50019065def2","modified":1506415249000},{"_id":"source/_posts/weekly-2017-08-20.md","hash":"265a7e8f1640cc84af4c7629b7aa4aae2cbd40cf","modified":1505829572000},{"_id":"source/_posts/weekly-2017-10-08.md","hash":"0c8944c7d3e29558595f8a6fb986aaf753e32aac","modified":1507534506873},{"_id":"source/_posts/weekly-2017-09-30.md","hash":"036e48f76db4e97a230048e28d8e6bac42b6c393","modified":1507533885064},{"_id":"source/_posts/weekly-2017-09-17.md","hash":"de5b212e82a4f83b13c6da762be99cb2e7d2e434","modified":1507533365251},{"_id":"source/images/.DS_Store","hash":"ced62d9ae413971029891318a328be63ef853098","modified":1509287388688},{"_id":"source/_posts/weekly-awesome.md","hash":"d15e9cfd467f47f1f6051206ef72579f92ccf320","modified":1505700759000},{"_id":"source/tags/index.md","hash":"09613625a4caca88caa01aeffb83bc6649d276eb","modified":1507702662660},{"_id":"source/图片/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1509287383584},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"3b5eafd32abb718e56ccf8d1cee0607ad8ce611d","modified":1505700759000},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1505700759000},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"213d0f6c9c7ed9b035d84486b540a57e24869909","modified":1505700759000},{"_id":"themes/next/languages/de.yml","hash":"057e7df11ddeb1c8c15a5d7c5ff29430d725ec6b","modified":1505700759000},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"5d34ae00d5478526664969d0f1fd2cd5d5556e64","modified":1505700759000},{"_id":"themes/next/languages/en.yml","hash":"44ef3f26917f467459326c2c8be2f73e4d947f35","modified":1505700759000},{"_id":"themes/next/languages/fr-FR.yml","hash":"7e4eb7011b8feee641cfb11c6e73180b0ded1c0f","modified":1505700759000},{"_id":"themes/next/languages/default.yml","hash":"44ef3f26917f467459326c2c8be2f73e4d947f35","modified":1505700759000},{"_id":"themes/next/languages/id.yml","hash":"b5de1ea66dd9ef54cac9a1440eaa4e3f5fc011f5","modified":1505700759000},{"_id":"themes/next/languages/ja.yml","hash":"3c76e16fd19b262864475faa6854b718bc08c4d8","modified":1505700759000},{"_id":"themes/next/languages/pt-BR.yml","hash":"b1694ae766ed90277bcc4daca4b1cfa19cdcb72b","modified":1505700759000},{"_id":"themes/next/languages/ko.yml","hash":"ea5b46056e73ebcee121d5551627af35cbffc900","modified":1505700759000},{"_id":"themes/next/languages/pt.yml","hash":"44b61f2d085b827b507909a0b8f8ce31c6ef5d04","modified":1505700759000},{"_id":"themes/next/languages/ru.yml","hash":"98ec6f0b7183282e11cffc7ff586ceb82400dd75","modified":1505700759000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"b342544b715da19d982349017bd56c5aaca11f71","modified":1505700759000},{"_id":"themes/next/languages/zh-hk.yml","hash":"2ef272bcb1f325480f59f1e2ab95584de3c6b8da","modified":1505700759000},{"_id":"themes/next/languages/zh-tw.yml","hash":"c53941a2eaac8e3a2f8dacc73ed555d3c6c5bd59","modified":1505700759000},{"_id":"themes/next/layout/_layout.swig","hash":"ada7ffc71cf05e7236a19e0648bce6d6d6cbc7dc","modified":1505700759000},{"_id":"themes/next/layout/archive.swig","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1505700759000},{"_id":"themes/next/layout/page.swig","hash":"37c874cd720acf0eda8d26e063278f2b6ae8d3a6","modified":1505700759000},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1505700759000},{"_id":"themes/next/layout/post.swig","hash":"2d5f8d7f0a96b611e2d5a5e4d111fc17726a990f","modified":1505700759000},{"_id":"themes/next/scripts/merge-configs.js","hash":"13c8b3a2d9fce06c2488820d9248d190c8100e0a","modified":1505700759000},{"_id":"themes/next/layout/index.swig","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1505700759000},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1505700759000},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1505700759000},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1505700759000},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1505700760000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1505700760000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1505700760000},{"_id":"themes/next/source/.DS_Store","hash":"0ed5114597563d7d06a9c271ca269a000becb067","modified":1505046249000},{"_id":"themes/next/scripts/.DS_Store","hash":"69cb99b73102e00732534b73cc130e3166217358","modified":1505037278000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1505700759000},{"_id":"source/images/charles/4.jpeg","hash":"4c14d7360e155bd565fedd2414ae6ca400f9eeb0","modified":1507538093664},{"_id":"source/images/charles/3.png","hash":"3fd8d515a71fa760f424a9bf0c5a4f880db6219a","modified":1507538093663},{"_id":"source/images/charles/8.jpeg","hash":"560b39f2093a07008ba25e68bf6fa5153249e683","modified":1507538093670},{"_id":"source/images/charles/5.jpeg","hash":"dd10a7738d02ef97085f3c10fac652f1ab1510f7","modified":1507538093666},{"_id":"source/images/charles/9.jpeg","hash":"45ce39de6f65121e432fa75dae472262ecf9d62b","modified":1507538093671},{"_id":"source/images/test_pic/1.jpeg","hash":"5a7d4c08a0c7d248704e04c8b884df2c7cdd9460","modified":1509091395778},{"_id":"source/images/test_pic/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1509088650000},{"_id":"source/images/test_pic/7.jpeg","hash":"e378484eff38e036bae0e4d7be90b3e8ebf8b7e1","modified":1509091395353},{"_id":"source/images/test_pic/登录.jpeg","hash":"40f67e30c0cfc3ef0295bfc05e89e691f4a057e8","modified":1509091401088},{"_id":"source/images/test_pic/代表数据.jpeg","hash":"93e06a2c0fda031a88506c259691d1bfbb22db20","modified":1509091395777},{"_id":"source/images/test_pic/填写规则.jpeg","hash":"dd03b6d483c2c424f9b51f1ffde67f1da00fe08b","modified":1509091413592},{"_id":"source/images/test_pic/联系.jpeg","hash":"7d9dbb95eed5fb93951820b3097ce31f4a4b83af","modified":1509091403136},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1505700759000},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"566046f8e49c6e422afe168aef5593a334d82017","modified":1505700759000},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1505700759000},{"_id":"themes/next/layout/_macro/post.swig","hash":"a7e0b7dd5dd6f6997988baf7d7d7afa2f003077a","modified":1505700759000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1505700759000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"3e01900762d889a04379abba37b419972e366698","modified":1505700759000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1505700759000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"56e8d8556cf474c56ae1bef9cb7bbd26554adb07","modified":1505700759000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1505700759000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1505700759000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"9baf90f7c40b3b10f288e9268c3191e895890cea","modified":1505700759000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"fb02c81273d5897ebb98b50f4c10f7edc34f9240","modified":1505700759000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"58c1a43f64f5c966690fe5f47579f2a52c5bc0e1","modified":1505700759000},{"_id":"themes/next/layout/_partials/head.swig","hash":"2cbeae795c9929ec1966b8a1fb9c058a0b547fa9","modified":1505700759000},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1505700759000},{"_id":"themes/next/layout/_partials/header.swig","hash":"ed042be6252848058c90109236ec988e392d91d4","modified":1505700759000},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1505700759000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1505700759000},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1505700759000},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1505700759000},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1505700759000},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1505700759000},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1505700759000},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1505700759000},{"_id":"themes/next/scripts/tags/button.js","hash":"62e6dbeb53d07627a048132c79630b45d9a8f2cc","modified":1505700759000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1505700759000},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1505700759000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1505700759000},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1505700759000},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1505700759000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1505700759000},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1505700759000},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1505700759000},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1505700759000},{"_id":"themes/next/source/gitalk/gitalk.css","hash":"ddce7416b0db0cb7fd2f9da8e464bda91d8ed33f","modified":1505700759000},{"_id":"themes/next/source/gitalk/gitalk.css.map","hash":"9dda04c29af8da6ac13a507beefea6fce4d7032e","modified":1505700759000},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1505700760000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1505700760000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1505700760000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1505700760000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1505700760000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1505700760000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1505700760000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1505700760000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1505700760000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1505700760000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1505700760000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1505700760000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1505700760000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1505700760000},{"_id":"themes/next/source/js/.DS_Store","hash":"e229828fa3e5eb29cc30fe399d3216bd15768712","modified":1505037260000},{"_id":"source/images/charles/6.png","hash":"ac9c2454fc23b9b8cdb3c3a8345a55351350be01","modified":1507538093669},{"_id":"source/images/mobile-dialog/2.png","hash":"424849c8d3b6d0ab660b691ddb561cc5e49becea","modified":1509287399911},{"_id":"source/images/mobile-dialog/3.png","hash":"b8383230e0cd4d21f7c42a2629f3d1f0b8772c7b","modified":1509287398153},{"_id":"source/images/mobile-dialog/1.png","hash":"264a5a408083e98c1ba2f121b0817dd135317045","modified":1509287400787},{"_id":"source/images/test_pic/23.jpeg","hash":"e9f75108449d34ea7de4e983a0aad9b5da6b1391","modified":1509091399873},{"_id":"source/images/test_pic/tracup.jpeg","hash":"fb8ec85b12e0632d2e9857fd66d07dffd9f02821","modified":1509091400474},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1505700759000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1505700759000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1505700759000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1505700759000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1505700759000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1505700759000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1505700759000},{"_id":"themes/next/source/gitalk/gitalk.min.js","hash":"be5b49f71304016d49475fed5f534b4a2ce7dfe6","modified":1505700760000},{"_id":"source/images/charles/7.jpeg","hash":"05a921e2b7f8570ca5a22df2d6e08f29498d2277","modified":1507538093670},{"_id":"source/images/mobile-dialog/4.png","hash":"c81f07cb42fa62b7d38b00ec2c1fcc0f6845dff0","modified":1509287399286},{"_id":"source/images/test_pic/测试用例.jpeg","hash":"598ec7fb259a41db5167b4969263374359b4b7f8","modified":1509091419326},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1505700759000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1505700759000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1505700759000},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1505700759000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1505700759000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1505700759000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1505700759000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1505700759000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1505700759000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1505700759000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1505700759000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1505700759000},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1505700759000},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1505700759000},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1505700759000},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1505700759000},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1505700759000},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1505700759000},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1505700759000},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1505700759000},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1505700759000},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1505700759000},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1505700759000},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1505700759000},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1505700759000},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1505700759000},{"_id":"themes/next/layout/_third-party/comments/gittalk.swig","hash":"0d83a741afedbae36e1c83a8e982f7cfa570d819","modified":1505700759000},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1505700759000},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"2d9518fa717a0b2d652479cc264996de755446dc","modified":1505700759000},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1505700759000},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1505700759000},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1505700759000},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"9f4ed36c73e890909b8ebbe601fb60e13d048288","modified":1505700759000},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1505700759000},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1505700759000},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1505700759000},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1505700759000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1505700759000},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1505700759000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"9ab65361ba0a12a986edd103e56492644c2db0b8","modified":1505700759000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1505700759000},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"6359c84aaa02c90be60b22abe638b737ddd69c9c","modified":1505700759000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"cfee25d790e4f9b7d57f0dc7e2ea9c1649f08f11","modified":1505700759000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1505700759000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"d477196c5699c8261b08e993a77ef67054d86166","modified":1505700759000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1505700760000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1505700760000},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1505700760000},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1505700760000},{"_id":"themes/next/source/js/src/motion.js","hash":"da146caf488078a634d961debf2a71ce4106018c","modified":1505700760000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1505700760000},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1505700760000},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1505700760000},{"_id":"themes/next/source/js/src/post-details.js","hash":"0693695a9512641daff63d99da772625a058ab18","modified":1505700760000},{"_id":"themes/next/source/js/src/utils.js","hash":"2917c39c75b14b6dab7e1c46ab4d87b4df9fcd5d","modified":1505700760000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1505700760000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1505700760000},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1505700760000},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"7fd2f3e2773555392ef40df40cae3bedb884f17a","modified":1505700760000},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1505700760000},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1505700760000},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1505700760000},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1505700760000},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1505700760000},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1505700760000},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1505700760000},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1505700760000},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1505700760000},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1505700760000},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1505700760000},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1505700760000},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1505700760000},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1505700760000},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1505700760000},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1505700760000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1505700760000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1505700760000},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1505700760000},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1505700760000},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1505700760000},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1505700760000},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1505700760000},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1505700760000},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1505700760000},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1505700760000},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1505700760000},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1505700760000},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1505700760000},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1505700760000},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1505700760000},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1505700760000},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1505700760000},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1505700760000},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1505700760000},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1505700760000},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1505700760000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1505700760000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1505700760000},{"_id":"source/images/charles/2.png","hash":"423be68820cbaf725eceb1c7776942e9c276f8d9","modified":1507538093661},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1505700760000},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1505700760000},{"_id":"source/images/charles/1.png","hash":"eaa46f98d2a59c785b17cfa2253f7dc47d01c870","modified":1507538093655},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1505700759000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1505700759000},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1505700759000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"f2030fa436c47791d1a42358cc0ef6f9809f212c","modified":1505700759000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1505700759000},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"d026c8489f66ab6c12ad04bd37f1d5b6f2f3f0d1","modified":1505700759000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1505700759000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1505700759000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1505700759000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1505700759000},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"86b6fd7f1b1be3ae98f8af6b23a6b1299c670ce9","modified":1505700759000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1505700759000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1505700759000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"f7c44b0ee46cf2cf82a4c9455ba8d8b55299976f","modified":1505700759000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1505700759000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1505700759000},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"bc8c388553bbcf95897459a466ba35bffd5ec5f0","modified":1505700759000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1505700759000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1505700759000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1505700759000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1505700759000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1505700759000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"fda14bc35be2e1b332809b55b3d07155a833dbf4","modified":1505700759000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1505700759000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1505700759000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1505700759000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"264a52c0a7877381f9a6a87d495757a0ba7e29d6","modified":1505700759000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1505700759000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"0af5a9322156c4c21d3c7d38f5ee48de5286f523","modified":1505700759000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1505700759000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1505700759000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1505700759000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1505700759000},{"_id":"themes/next/source/gitalk/gitalk.js","hash":"342abfa4416e325a3914d2f50a286c86dbde41ce","modified":1505700759000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"82bbaa6322764779a1ac2e2c8390ce901c7972e2","modified":1505700759000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1505700759000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"79da92119bc246fe05d1626ac98426a83ec90a94","modified":1505700760000},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1505700760000},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1505700760000},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1505700760000},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1505700760000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1505700760000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1505700760000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1505700760000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1505700760000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1505700760000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1505700760000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1505700760000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1505700760000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1505700760000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1505700760000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1505700760000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1505700760000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1505700760000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1505700760000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1505700760000},{"_id":"themes/next/source/gitalk/gitalk.js.map","hash":"01706148cfe2350def06e4fd8bd8bf64005e3d35","modified":1505700759000},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1505700760000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1505700760000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1505700760000},{"_id":"source/images/npm/npm-check.jpeg","hash":"c48510942f64395c6b2af86c5d5dad9131f07a32","modified":1505824059000},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1505700760000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"7905a7f625702b45645d8be1268cb8af3f698c70","modified":1505700759000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1505700759000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1505700759000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1505700759000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1505700759000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1505700759000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"740d37f428b8f4574a76fc95cc25e50e0565f45e","modified":1505700759000},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1505700759000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1505700759000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1505700759000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1505700759000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1505700759000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1505700759000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1505700759000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"0a6c0efffdf18bddbc1d1238feaed282b09cd0fe","modified":1505700759000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1505700759000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1505700759000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1505700759000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1505700759000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1505700759000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"57d2c8a060f5e4e1a0aef9aae11a0016cf7ac5ba","modified":1505700759000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1505700759000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1505700759000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"77c92a449ce84d558d26d052681f2e0dd77c70c9","modified":1505700759000},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1505700759000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1505700759000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"9af89221e76ec3471a777851d4890c116941866d","modified":1505700759000},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"beccb53dcd658136fb91a0c5678dea8f37d6e0b6","modified":1505700759000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1505700759000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1505700759000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1505700759000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"aea21141015ca8c409d8b33e3e34ec505f464e93","modified":1505700759000},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1505700759000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1505700759000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1505700759000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"963105a531403d7aad6d9e5e23e3bfabb8ec065a","modified":1505700759000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1505700759000},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"08a500b2984f109b751f3697ca33172d1340591a","modified":1505700759000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"67c357ddc16b31e7dfd8f956a77f984662c06fc2","modified":1505700759000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1505700759000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"b8969e1654eec89a0fd10d88b337fee9cb03cd44","modified":1505700759000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1505700759000},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1505700759000},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1505700759000},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1505700759000},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"45df0cf4c97b47e05573bcd41028ee50f3fdf432","modified":1505700759000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1505700759000},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1505700759000},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1505700759000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1505700759000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1505700759000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1505700759000},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1505700759000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"aeff0e6e23725e8baea27c890ccbbf466024f767","modified":1505700759000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1505700759000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1505700759000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1505700759000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1505700759000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1505700759000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1505700760000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1505700760000},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1505700760000},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1505700760000},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1505700760000},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1505700760000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1505700760000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1505700760000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1505700760000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1505700760000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1505700760000},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1505700760000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1505700760000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1505700760000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1505700760000},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1505700760000},{"_id":"themes/next/source/gitalk/gitalk.min.js.map","hash":"277d7ccbac4ddb3725c810ee6c8711ed24105638","modified":1505700760000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1505700760000},{"_id":"source/图片.zip","hash":"47bc0d5bcaaa925ec3cee25dabbee45b64146e0c","modified":1509212876618}],"Category":[],"Data":[],"Page":[{"title":"categories","date":"2017-10-11T06:12:59.000Z","type":"categories","layout":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2017-10-11 14:12:59\ntype: \"categories\"\nlayout: \"categories\"\n---\n","updated":"2017-10-11T06:18:26.179Z","path":"categories/index.html","comments":1,"_id":"cj9cutink0005ds9lo5rekla1","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"archives","date":"2017-10-11T06:14:06.000Z","_content":"","source":"archives/index.md","raw":"---\ntitle: archives\ndate: 2017-10-11 14:14:06\n---\n","updated":"2017-10-11T06:14:06.246Z","path":"archives/index.html","comments":1,"layout":"page","_id":"cj9cutinn0007ds9lrm89ktnv","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"Tagcloud","date":"2017-10-11T06:11:45.000Z","type":"tags","layout":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: Tagcloud\ndate: 2017-10-11 14:11:45\ntype: \"tags\"\nlayout: \"tags\"\n---","updated":"2017-10-11T06:17:42.660Z","path":"tags/index.html","comments":1,"_id":"cj9cutint0009ds9lks7lpz91","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Untitled","author":"美妆心得技术部","date":"2017-10-27T07:29:00.000Z","_content":"","source":"_drafts/Untitled.md","raw":"title: Untitled\nauthor: 美妆心得技术部\ntags: []\ncategories: []\ndate: 2017-10-27 15:29:00\n---\n","slug":"Untitled","published":0,"updated":"2017-10-27T07:29:18.117Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9cuting0004ds9lfmrbv5q8","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"Hello World","date":"2017-10-27T07:24:00.000Z","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_drafts/hello-world.md","raw":"title: Hello World\ntags: []\ncategories: []\ndate: 2017-10-27 15:24:00\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":0,"updated":"2017-10-27T07:24:36.619Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9cutinl0006ds9lkbe2nqyz","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p><h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure><p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p><h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure><p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p><h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure><p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p><h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure><p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p><h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure><p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p><h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure><p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p><h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure><p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p><h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure><p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>"},{"title":"Android线程知识整理","author":{"name":"张经纬","link":null},"date":"2017-10-29T14:26:16.000Z","_content":"\n## Android线程知识整理\n\n* Handler\n\n每个线程都和一个Handler类实例绑定，而且可以和别的线程一起运行，相互通信。\nAsyncTask内部也是使用Handler进行处理的，只是不是运行在UI线程而已，它会提供一个channel来和UI线程通信，使用postExecute方法即可实现。\n\n* AsyncTask\n\n使用AsyncTask是在Android上操作线程最简单的方式，也是最容易出错的方式。\n\n* IntentService\n\n这种方式需要写更多的代码，但是这是把耗时任务移动到后台的很好的方式，也是我最喜欢的方式。配上使用一个EventBus机制的框架如Otto，这样的话实现IntentService就非常简单了。\n\n* Loader\n\n关于处理异步任务，还有很多事情需要做，比如从数据库或者内容提供者那里处理一些数据。\n\n* Service\n\n如果你曾经使用过Service的话，你应该知道这里会有一点误区，其中一个常见的误解就是服务是运行在后台线程的。其实不是！看似运行在后台是因为它们不与UI组件关联，但是它们（默认）是运行在UI线程上的……所以默认运行在UI线程上，甚至在上面没有UI部件。\n\n### Android进程\n\nAndroid会根据进程中运行的组件类别以及组件的状态来判断该进程的重要性，Android会首先停止那些不重要的进程。按照重要性从高到低一共有五个级别：\n\n**前台进程 > 可见进程 > 服务进程 > 后台进程 > 空进程**\n\n空进程：未运行任何程序组件。运行这些进程的唯一原因是作为一个缓存，缩短下次程序需要重新使用的启动时间。系统经常中止这些进程，这样可以调节程序缓存和系统缓存的平衡。\n\nAndroid 对进程的重要性评级的时候，选取它最高的级别。另外，当被另外的一个进程依赖的时候，某个进程的级别可能会增高。一个为其他进程服务的进程永远不会比被服务的进程重要级低。因为服务进程比后台activity进程重要级高，因此一个要进行耗时工作的activity最好启动一个service来做这个工作，而不是开启一个子进程――特别是这个操作需要的时间比activity存在的时间还要长的时候。例如，在后台播放音乐，向网上上传摄像头拍到的图片，使用service可以使进程最少获取到“服务进程”级别的重要级，而不用考虑activity目前是什么状态。broadcast receivers做费时的工作的时候，也应该启用一个服务而不是开一个线程。\n\n#### Android的单线程模型\n\nAndroid UI操作并不是线程安全的并且这些操作必须在UI线程中执行。\n\n****\n\n### Message Queue\n\n**Message Queue是一个消息队列，用来存放通过Handler发布的消息。** 消息队列通常附属于某一个创建它的线程，可以通过Looper.myQueue()得到当前线程的消息队列。Android在第一次启动程序时会为UI thread创建一个关联的消息队列，用来管理程序的一些上层组件，activities，broadcase receivers等等。你可以在自己的子线程中创建Handler与UI thread通讯。\n\n注：产生一个Message对象，可以new，也可以使用`Message.obtain()`方法；两者都可以，但是更建议使用obtain方法，因为Message内部维护了一个Message池用于Message的复用，避免使用new 重新分配内存。\n\n`Message.obtain()`源码：\n```java\n/**\n * Return a new Message instance from the global pool. Allows us to\n * avoid allocating new objects in many cases.\n */\npublic static Message obtain() {\n    synchronized (sPoolSync) {\n        if (sPool != null) {\n            Message m = sPool;\n            sPool = m.next;\n            m.next = null;\n            m.flags = 0; // clear in-use flag\n            sPoolSize--;\n            return m;\n        }\n    }\n    return new Message();\n}\n```\n\n### Hanlder\n\nHandler处理者，是Message的主要处理者，负责Message的发送，Message内容的执行处理。后台线程就是通过传进来的Handler对象引用来`sendMessage(Message)`。而使用Handler，需要implement 该类的`handleMessage(Message)`方法，它是处理这些Message的操作内容，例如Update UI。通常需要子类化Handler来实现handleMessage方法。\n\n**Handler实例化时，会首先得到当前线程中保存的Looper实例，进而与Looper实例中的MessageQueue想关联。也就是与当前线程绑定。**\n\n主要的方法有：\n```java\npublic final boolean sendMessage(Message msg)\n```\n把消息放入该Handler所 关联的消息队列，放置在所有当前时间前未被处理的消息后。\n\n```java\npublic void handleMessage(Message msg)\n```\n关联该消息队列的线 程将通过调用Handler的handleMessage方 法来接收和处理消息，通常需要子类化Handler来 实现handleMessage。\n\n```java\npublic class TestActivity extends Activity {\n\n    // ...\n    // all standard stuff\n\n    @Override\n    public void onCreate(Bundle savedInstanceState) {\n\n        // ...\n        // all standard stuff\n\n        // we're creating a new handler here\n        // and we're in the UI Thread (default)\n        // so this Handler is associated with the UI thread\n        Handler mHandler = new Handler();\n\n        // I want to start doing something really long\n        // which means I should run the fella in another thread.\n        // I do that by sending a message - in the form of another runnable object\n\n        // But first, I'm going to create a Runnable object or a message for this\n        Runnable mRunnableOnSeparateThread = new Runnable() {\n            @Override\n            public void run () {\n\n                // do some long operation\n                longOperation();\n\n                // After mRunnableOnSeparateThread is done with it's job,\n                // I need to tell the user that i'm done\n                // which means I need to send a message back to the UI thread\n\n                // who do we know that's associated with the UI thread?\n                mHandler.post(new Runnable(){\n                    @Override\n                    public void run(){\n                        // do some UI related thing\n                        // like update a progress bar or TextView\n                        // ....\n                    }\n                });\n\n\n            }\n        };\n\n        // Cool but I've not executed the mRunnableOnSeparateThread yet\n        // I've only defined the message to be sent\n        // When I execute it though, I want it to be in a different thread\n        // that was the whole point.\n\n        new Thread(mRunnableOnSeparateThread).start();\n    }\n\n    }\n```\n\n### Looper\n\nLooper是每条线程里的Message Queue的管家。Android没有Global的Message Queue，而Android会自动替主线程(UI线程)建立Message Queue，但在子线程里并没有建立Message Queue。所以调用`Looper.getMainLooper()`得到的主线程的Looper不为NULL，但调用`Looper.myLooper()`得到当前线程的Looper就有可能为NULL。\n\n1)   可以通过Looper类的静态方法`Looper.myLooper`得到当前线程的Looper实例，如果当前线程未关联一个Looper实例，该方法将返回空。\n\n2)   可以通过静态方法`Looper.getMainLooper()`方法得到主线程的Looper实例\n\n* 首先`Looper.prepare()`在本线程中保存一个Looper实例，然后该实例中保存一个MessageQueue对象；因为Looper.prepare()在一个线程中只能调用一次，所以MessageQueue在一个线程中只会存在一个。\n* `Looper.loop()`会让当前线程进入一个无限循环，不端从MessageQueue的实例中读取消息，然后回调`msg.target.dispatchMessage(msg)`方法。\n* Handler的构造方法，会首先得到当前线程中保存的Looper实例，进而与Looper实例中的MessageQueue想关联。\n* Handler的sendMessage方法，会给msg的target赋值为handler自身，然后加入MessageQueue中。\n* 在构造Handler实例时，我们会重写handleMessage方法，也就是`msg.target.dispatchMessage(msg)`最终调用的方法。\n\n****\n## 多线程\n\n### Hanlder + Thread\n\nHandler可以把一个Message对象或者Runnable对象压入到消息队列中，进而在UI线程中获取Message或者执行Runnable对象，Handler把压入消息队列有两类方式，Post和sendMessage：\n\npost:\n```java\nclass MyThread extends Thread {\n\n      @Override\n      public void run() {\n          super.run();\n          //... 子线程\n          mHandler.post(new Runnable() {\n              @Override\n              public void run() {\n                  //... UI线程\n              }\n          });\n      }\n}\n```\n\nsendMessage:\n```java\nclass MyThread extends Thread {\n\n      @Override\n      public void run() {\n          super.run();\n          //... 子线程\n          mHandler.sendMessage(Message.obtain());\n      }\n}\n\nmHandler = new Handler(){\n      @Override\n      public void handleMessage(Message msg) {\n          super.handleMessage(msg);\n          //...\n      }\n};\n\n```\n\n### AsyncTask\n\nAsyncTask是android提供的轻量级的异步类,可以直接继承AsyncTask，在类中实现异步操作，并提供接口反馈当前异步执行的程度(可以通过接口实现UI进度更新)，最后反馈执行的结果给UI主线程。\n\n```java\nnew AsyncTask<Integer, Integer, String>() {\n\n           @Override\n           protected void onPreExecute() {\n               super.onPreExecute();\n               //第一个执行方法\n           }\n\n           @Override\n           protected String doInBackground(Integer... params) {\n               //第二个执行方法,onPreExecute()执行完后执行\n               return null;\n           }\n\n           @Override\n           protected void onProgressUpdate(Integer... values) {\n               super.onProgressUpdate(values);\n               //这个函数在doInBackground调用,获取进度\n           }\n\n           @Override\n           protected void onPostExecute(String s) {\n               super.onPostExecute(s);\n               //doInBackground返回时触发，换句话说，就是doInBackground执行完后触发\n               //这里的result就是上面doInBackground执行后的返回值，所以这里是\"执行完毕\"\n           }\n};\n```\n\n### ThreadPoolExecutor\n\nThreadPoolExecutor提供了一组线程池，可以管理多个线程并行执行。这样一方面减少了每个并行任务独自建立线程的开销，另一方面可以管理多个并发线程的公共资源，从而提高了多线程的效率。所以ThreadPoolExecutor比较适合一组任务的执行。Executors利用工厂模式对ThreadPoolExecutor进行了封装，使用起来更加方便。\n\n```java\nExecutors.newFixedThreadPool()\n//创建一个定长的线程池，每提交一个任务就创建一个线程，直到达到池的最大长度，这时线程池会保持长度不再变化\nExecutors.newCachedThreadPool()\n//创建一个可缓存的线程池，如果当前线程池的长度超过了处理的需要时，它可以灵活的回收空闲的线程，当需要增加时，\n//它可以灵活的添加新的线程，而不会对池的长度作任何限制\nExecutors.newScheduledThreadPool()\n//创建一个定长的线程池，而且支持定时的以及周期性的任务执行，类似于Timer\nExecutors.newSingleThreadExecutor()\n//创建一个单线程化的executor，它只创建唯一的worker线程来执行任务\n```\n\n### IntentService\n\nIntentService继承自Service，是一个经过包装的轻量级的Service，用来接收并处理通过Intent传递的异步请求。客户端通过调用startService(Intent)启动一个IntentService，利用一个work线程依次处理顺序过来的请求，处理完成后自动结束Service。\n\nIntentService 继承自普通 Service 同时又在内部创建了一个 HandlerThread，在 onHandlerIntent()的回调里面处理扔到 IntentService 的任务。所以 IntentService 就不仅仅具备了异步线程的特性，还同时保留了 Service 不受主页面生命周期影响的特点。\n\n使用 IntentService 需要特别留意以下几点：\n* 首先，因为 IntentService 内置的是 HandlerThread 作为异步线程，所以每一个交给 IntentService 的任务都将以队列的方式逐个被执行到，一旦队列中有某个任务执行时间过长，那么就会导致后续的任务都会被延迟处理。\n\n* 其次，通常使用到 IntentService 的时候，我们会结合使用 BroadcastReceiver 把工作线程的任务执行结果返回给主 UI 线程。使用广播容易引起性能问题，我们可以使用 LocalBroadcastManager 来发送只在程序内部传递的广播，从而提升广播的性能。我们也可以使用 runOnUiThread() 快速回调到主 UI 线程。\n\n* 最后，包含正在运行的 IntentService 的程序相比起纯粹的后台程序更不容易被系统杀死，该程序的优先级是介于前台程序与纯后台程序之间的。\n\n****\n\n### View.post()\n\n`View.post(Runnable)`方法。在post(Runnable action)方法里，View获得当前线程（即UI线程）的Handler，然后将action对象post到Handler里。在Handler里，它将传递过来的action对象包装成一个Message（Message的callback为action），然后将其投入UI线程的消息循环中。在Handler再次处理该Message时，有一条分支（未解释的那条）就是为它所设，直接调用runnable的run方法。而此时，已经路由到UI线程里，因此，我们可以毫无顾虑的来更新UI。\n\n\n\n## 参考\n\n[浅析Android线程模型](http://www.cppblog.com/fwxjj/archive/2010/05/31/116787.html)\n\n[有关Android线程的学习](http://android.blog.51cto.com/268543/343823)\n\n[Android 多线程的四种方式](http://www.jianshu.com/p/2b634a7c49ec)\n\n[Android性能优化典范之多线程篇](http://www.cnblogs.com/bugly/p/5519510.html)\n","source":"_posts/android-multi-thread.md","raw":"---\ntitle: Android线程知识整理\nauthor:\n  name: 张经纬\n  link:\ndate: 2017-10-29 22:26:16\ntags:\n- Android\n---\n\n## Android线程知识整理\n\n* Handler\n\n每个线程都和一个Handler类实例绑定，而且可以和别的线程一起运行，相互通信。\nAsyncTask内部也是使用Handler进行处理的，只是不是运行在UI线程而已，它会提供一个channel来和UI线程通信，使用postExecute方法即可实现。\n\n* AsyncTask\n\n使用AsyncTask是在Android上操作线程最简单的方式，也是最容易出错的方式。\n\n* IntentService\n\n这种方式需要写更多的代码，但是这是把耗时任务移动到后台的很好的方式，也是我最喜欢的方式。配上使用一个EventBus机制的框架如Otto，这样的话实现IntentService就非常简单了。\n\n* Loader\n\n关于处理异步任务，还有很多事情需要做，比如从数据库或者内容提供者那里处理一些数据。\n\n* Service\n\n如果你曾经使用过Service的话，你应该知道这里会有一点误区，其中一个常见的误解就是服务是运行在后台线程的。其实不是！看似运行在后台是因为它们不与UI组件关联，但是它们（默认）是运行在UI线程上的……所以默认运行在UI线程上，甚至在上面没有UI部件。\n\n### Android进程\n\nAndroid会根据进程中运行的组件类别以及组件的状态来判断该进程的重要性，Android会首先停止那些不重要的进程。按照重要性从高到低一共有五个级别：\n\n**前台进程 > 可见进程 > 服务进程 > 后台进程 > 空进程**\n\n空进程：未运行任何程序组件。运行这些进程的唯一原因是作为一个缓存，缩短下次程序需要重新使用的启动时间。系统经常中止这些进程，这样可以调节程序缓存和系统缓存的平衡。\n\nAndroid 对进程的重要性评级的时候，选取它最高的级别。另外，当被另外的一个进程依赖的时候，某个进程的级别可能会增高。一个为其他进程服务的进程永远不会比被服务的进程重要级低。因为服务进程比后台activity进程重要级高，因此一个要进行耗时工作的activity最好启动一个service来做这个工作，而不是开启一个子进程――特别是这个操作需要的时间比activity存在的时间还要长的时候。例如，在后台播放音乐，向网上上传摄像头拍到的图片，使用service可以使进程最少获取到“服务进程”级别的重要级，而不用考虑activity目前是什么状态。broadcast receivers做费时的工作的时候，也应该启用一个服务而不是开一个线程。\n\n#### Android的单线程模型\n\nAndroid UI操作并不是线程安全的并且这些操作必须在UI线程中执行。\n\n****\n\n### Message Queue\n\n**Message Queue是一个消息队列，用来存放通过Handler发布的消息。** 消息队列通常附属于某一个创建它的线程，可以通过Looper.myQueue()得到当前线程的消息队列。Android在第一次启动程序时会为UI thread创建一个关联的消息队列，用来管理程序的一些上层组件，activities，broadcase receivers等等。你可以在自己的子线程中创建Handler与UI thread通讯。\n\n注：产生一个Message对象，可以new，也可以使用`Message.obtain()`方法；两者都可以，但是更建议使用obtain方法，因为Message内部维护了一个Message池用于Message的复用，避免使用new 重新分配内存。\n\n`Message.obtain()`源码：\n```java\n/**\n * Return a new Message instance from the global pool. Allows us to\n * avoid allocating new objects in many cases.\n */\npublic static Message obtain() {\n    synchronized (sPoolSync) {\n        if (sPool != null) {\n            Message m = sPool;\n            sPool = m.next;\n            m.next = null;\n            m.flags = 0; // clear in-use flag\n            sPoolSize--;\n            return m;\n        }\n    }\n    return new Message();\n}\n```\n\n### Hanlder\n\nHandler处理者，是Message的主要处理者，负责Message的发送，Message内容的执行处理。后台线程就是通过传进来的Handler对象引用来`sendMessage(Message)`。而使用Handler，需要implement 该类的`handleMessage(Message)`方法，它是处理这些Message的操作内容，例如Update UI。通常需要子类化Handler来实现handleMessage方法。\n\n**Handler实例化时，会首先得到当前线程中保存的Looper实例，进而与Looper实例中的MessageQueue想关联。也就是与当前线程绑定。**\n\n主要的方法有：\n```java\npublic final boolean sendMessage(Message msg)\n```\n把消息放入该Handler所 关联的消息队列，放置在所有当前时间前未被处理的消息后。\n\n```java\npublic void handleMessage(Message msg)\n```\n关联该消息队列的线 程将通过调用Handler的handleMessage方 法来接收和处理消息，通常需要子类化Handler来 实现handleMessage。\n\n```java\npublic class TestActivity extends Activity {\n\n    // ...\n    // all standard stuff\n\n    @Override\n    public void onCreate(Bundle savedInstanceState) {\n\n        // ...\n        // all standard stuff\n\n        // we're creating a new handler here\n        // and we're in the UI Thread (default)\n        // so this Handler is associated with the UI thread\n        Handler mHandler = new Handler();\n\n        // I want to start doing something really long\n        // which means I should run the fella in another thread.\n        // I do that by sending a message - in the form of another runnable object\n\n        // But first, I'm going to create a Runnable object or a message for this\n        Runnable mRunnableOnSeparateThread = new Runnable() {\n            @Override\n            public void run () {\n\n                // do some long operation\n                longOperation();\n\n                // After mRunnableOnSeparateThread is done with it's job,\n                // I need to tell the user that i'm done\n                // which means I need to send a message back to the UI thread\n\n                // who do we know that's associated with the UI thread?\n                mHandler.post(new Runnable(){\n                    @Override\n                    public void run(){\n                        // do some UI related thing\n                        // like update a progress bar or TextView\n                        // ....\n                    }\n                });\n\n\n            }\n        };\n\n        // Cool but I've not executed the mRunnableOnSeparateThread yet\n        // I've only defined the message to be sent\n        // When I execute it though, I want it to be in a different thread\n        // that was the whole point.\n\n        new Thread(mRunnableOnSeparateThread).start();\n    }\n\n    }\n```\n\n### Looper\n\nLooper是每条线程里的Message Queue的管家。Android没有Global的Message Queue，而Android会自动替主线程(UI线程)建立Message Queue，但在子线程里并没有建立Message Queue。所以调用`Looper.getMainLooper()`得到的主线程的Looper不为NULL，但调用`Looper.myLooper()`得到当前线程的Looper就有可能为NULL。\n\n1)   可以通过Looper类的静态方法`Looper.myLooper`得到当前线程的Looper实例，如果当前线程未关联一个Looper实例，该方法将返回空。\n\n2)   可以通过静态方法`Looper.getMainLooper()`方法得到主线程的Looper实例\n\n* 首先`Looper.prepare()`在本线程中保存一个Looper实例，然后该实例中保存一个MessageQueue对象；因为Looper.prepare()在一个线程中只能调用一次，所以MessageQueue在一个线程中只会存在一个。\n* `Looper.loop()`会让当前线程进入一个无限循环，不端从MessageQueue的实例中读取消息，然后回调`msg.target.dispatchMessage(msg)`方法。\n* Handler的构造方法，会首先得到当前线程中保存的Looper实例，进而与Looper实例中的MessageQueue想关联。\n* Handler的sendMessage方法，会给msg的target赋值为handler自身，然后加入MessageQueue中。\n* 在构造Handler实例时，我们会重写handleMessage方法，也就是`msg.target.dispatchMessage(msg)`最终调用的方法。\n\n****\n## 多线程\n\n### Hanlder + Thread\n\nHandler可以把一个Message对象或者Runnable对象压入到消息队列中，进而在UI线程中获取Message或者执行Runnable对象，Handler把压入消息队列有两类方式，Post和sendMessage：\n\npost:\n```java\nclass MyThread extends Thread {\n\n      @Override\n      public void run() {\n          super.run();\n          //... 子线程\n          mHandler.post(new Runnable() {\n              @Override\n              public void run() {\n                  //... UI线程\n              }\n          });\n      }\n}\n```\n\nsendMessage:\n```java\nclass MyThread extends Thread {\n\n      @Override\n      public void run() {\n          super.run();\n          //... 子线程\n          mHandler.sendMessage(Message.obtain());\n      }\n}\n\nmHandler = new Handler(){\n      @Override\n      public void handleMessage(Message msg) {\n          super.handleMessage(msg);\n          //...\n      }\n};\n\n```\n\n### AsyncTask\n\nAsyncTask是android提供的轻量级的异步类,可以直接继承AsyncTask，在类中实现异步操作，并提供接口反馈当前异步执行的程度(可以通过接口实现UI进度更新)，最后反馈执行的结果给UI主线程。\n\n```java\nnew AsyncTask<Integer, Integer, String>() {\n\n           @Override\n           protected void onPreExecute() {\n               super.onPreExecute();\n               //第一个执行方法\n           }\n\n           @Override\n           protected String doInBackground(Integer... params) {\n               //第二个执行方法,onPreExecute()执行完后执行\n               return null;\n           }\n\n           @Override\n           protected void onProgressUpdate(Integer... values) {\n               super.onProgressUpdate(values);\n               //这个函数在doInBackground调用,获取进度\n           }\n\n           @Override\n           protected void onPostExecute(String s) {\n               super.onPostExecute(s);\n               //doInBackground返回时触发，换句话说，就是doInBackground执行完后触发\n               //这里的result就是上面doInBackground执行后的返回值，所以这里是\"执行完毕\"\n           }\n};\n```\n\n### ThreadPoolExecutor\n\nThreadPoolExecutor提供了一组线程池，可以管理多个线程并行执行。这样一方面减少了每个并行任务独自建立线程的开销，另一方面可以管理多个并发线程的公共资源，从而提高了多线程的效率。所以ThreadPoolExecutor比较适合一组任务的执行。Executors利用工厂模式对ThreadPoolExecutor进行了封装，使用起来更加方便。\n\n```java\nExecutors.newFixedThreadPool()\n//创建一个定长的线程池，每提交一个任务就创建一个线程，直到达到池的最大长度，这时线程池会保持长度不再变化\nExecutors.newCachedThreadPool()\n//创建一个可缓存的线程池，如果当前线程池的长度超过了处理的需要时，它可以灵活的回收空闲的线程，当需要增加时，\n//它可以灵活的添加新的线程，而不会对池的长度作任何限制\nExecutors.newScheduledThreadPool()\n//创建一个定长的线程池，而且支持定时的以及周期性的任务执行，类似于Timer\nExecutors.newSingleThreadExecutor()\n//创建一个单线程化的executor，它只创建唯一的worker线程来执行任务\n```\n\n### IntentService\n\nIntentService继承自Service，是一个经过包装的轻量级的Service，用来接收并处理通过Intent传递的异步请求。客户端通过调用startService(Intent)启动一个IntentService，利用一个work线程依次处理顺序过来的请求，处理完成后自动结束Service。\n\nIntentService 继承自普通 Service 同时又在内部创建了一个 HandlerThread，在 onHandlerIntent()的回调里面处理扔到 IntentService 的任务。所以 IntentService 就不仅仅具备了异步线程的特性，还同时保留了 Service 不受主页面生命周期影响的特点。\n\n使用 IntentService 需要特别留意以下几点：\n* 首先，因为 IntentService 内置的是 HandlerThread 作为异步线程，所以每一个交给 IntentService 的任务都将以队列的方式逐个被执行到，一旦队列中有某个任务执行时间过长，那么就会导致后续的任务都会被延迟处理。\n\n* 其次，通常使用到 IntentService 的时候，我们会结合使用 BroadcastReceiver 把工作线程的任务执行结果返回给主 UI 线程。使用广播容易引起性能问题，我们可以使用 LocalBroadcastManager 来发送只在程序内部传递的广播，从而提升广播的性能。我们也可以使用 runOnUiThread() 快速回调到主 UI 线程。\n\n* 最后，包含正在运行的 IntentService 的程序相比起纯粹的后台程序更不容易被系统杀死，该程序的优先级是介于前台程序与纯后台程序之间的。\n\n****\n\n### View.post()\n\n`View.post(Runnable)`方法。在post(Runnable action)方法里，View获得当前线程（即UI线程）的Handler，然后将action对象post到Handler里。在Handler里，它将传递过来的action对象包装成一个Message（Message的callback为action），然后将其投入UI线程的消息循环中。在Handler再次处理该Message时，有一条分支（未解释的那条）就是为它所设，直接调用runnable的run方法。而此时，已经路由到UI线程里，因此，我们可以毫无顾虑的来更新UI。\n\n\n\n## 参考\n\n[浅析Android线程模型](http://www.cppblog.com/fwxjj/archive/2010/05/31/116787.html)\n\n[有关Android线程的学习](http://android.blog.51cto.com/268543/343823)\n\n[Android 多线程的四种方式](http://www.jianshu.com/p/2b634a7c49ec)\n\n[Android性能优化典范之多线程篇](http://www.cnblogs.com/bugly/p/5519510.html)\n","slug":"android-multi-thread","published":1,"updated":"2017-10-29T14:26:58.365Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9cutins0008ds9lc748wq0r","content":"<h2 id=\"Android线程知识整理\"><a href=\"#Android线程知识整理\" class=\"headerlink\" title=\"Android线程知识整理\"></a>Android线程知识整理</h2><ul><li>Handler</li></ul><p>每个线程都和一个Handler类实例绑定，而且可以和别的线程一起运行，相互通信。<br>AsyncTask内部也是使用Handler进行处理的，只是不是运行在UI线程而已，它会提供一个channel来和UI线程通信，使用postExecute方法即可实现。</p><ul><li>AsyncTask</li></ul><p>使用AsyncTask是在Android上操作线程最简单的方式，也是最容易出错的方式。</p><ul><li>IntentService</li></ul><p>这种方式需要写更多的代码，但是这是把耗时任务移动到后台的很好的方式，也是我最喜欢的方式。配上使用一个EventBus机制的框架如Otto，这样的话实现IntentService就非常简单了。</p><ul><li>Loader</li></ul><p>关于处理异步任务，还有很多事情需要做，比如从数据库或者内容提供者那里处理一些数据。</p><ul><li>Service</li></ul><p>如果你曾经使用过Service的话，你应该知道这里会有一点误区，其中一个常见的误解就是服务是运行在后台线程的。其实不是！看似运行在后台是因为它们不与UI组件关联，但是它们（默认）是运行在UI线程上的……所以默认运行在UI线程上，甚至在上面没有UI部件。</p><h3 id=\"Android进程\"><a href=\"#Android进程\" class=\"headerlink\" title=\"Android进程\"></a>Android进程</h3><p>Android会根据进程中运行的组件类别以及组件的状态来判断该进程的重要性，Android会首先停止那些不重要的进程。按照重要性从高到低一共有五个级别：</p><p><strong>前台进程 &gt; 可见进程 &gt; 服务进程 &gt; 后台进程 &gt; 空进程</strong></p><p>空进程：未运行任何程序组件。运行这些进程的唯一原因是作为一个缓存，缩短下次程序需要重新使用的启动时间。系统经常中止这些进程，这样可以调节程序缓存和系统缓存的平衡。</p><p>Android 对进程的重要性评级的时候，选取它最高的级别。另外，当被另外的一个进程依赖的时候，某个进程的级别可能会增高。一个为其他进程服务的进程永远不会比被服务的进程重要级低。因为服务进程比后台activity进程重要级高，因此一个要进行耗时工作的activity最好启动一个service来做这个工作，而不是开启一个子进程――特别是这个操作需要的时间比activity存在的时间还要长的时候。例如，在后台播放音乐，向网上上传摄像头拍到的图片，使用service可以使进程最少获取到“服务进程”级别的重要级，而不用考虑activity目前是什么状态。broadcast receivers做费时的工作的时候，也应该启用一个服务而不是开一个线程。</p><h4 id=\"Android的单线程模型\"><a href=\"#Android的单线程模型\" class=\"headerlink\" title=\"Android的单线程模型\"></a>Android的单线程模型</h4><p>Android UI操作并不是线程安全的并且这些操作必须在UI线程中执行。</p><hr><h3 id=\"Message-Queue\"><a href=\"#Message-Queue\" class=\"headerlink\" title=\"Message Queue\"></a>Message Queue</h3><p><strong>Message Queue是一个消息队列，用来存放通过Handler发布的消息。</strong> 消息队列通常附属于某一个创建它的线程，可以通过Looper.myQueue()得到当前线程的消息队列。Android在第一次启动程序时会为UI thread创建一个关联的消息队列，用来管理程序的一些上层组件，activities，broadcase receivers等等。你可以在自己的子线程中创建Handler与UI thread通讯。</p><p>注：产生一个Message对象，可以new，也可以使用<code>Message.obtain()</code>方法；两者都可以，但是更建议使用obtain方法，因为Message内部维护了一个Message池用于Message的复用，避免使用new 重新分配内存。</p><p><code>Message.obtain()</code>源码：<br></p><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\"> * Return a new Message instance from the global pool. Allows us to</span></div><div class=\"line\"><span class=\"comment\"> * avoid allocating new objects in many cases.</span></div><div class=\"line\"><span class=\"comment\"> */</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Message <span class=\"title\">obtain</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">synchronized</span> (sPoolSync) &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (sPool != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">            Message m = sPool;</div><div class=\"line\">            sPool = m.next;</div><div class=\"line\">            m.next = <span class=\"keyword\">null</span>;</div><div class=\"line\">            m.flags = <span class=\"number\">0</span>; <span class=\"comment\">// clear in-use flag</span></div><div class=\"line\">            sPoolSize--;</div><div class=\"line\">            <span class=\"keyword\">return</span> m;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Message();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure><p></p><h3 id=\"Hanlder\"><a href=\"#Hanlder\" class=\"headerlink\" title=\"Hanlder\"></a>Hanlder</h3><p>Handler处理者，是Message的主要处理者，负责Message的发送，Message内容的执行处理。后台线程就是通过传进来的Handler对象引用来<code>sendMessage(Message)</code>。而使用Handler，需要implement 该类的<code>handleMessage(Message)</code>方法，它是处理这些Message的操作内容，例如Update UI。通常需要子类化Handler来实现handleMessage方法。</p><p><strong>Handler实例化时，会首先得到当前线程中保存的Looper实例，进而与Looper实例中的MessageQueue想关联。也就是与当前线程绑定。</strong></p><p>主要的方法有：<br></p><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"keyword\">boolean</span> <span class=\"title\">sendMessage</span><span class=\"params\">(Message msg)</span></span></div></pre></td></tr></table></figure><p></p><p>把消息放入该Handler所 关联的消息队列，放置在所有当前时间前未被处理的消息后。</p><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">handleMessage</span><span class=\"params\">(Message msg)</span></span></div></pre></td></tr></table></figure><p>关联该消息队列的线 程将通过调用Handler的handleMessage方 法来接收和处理消息，通常需要子类化Handler来 实现handleMessage。</p><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">Activity</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// ...</span></div><div class=\"line\">    <span class=\"comment\">// all standard stuff</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">// ...</span></div><div class=\"line\">        <span class=\"comment\">// all standard stuff</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">// we're creating a new handler here</span></div><div class=\"line\">        <span class=\"comment\">// and we're in the UI Thread (default)</span></div><div class=\"line\">        <span class=\"comment\">// so this Handler is associated with the UI thread</span></div><div class=\"line\">        Handler mHandler = <span class=\"keyword\">new</span> Handler();</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">// I want to start doing something really long</span></div><div class=\"line\">        <span class=\"comment\">// which means I should run the fella in another thread.</span></div><div class=\"line\">        <span class=\"comment\">// I do that by sending a message - in the form of another runnable object</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">// But first, I'm going to create a Runnable object or a message for this</span></div><div class=\"line\">        Runnable mRunnableOnSeparateThread = <span class=\"keyword\">new</span> Runnable() &#123;</div><div class=\"line\">            <span class=\"meta\">@Override</span></div><div class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span> <span class=\"params\">()</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">                <span class=\"comment\">// do some long operation</span></div><div class=\"line\">                longOperation();</div><div class=\"line\"></div><div class=\"line\">                <span class=\"comment\">// After mRunnableOnSeparateThread is done with it's job,</span></div><div class=\"line\">                <span class=\"comment\">// I need to tell the user that i'm done</span></div><div class=\"line\">                <span class=\"comment\">// which means I need to send a message back to the UI thread</span></div><div class=\"line\"></div><div class=\"line\">                <span class=\"comment\">// who do we know that's associated with the UI thread?</span></div><div class=\"line\">                mHandler.post(<span class=\"keyword\">new</span> Runnable()&#123;</div><div class=\"line\">                    <span class=\"meta\">@Override</span></div><div class=\"line\">                    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">                        <span class=\"comment\">// do some UI related thing</span></div><div class=\"line\">                        <span class=\"comment\">// like update a progress bar or TextView</span></div><div class=\"line\">                        <span class=\"comment\">// ....</span></div><div class=\"line\">                    &#125;</div><div class=\"line\">                &#125;);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">// Cool but I've not executed the mRunnableOnSeparateThread yet</span></div><div class=\"line\">        <span class=\"comment\">// I've only defined the message to be sent</span></div><div class=\"line\">        <span class=\"comment\">// When I execute it though, I want it to be in a different thread</span></div><div class=\"line\">        <span class=\"comment\">// that was the whole point.</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">new</span> Thread(mRunnableOnSeparateThread).start();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure><h3 id=\"Looper\"><a href=\"#Looper\" class=\"headerlink\" title=\"Looper\"></a>Looper</h3><p>Looper是每条线程里的Message Queue的管家。Android没有Global的Message Queue，而Android会自动替主线程(UI线程)建立Message Queue，但在子线程里并没有建立Message Queue。所以调用<code>Looper.getMainLooper()</code>得到的主线程的Looper不为NULL，但调用<code>Looper.myLooper()</code>得到当前线程的Looper就有可能为NULL。</p><p>1) 可以通过Looper类的静态方法<code>Looper.myLooper</code>得到当前线程的Looper实例，如果当前线程未关联一个Looper实例，该方法将返回空。</p><p>2) 可以通过静态方法<code>Looper.getMainLooper()</code>方法得到主线程的Looper实例</p><ul><li>首先<code>Looper.prepare()</code>在本线程中保存一个Looper实例，然后该实例中保存一个MessageQueue对象；因为Looper.prepare()在一个线程中只能调用一次，所以MessageQueue在一个线程中只会存在一个。</li><li><code>Looper.loop()</code>会让当前线程进入一个无限循环，不端从MessageQueue的实例中读取消息，然后回调<code>msg.target.dispatchMessage(msg)</code>方法。</li><li>Handler的构造方法，会首先得到当前线程中保存的Looper实例，进而与Looper实例中的MessageQueue想关联。</li><li>Handler的sendMessage方法，会给msg的target赋值为handler自身，然后加入MessageQueue中。</li><li>在构造Handler实例时，我们会重写handleMessage方法，也就是<code>msg.target.dispatchMessage(msg)</code>最终调用的方法。</li></ul><hr><h2 id=\"多线程\"><a href=\"#多线程\" class=\"headerlink\" title=\"多线程\"></a>多线程</h2><h3 id=\"Hanlder-Thread\"><a href=\"#Hanlder-Thread\" class=\"headerlink\" title=\"Hanlder + Thread\"></a>Hanlder + Thread</h3><p>Handler可以把一个Message对象或者Runnable对象压入到消息队列中，进而在UI线程中获取Message或者执行Runnable对象，Handler把压入消息队列有两类方式，Post和sendMessage：</p><p>post:<br></p><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyThread</span> <span class=\"keyword\">extends</span> <span class=\"title\">Thread</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">      <span class=\"meta\">@Override</span></div><div class=\"line\">      <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">          <span class=\"keyword\">super</span>.run();</div><div class=\"line\">          <span class=\"comment\">//... 子线程</span></div><div class=\"line\">          mHandler.post(<span class=\"keyword\">new</span> Runnable() &#123;</div><div class=\"line\">              <span class=\"meta\">@Override</span></div><div class=\"line\">              <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">                  <span class=\"comment\">//... UI线程</span></div><div class=\"line\">              &#125;</div><div class=\"line\">          &#125;);</div><div class=\"line\">      &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure><p></p><p>sendMessage:<br></p><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyThread</span> <span class=\"keyword\">extends</span> <span class=\"title\">Thread</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">      <span class=\"meta\">@Override</span></div><div class=\"line\">      <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">          <span class=\"keyword\">super</span>.run();</div><div class=\"line\">          <span class=\"comment\">//... 子线程</span></div><div class=\"line\">          mHandler.sendMessage(Message.obtain());</div><div class=\"line\">      &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">mHandler = <span class=\"keyword\">new</span> Handler()&#123;</div><div class=\"line\">      <span class=\"meta\">@Override</span></div><div class=\"line\">      <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">handleMessage</span><span class=\"params\">(Message msg)</span> </span>&#123;</div><div class=\"line\">          <span class=\"keyword\">super</span>.handleMessage(msg);</div><div class=\"line\">          <span class=\"comment\">//...</span></div><div class=\"line\">      &#125;</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure><p></p><h3 id=\"AsyncTask\"><a href=\"#AsyncTask\" class=\"headerlink\" title=\"AsyncTask\"></a>AsyncTask</h3><p>AsyncTask是android提供的轻量级的异步类,可以直接继承AsyncTask，在类中实现异步操作，并提供接口反馈当前异步执行的程度(可以通过接口实现UI进度更新)，最后反馈执行的结果给UI主线程。</p><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">new</span> AsyncTask&lt;Integer, Integer, String&gt;() &#123;</div><div class=\"line\"></div><div class=\"line\">           <span class=\"meta\">@Override</span></div><div class=\"line\">           <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onPreExecute</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">               <span class=\"keyword\">super</span>.onPreExecute();</div><div class=\"line\">               <span class=\"comment\">//第一个执行方法</span></div><div class=\"line\">           &#125;</div><div class=\"line\"></div><div class=\"line\">           <span class=\"meta\">@Override</span></div><div class=\"line\">           <span class=\"function\"><span class=\"keyword\">protected</span> String <span class=\"title\">doInBackground</span><span class=\"params\">(Integer... params)</span> </span>&#123;</div><div class=\"line\">               <span class=\"comment\">//第二个执行方法,onPreExecute()执行完后执行</span></div><div class=\"line\">               <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">           &#125;</div><div class=\"line\"></div><div class=\"line\">           <span class=\"meta\">@Override</span></div><div class=\"line\">           <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onProgressUpdate</span><span class=\"params\">(Integer... values)</span> </span>&#123;</div><div class=\"line\">               <span class=\"keyword\">super</span>.onProgressUpdate(values);</div><div class=\"line\">               <span class=\"comment\">//这个函数在doInBackground调用,获取进度</span></div><div class=\"line\">           &#125;</div><div class=\"line\"></div><div class=\"line\">           <span class=\"meta\">@Override</span></div><div class=\"line\">           <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onPostExecute</span><span class=\"params\">(String s)</span> </span>&#123;</div><div class=\"line\">               <span class=\"keyword\">super</span>.onPostExecute(s);</div><div class=\"line\">               <span class=\"comment\">//doInBackground返回时触发，换句话说，就是doInBackground执行完后触发</span></div><div class=\"line\">               <span class=\"comment\">//这里的result就是上面doInBackground执行后的返回值，所以这里是\"执行完毕\"</span></div><div class=\"line\">           &#125;</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure><h3 id=\"ThreadPoolExecutor\"><a href=\"#ThreadPoolExecutor\" class=\"headerlink\" title=\"ThreadPoolExecutor\"></a>ThreadPoolExecutor</h3><p>ThreadPoolExecutor提供了一组线程池，可以管理多个线程并行执行。这样一方面减少了每个并行任务独自建立线程的开销，另一方面可以管理多个并发线程的公共资源，从而提高了多线程的效率。所以ThreadPoolExecutor比较适合一组任务的执行。Executors利用工厂模式对ThreadPoolExecutor进行了封装，使用起来更加方便。</p><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">Executors.newFixedThreadPool()</div><div class=\"line\"><span class=\"comment\">//创建一个定长的线程池，每提交一个任务就创建一个线程，直到达到池的最大长度，这时线程池会保持长度不再变化</span></div><div class=\"line\">Executors.newCachedThreadPool()</div><div class=\"line\"><span class=\"comment\">//创建一个可缓存的线程池，如果当前线程池的长度超过了处理的需要时，它可以灵活的回收空闲的线程，当需要增加时，</span></div><div class=\"line\"><span class=\"comment\">//它可以灵活的添加新的线程，而不会对池的长度作任何限制</span></div><div class=\"line\">Executors.newScheduledThreadPool()</div><div class=\"line\"><span class=\"comment\">//创建一个定长的线程池，而且支持定时的以及周期性的任务执行，类似于Timer</span></div><div class=\"line\">Executors.newSingleThreadExecutor()</div><div class=\"line\"><span class=\"comment\">//创建一个单线程化的executor，它只创建唯一的worker线程来执行任务</span></div></pre></td></tr></table></figure><h3 id=\"IntentService\"><a href=\"#IntentService\" class=\"headerlink\" title=\"IntentService\"></a>IntentService</h3><p>IntentService继承自Service，是一个经过包装的轻量级的Service，用来接收并处理通过Intent传递的异步请求。客户端通过调用startService(Intent)启动一个IntentService，利用一个work线程依次处理顺序过来的请求，处理完成后自动结束Service。</p><p>IntentService 继承自普通 Service 同时又在内部创建了一个 HandlerThread，在 onHandlerIntent()的回调里面处理扔到 IntentService 的任务。所以 IntentService 就不仅仅具备了异步线程的特性，还同时保留了 Service 不受主页面生命周期影响的特点。</p><p>使用 IntentService 需要特别留意以下几点：</p><ul><li><p>首先，因为 IntentService 内置的是 HandlerThread 作为异步线程，所以每一个交给 IntentService 的任务都将以队列的方式逐个被执行到，一旦队列中有某个任务执行时间过长，那么就会导致后续的任务都会被延迟处理。</p></li><li><p>其次，通常使用到 IntentService 的时候，我们会结合使用 BroadcastReceiver 把工作线程的任务执行结果返回给主 UI 线程。使用广播容易引起性能问题，我们可以使用 LocalBroadcastManager 来发送只在程序内部传递的广播，从而提升广播的性能。我们也可以使用 runOnUiThread() 快速回调到主 UI 线程。</p></li><li><p>最后，包含正在运行的 IntentService 的程序相比起纯粹的后台程序更不容易被系统杀死，该程序的优先级是介于前台程序与纯后台程序之间的。</p></li></ul><hr><h3 id=\"View-post\"><a href=\"#View-post\" class=\"headerlink\" title=\"View.post()\"></a>View.post()</h3><p><code>View.post(Runnable)</code>方法。在post(Runnable action)方法里，View获得当前线程（即UI线程）的Handler，然后将action对象post到Handler里。在Handler里，它将传递过来的action对象包装成一个Message（Message的callback为action），然后将其投入UI线程的消息循环中。在Handler再次处理该Message时，有一条分支（未解释的那条）就是为它所设，直接调用runnable的run方法。而此时，已经路由到UI线程里，因此，我们可以毫无顾虑的来更新UI。</p><h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"http://www.cppblog.com/fwxjj/archive/2010/05/31/116787.html\" target=\"_blank\" rel=\"external\">浅析Android线程模型</a></p><p><a href=\"http://android.blog.51cto.com/268543/343823\" target=\"_blank\" rel=\"external\">有关Android线程的学习</a></p><p><a href=\"http://www.jianshu.com/p/2b634a7c49ec\" target=\"_blank\" rel=\"external\">Android 多线程的四种方式</a></p><p><a href=\"http://www.cnblogs.com/bugly/p/5519510.html\" target=\"_blank\" rel=\"external\">Android性能优化典范之多线程篇</a></p>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Android线程知识整理\"><a href=\"#Android线程知识整理\" class=\"headerlink\" title=\"Android线程知识整理\"></a>Android线程知识整理</h2><ul><li>Handler</li></ul><p>每个线程都和一个Handler类实例绑定，而且可以和别的线程一起运行，相互通信。<br>AsyncTask内部也是使用Handler进行处理的，只是不是运行在UI线程而已，它会提供一个channel来和UI线程通信，使用postExecute方法即可实现。</p><ul><li>AsyncTask</li></ul><p>使用AsyncTask是在Android上操作线程最简单的方式，也是最容易出错的方式。</p><ul><li>IntentService</li></ul><p>这种方式需要写更多的代码，但是这是把耗时任务移动到后台的很好的方式，也是我最喜欢的方式。配上使用一个EventBus机制的框架如Otto，这样的话实现IntentService就非常简单了。</p><ul><li>Loader</li></ul><p>关于处理异步任务，还有很多事情需要做，比如从数据库或者内容提供者那里处理一些数据。</p><ul><li>Service</li></ul><p>如果你曾经使用过Service的话，你应该知道这里会有一点误区，其中一个常见的误解就是服务是运行在后台线程的。其实不是！看似运行在后台是因为它们不与UI组件关联，但是它们（默认）是运行在UI线程上的……所以默认运行在UI线程上，甚至在上面没有UI部件。</p><h3 id=\"Android进程\"><a href=\"#Android进程\" class=\"headerlink\" title=\"Android进程\"></a>Android进程</h3><p>Android会根据进程中运行的组件类别以及组件的状态来判断该进程的重要性，Android会首先停止那些不重要的进程。按照重要性从高到低一共有五个级别：</p><p><strong>前台进程 &gt; 可见进程 &gt; 服务进程 &gt; 后台进程 &gt; 空进程</strong></p><p>空进程：未运行任何程序组件。运行这些进程的唯一原因是作为一个缓存，缩短下次程序需要重新使用的启动时间。系统经常中止这些进程，这样可以调节程序缓存和系统缓存的平衡。</p><p>Android 对进程的重要性评级的时候，选取它最高的级别。另外，当被另外的一个进程依赖的时候，某个进程的级别可能会增高。一个为其他进程服务的进程永远不会比被服务的进程重要级低。因为服务进程比后台activity进程重要级高，因此一个要进行耗时工作的activity最好启动一个service来做这个工作，而不是开启一个子进程――特别是这个操作需要的时间比activity存在的时间还要长的时候。例如，在后台播放音乐，向网上上传摄像头拍到的图片，使用service可以使进程最少获取到“服务进程”级别的重要级，而不用考虑activity目前是什么状态。broadcast receivers做费时的工作的时候，也应该启用一个服务而不是开一个线程。</p><h4 id=\"Android的单线程模型\"><a href=\"#Android的单线程模型\" class=\"headerlink\" title=\"Android的单线程模型\"></a>Android的单线程模型</h4><p>Android UI操作并不是线程安全的并且这些操作必须在UI线程中执行。</p><hr><h3 id=\"Message-Queue\"><a href=\"#Message-Queue\" class=\"headerlink\" title=\"Message Queue\"></a>Message Queue</h3><p><strong>Message Queue是一个消息队列，用来存放通过Handler发布的消息。</strong> 消息队列通常附属于某一个创建它的线程，可以通过Looper.myQueue()得到当前线程的消息队列。Android在第一次启动程序时会为UI thread创建一个关联的消息队列，用来管理程序的一些上层组件，activities，broadcase receivers等等。你可以在自己的子线程中创建Handler与UI thread通讯。</p><p>注：产生一个Message对象，可以new，也可以使用<code>Message.obtain()</code>方法；两者都可以，但是更建议使用obtain方法，因为Message内部维护了一个Message池用于Message的复用，避免使用new 重新分配内存。</p><p><code>Message.obtain()</code>源码：<br></p><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\"> * Return a new Message instance from the global pool. Allows us to</span></div><div class=\"line\"><span class=\"comment\"> * avoid allocating new objects in many cases.</span></div><div class=\"line\"><span class=\"comment\"> */</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Message <span class=\"title\">obtain</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">synchronized</span> (sPoolSync) &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (sPool != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">            Message m = sPool;</div><div class=\"line\">            sPool = m.next;</div><div class=\"line\">            m.next = <span class=\"keyword\">null</span>;</div><div class=\"line\">            m.flags = <span class=\"number\">0</span>; <span class=\"comment\">// clear in-use flag</span></div><div class=\"line\">            sPoolSize--;</div><div class=\"line\">            <span class=\"keyword\">return</span> m;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Message();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure><p></p><h3 id=\"Hanlder\"><a href=\"#Hanlder\" class=\"headerlink\" title=\"Hanlder\"></a>Hanlder</h3><p>Handler处理者，是Message的主要处理者，负责Message的发送，Message内容的执行处理。后台线程就是通过传进来的Handler对象引用来<code>sendMessage(Message)</code>。而使用Handler，需要implement 该类的<code>handleMessage(Message)</code>方法，它是处理这些Message的操作内容，例如Update UI。通常需要子类化Handler来实现handleMessage方法。</p><p><strong>Handler实例化时，会首先得到当前线程中保存的Looper实例，进而与Looper实例中的MessageQueue想关联。也就是与当前线程绑定。</strong></p><p>主要的方法有：<br></p><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"keyword\">boolean</span> <span class=\"title\">sendMessage</span><span class=\"params\">(Message msg)</span></span></div></pre></td></tr></table></figure><p></p><p>把消息放入该Handler所 关联的消息队列，放置在所有当前时间前未被处理的消息后。</p><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">handleMessage</span><span class=\"params\">(Message msg)</span></span></div></pre></td></tr></table></figure><p>关联该消息队列的线 程将通过调用Handler的handleMessage方 法来接收和处理消息，通常需要子类化Handler来 实现handleMessage。</p><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">Activity</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// ...</span></div><div class=\"line\">    <span class=\"comment\">// all standard stuff</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">// ...</span></div><div class=\"line\">        <span class=\"comment\">// all standard stuff</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">// we're creating a new handler here</span></div><div class=\"line\">        <span class=\"comment\">// and we're in the UI Thread (default)</span></div><div class=\"line\">        <span class=\"comment\">// so this Handler is associated with the UI thread</span></div><div class=\"line\">        Handler mHandler = <span class=\"keyword\">new</span> Handler();</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">// I want to start doing something really long</span></div><div class=\"line\">        <span class=\"comment\">// which means I should run the fella in another thread.</span></div><div class=\"line\">        <span class=\"comment\">// I do that by sending a message - in the form of another runnable object</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">// But first, I'm going to create a Runnable object or a message for this</span></div><div class=\"line\">        Runnable mRunnableOnSeparateThread = <span class=\"keyword\">new</span> Runnable() &#123;</div><div class=\"line\">            <span class=\"meta\">@Override</span></div><div class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span> <span class=\"params\">()</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">                <span class=\"comment\">// do some long operation</span></div><div class=\"line\">                longOperation();</div><div class=\"line\"></div><div class=\"line\">                <span class=\"comment\">// After mRunnableOnSeparateThread is done with it's job,</span></div><div class=\"line\">                <span class=\"comment\">// I need to tell the user that i'm done</span></div><div class=\"line\">                <span class=\"comment\">// which means I need to send a message back to the UI thread</span></div><div class=\"line\"></div><div class=\"line\">                <span class=\"comment\">// who do we know that's associated with the UI thread?</span></div><div class=\"line\">                mHandler.post(<span class=\"keyword\">new</span> Runnable()&#123;</div><div class=\"line\">                    <span class=\"meta\">@Override</span></div><div class=\"line\">                    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">                        <span class=\"comment\">// do some UI related thing</span></div><div class=\"line\">                        <span class=\"comment\">// like update a progress bar or TextView</span></div><div class=\"line\">                        <span class=\"comment\">// ....</span></div><div class=\"line\">                    &#125;</div><div class=\"line\">                &#125;);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">// Cool but I've not executed the mRunnableOnSeparateThread yet</span></div><div class=\"line\">        <span class=\"comment\">// I've only defined the message to be sent</span></div><div class=\"line\">        <span class=\"comment\">// When I execute it though, I want it to be in a different thread</span></div><div class=\"line\">        <span class=\"comment\">// that was the whole point.</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">new</span> Thread(mRunnableOnSeparateThread).start();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure><h3 id=\"Looper\"><a href=\"#Looper\" class=\"headerlink\" title=\"Looper\"></a>Looper</h3><p>Looper是每条线程里的Message Queue的管家。Android没有Global的Message Queue，而Android会自动替主线程(UI线程)建立Message Queue，但在子线程里并没有建立Message Queue。所以调用<code>Looper.getMainLooper()</code>得到的主线程的Looper不为NULL，但调用<code>Looper.myLooper()</code>得到当前线程的Looper就有可能为NULL。</p><p>1) 可以通过Looper类的静态方法<code>Looper.myLooper</code>得到当前线程的Looper实例，如果当前线程未关联一个Looper实例，该方法将返回空。</p><p>2) 可以通过静态方法<code>Looper.getMainLooper()</code>方法得到主线程的Looper实例</p><ul><li>首先<code>Looper.prepare()</code>在本线程中保存一个Looper实例，然后该实例中保存一个MessageQueue对象；因为Looper.prepare()在一个线程中只能调用一次，所以MessageQueue在一个线程中只会存在一个。</li><li><code>Looper.loop()</code>会让当前线程进入一个无限循环，不端从MessageQueue的实例中读取消息，然后回调<code>msg.target.dispatchMessage(msg)</code>方法。</li><li>Handler的构造方法，会首先得到当前线程中保存的Looper实例，进而与Looper实例中的MessageQueue想关联。</li><li>Handler的sendMessage方法，会给msg的target赋值为handler自身，然后加入MessageQueue中。</li><li>在构造Handler实例时，我们会重写handleMessage方法，也就是<code>msg.target.dispatchMessage(msg)</code>最终调用的方法。</li></ul><hr><h2 id=\"多线程\"><a href=\"#多线程\" class=\"headerlink\" title=\"多线程\"></a>多线程</h2><h3 id=\"Hanlder-Thread\"><a href=\"#Hanlder-Thread\" class=\"headerlink\" title=\"Hanlder + Thread\"></a>Hanlder + Thread</h3><p>Handler可以把一个Message对象或者Runnable对象压入到消息队列中，进而在UI线程中获取Message或者执行Runnable对象，Handler把压入消息队列有两类方式，Post和sendMessage：</p><p>post:<br></p><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyThread</span> <span class=\"keyword\">extends</span> <span class=\"title\">Thread</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">      <span class=\"meta\">@Override</span></div><div class=\"line\">      <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">          <span class=\"keyword\">super</span>.run();</div><div class=\"line\">          <span class=\"comment\">//... 子线程</span></div><div class=\"line\">          mHandler.post(<span class=\"keyword\">new</span> Runnable() &#123;</div><div class=\"line\">              <span class=\"meta\">@Override</span></div><div class=\"line\">              <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">                  <span class=\"comment\">//... UI线程</span></div><div class=\"line\">              &#125;</div><div class=\"line\">          &#125;);</div><div class=\"line\">      &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure><p></p><p>sendMessage:<br></p><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyThread</span> <span class=\"keyword\">extends</span> <span class=\"title\">Thread</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">      <span class=\"meta\">@Override</span></div><div class=\"line\">      <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">          <span class=\"keyword\">super</span>.run();</div><div class=\"line\">          <span class=\"comment\">//... 子线程</span></div><div class=\"line\">          mHandler.sendMessage(Message.obtain());</div><div class=\"line\">      &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">mHandler = <span class=\"keyword\">new</span> Handler()&#123;</div><div class=\"line\">      <span class=\"meta\">@Override</span></div><div class=\"line\">      <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">handleMessage</span><span class=\"params\">(Message msg)</span> </span>&#123;</div><div class=\"line\">          <span class=\"keyword\">super</span>.handleMessage(msg);</div><div class=\"line\">          <span class=\"comment\">//...</span></div><div class=\"line\">      &#125;</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure><p></p><h3 id=\"AsyncTask\"><a href=\"#AsyncTask\" class=\"headerlink\" title=\"AsyncTask\"></a>AsyncTask</h3><p>AsyncTask是android提供的轻量级的异步类,可以直接继承AsyncTask，在类中实现异步操作，并提供接口反馈当前异步执行的程度(可以通过接口实现UI进度更新)，最后反馈执行的结果给UI主线程。</p><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">new</span> AsyncTask&lt;Integer, Integer, String&gt;() &#123;</div><div class=\"line\"></div><div class=\"line\">           <span class=\"meta\">@Override</span></div><div class=\"line\">           <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onPreExecute</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">               <span class=\"keyword\">super</span>.onPreExecute();</div><div class=\"line\">               <span class=\"comment\">//第一个执行方法</span></div><div class=\"line\">           &#125;</div><div class=\"line\"></div><div class=\"line\">           <span class=\"meta\">@Override</span></div><div class=\"line\">           <span class=\"function\"><span class=\"keyword\">protected</span> String <span class=\"title\">doInBackground</span><span class=\"params\">(Integer... params)</span> </span>&#123;</div><div class=\"line\">               <span class=\"comment\">//第二个执行方法,onPreExecute()执行完后执行</span></div><div class=\"line\">               <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">           &#125;</div><div class=\"line\"></div><div class=\"line\">           <span class=\"meta\">@Override</span></div><div class=\"line\">           <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onProgressUpdate</span><span class=\"params\">(Integer... values)</span> </span>&#123;</div><div class=\"line\">               <span class=\"keyword\">super</span>.onProgressUpdate(values);</div><div class=\"line\">               <span class=\"comment\">//这个函数在doInBackground调用,获取进度</span></div><div class=\"line\">           &#125;</div><div class=\"line\"></div><div class=\"line\">           <span class=\"meta\">@Override</span></div><div class=\"line\">           <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onPostExecute</span><span class=\"params\">(String s)</span> </span>&#123;</div><div class=\"line\">               <span class=\"keyword\">super</span>.onPostExecute(s);</div><div class=\"line\">               <span class=\"comment\">//doInBackground返回时触发，换句话说，就是doInBackground执行完后触发</span></div><div class=\"line\">               <span class=\"comment\">//这里的result就是上面doInBackground执行后的返回值，所以这里是\"执行完毕\"</span></div><div class=\"line\">           &#125;</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure><h3 id=\"ThreadPoolExecutor\"><a href=\"#ThreadPoolExecutor\" class=\"headerlink\" title=\"ThreadPoolExecutor\"></a>ThreadPoolExecutor</h3><p>ThreadPoolExecutor提供了一组线程池，可以管理多个线程并行执行。这样一方面减少了每个并行任务独自建立线程的开销，另一方面可以管理多个并发线程的公共资源，从而提高了多线程的效率。所以ThreadPoolExecutor比较适合一组任务的执行。Executors利用工厂模式对ThreadPoolExecutor进行了封装，使用起来更加方便。</p><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">Executors.newFixedThreadPool()</div><div class=\"line\"><span class=\"comment\">//创建一个定长的线程池，每提交一个任务就创建一个线程，直到达到池的最大长度，这时线程池会保持长度不再变化</span></div><div class=\"line\">Executors.newCachedThreadPool()</div><div class=\"line\"><span class=\"comment\">//创建一个可缓存的线程池，如果当前线程池的长度超过了处理的需要时，它可以灵活的回收空闲的线程，当需要增加时，</span></div><div class=\"line\"><span class=\"comment\">//它可以灵活的添加新的线程，而不会对池的长度作任何限制</span></div><div class=\"line\">Executors.newScheduledThreadPool()</div><div class=\"line\"><span class=\"comment\">//创建一个定长的线程池，而且支持定时的以及周期性的任务执行，类似于Timer</span></div><div class=\"line\">Executors.newSingleThreadExecutor()</div><div class=\"line\"><span class=\"comment\">//创建一个单线程化的executor，它只创建唯一的worker线程来执行任务</span></div></pre></td></tr></table></figure><h3 id=\"IntentService\"><a href=\"#IntentService\" class=\"headerlink\" title=\"IntentService\"></a>IntentService</h3><p>IntentService继承自Service，是一个经过包装的轻量级的Service，用来接收并处理通过Intent传递的异步请求。客户端通过调用startService(Intent)启动一个IntentService，利用一个work线程依次处理顺序过来的请求，处理完成后自动结束Service。</p><p>IntentService 继承自普通 Service 同时又在内部创建了一个 HandlerThread，在 onHandlerIntent()的回调里面处理扔到 IntentService 的任务。所以 IntentService 就不仅仅具备了异步线程的特性，还同时保留了 Service 不受主页面生命周期影响的特点。</p><p>使用 IntentService 需要特别留意以下几点：</p><ul><li><p>首先，因为 IntentService 内置的是 HandlerThread 作为异步线程，所以每一个交给 IntentService 的任务都将以队列的方式逐个被执行到，一旦队列中有某个任务执行时间过长，那么就会导致后续的任务都会被延迟处理。</p></li><li><p>其次，通常使用到 IntentService 的时候，我们会结合使用 BroadcastReceiver 把工作线程的任务执行结果返回给主 UI 线程。使用广播容易引起性能问题，我们可以使用 LocalBroadcastManager 来发送只在程序内部传递的广播，从而提升广播的性能。我们也可以使用 runOnUiThread() 快速回调到主 UI 线程。</p></li><li><p>最后，包含正在运行的 IntentService 的程序相比起纯粹的后台程序更不容易被系统杀死，该程序的优先级是介于前台程序与纯后台程序之间的。</p></li></ul><hr><h3 id=\"View-post\"><a href=\"#View-post\" class=\"headerlink\" title=\"View.post()\"></a>View.post()</h3><p><code>View.post(Runnable)</code>方法。在post(Runnable action)方法里，View获得当前线程（即UI线程）的Handler，然后将action对象post到Handler里。在Handler里，它将传递过来的action对象包装成一个Message（Message的callback为action），然后将其投入UI线程的消息循环中。在Handler再次处理该Message时，有一条分支（未解释的那条）就是为它所设，直接调用runnable的run方法。而此时，已经路由到UI线程里，因此，我们可以毫无顾虑的来更新UI。</p><h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"http://www.cppblog.com/fwxjj/archive/2010/05/31/116787.html\" target=\"_blank\" rel=\"external\">浅析Android线程模型</a></p><p><a href=\"http://android.blog.51cto.com/268543/343823\" target=\"_blank\" rel=\"external\">有关Android线程的学习</a></p><p><a href=\"http://www.jianshu.com/p/2b634a7c49ec\" target=\"_blank\" rel=\"external\">Android 多线程的四种方式</a></p><p><a href=\"http://www.cnblogs.com/bugly/p/5519510.html\" target=\"_blank\" rel=\"external\">Android性能优化典范之多线程篇</a></p>"},{"title":"变量的解构赋值和展开运算符","date":"2017-09-20T14:13:09.000Z","author":{"name":"悔惜晟","link":"http://huixisheng.github.io"},"_content":"\n本文对[变量的解构赋值(destructing)](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment)和[展开运算符(spread operator ...)](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Spread_operator)做个简单的介绍。\n\n本文首发在[前端开发说](https://huixisheng.github.io/es6-destructuring-and-spread-operator/)\n\n<!--more-->\n\n## 变量的解构赋值 ##\n\n以下例子通过`Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3216.0 Safari/537.36`测试。\n\n### 数组赋值 ###\n\n```\nlet [a, b] = [1, 2];\nconsole.log(a); // 1\nconsole.log(b); // 2\n\nlet [a, b, ...rest] = [1, 2, 3, 4, 5];\nconsole.log(a); // 1\nconsole.log(b); // 2\nconsole.log(rest); // [3, 4, 5]\n\n// 不完全解构\nlet [a, b] = [1, 2, 3]\nconsole.log(a); // 1\nconsole.log(b); // 2\n\n// 设置默认值\nlet [a = 1] = []\nconsole.log(a); // 1\n```\n\n### 对象赋值 ###\n\n```\n// 用于提取数据\nconst {a, b, ...rest} = {a:1, b:2, c:3, d:4}\nconsole.log(a); // 1\nconsole.log(b); // 2\nconsole.log(rest); // {c: 3, d: 4}\n```\n\n### 函数参数 ###\n\n```\n// 默认值设置\nfunction fun([a, b = 3]) {\n    return a + b;\n}\nfun([1]) // 4\n\n[[1, 2], [3, 4]].map(([a, b]) => a + b) // [3, 7]\n```\n\n\n## 对象展开运算符 ##\n\n扩展运算符（spread operator ...）将一个数组、类数组、字符串转为用逗号分隔的序列。\n\n最早是在[Vuex](https://vuex.vuejs.org/zh-cn/state.html)文档看到\n\n```\ncomputed: {\n  localComputed () { /* ... */ },\n  // 使用对象展开运算符将此对象混入到外部对象中\n  ...mapState({\n    // ...\n  })\n}\n// 来自: https://vuex.vuejs.org/zh-cn/state.html\n```\n得知是[对象展开运算符](https://github.com/tc39/proposal-object-rest-spread)。查阅资料发现属于ES6变量的解构赋值的内容。说来也惭愧[《ES6 标准入门》](http://es6.ruanyifeng.com/)第1版，第2版都看过，当初看的不深入，很多知识点都有漏洞。而今天在封装`Vue组件`的时候，如下代码看的甚是变扭，ES6模块和CommonJS规范糅杂在一起。\n\n```\nimport components from './components';\n\nconst install = function (Vue) {\n  Object.keys(components).forEach((key) => {\n    Vue.component(key, components[key]);\n  });\n};\n\nif (typeof window !== 'undefined' && window.Vue) {\n  install(window.Vue);\n}\n\nmodule.exports = Object.assign(components, { install });  // eslint-disable-line no-undef\n```\n于是做了如下调整\n\n```\nexport default {\n  install,\n  ...packages,\n};\n\n```\n\nVuex的文档中有介绍对象展开运算符（现处于 ECMASCript 提案 stage-3 阶段）。\n\n```\nThe TC39 categorizes proposals into the following stages:\n\nStage 0 - Strawman: just an idea, possible Babel plugin.\nStage 1 - Proposal: this is worth working on.\nStage 2 - Draft: initial spec.\nStage 3 - Candidate: complete spec and initial browser implementations.\nStage 4 - Finished: will be added to the next yearly release.\n\n摘自文档 https://babeljs.io/docs/plugins/\n```\n\n大致翻译如下:\n```\nStage 0 - Strawman（展示阶段）\nStage 1 - Proposal（征求意见阶段）\nStage 2 - Draft（草案阶段）\nStage 3 - Candidate（候选人阶段）\nStage 4 - Finished（定案阶段）\n进入 2 阶段，基本上都已经确定要发布了。\n\n在 2015 年进入 stage4 的叫做 es2015\n在 2016 年进入 stage4 的叫做 es2016\n以此类推\n\n作者：Yugo\n链接：http://www.jianshu.com/p/41d3f7768095\n```\n\n### 对象合并 ###\n```\nconst a = [1, 2];\nconst b = [3, 4];\nconsole.log(a.concat(b));\nconst c = [...a, ...b]; // [1, 2, 3, 4]\n\nconst a1 = { a: 1};\nconst b2 = { b: 2};\nconsole.log(Object.assign(a1, b2));\nconsole.log({ ...a1, ...b2}); // {a: 1, b: 2}\n```\n\n### 函数传参 ###\n```\nfunction fun(...args) {\n    console.log(args) //  [1, 2]\n}\nfun(1, 2);\n\n\nfunction func2(a, b, c) {\n    console.log(a, b, c) // {a: 1} 3 \"cc\"\n}\nlet rest = [3];\nfunc2({a: 1}, ...rest, 'cc');\n```\n\n### 扩展阅读 ###\n- [展开运算符的 6 种绝妙用法](http://www.zcfy.cc/article/6-great-uses-of-the-spread-operator-3268.html)\n- http://blog.csdn.net/qq_30100043/article/details/53424750\n- [ES6之Spread Operater拷贝对象](https://blog.fundebug.com/2017/07/19/master_object_spread_operator/)\n- [es6 扩展运算符 三个点（...）](http://blog.csdn.net/qq_30100043/article/details/53391308)\n- [第四章 扩展的对象功能](https://sagittarius-rev.gitbooks.io/understanding-ecmascript-6-zh-ver/chapter_4.html)\n\n## 总结 ##\n\n知识点的理解结合具体的项目代码，能快速掌握。不清楚不懂的查漏补缺，just-do-it，对!就是立刻做，这是你知识体系的短板，深挖进去发现会收获很多。\n\n## 参考 ##\n- http://es6.ruanyifeng.com/#docs/destructuring\n- https://github.com/thejameskyle/babel-handbook/blob/master/translations/zh-Hans/user-handbook.md\n- https://excaliburhan.com/post/babel-preset-and-plugins.html\n- https://segmentfault.com/a/1190000010468759\n- https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment","source":"_posts/es6-destructuring-and-spread-operator.md","raw":"title: 变量的解构赋值和展开运算符\ndate: 2017-09-20 22:13:09\nauthor:\n  name: 悔惜晟\n  link: http://huixisheng.github.io\ntags:\n- ES6\n---\n\n本文对[变量的解构赋值(destructing)](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment)和[展开运算符(spread operator ...)](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Spread_operator)做个简单的介绍。\n\n本文首发在[前端开发说](https://huixisheng.github.io/es6-destructuring-and-spread-operator/)\n\n<!--more-->\n\n## 变量的解构赋值 ##\n\n以下例子通过`Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3216.0 Safari/537.36`测试。\n\n### 数组赋值 ###\n\n```\nlet [a, b] = [1, 2];\nconsole.log(a); // 1\nconsole.log(b); // 2\n\nlet [a, b, ...rest] = [1, 2, 3, 4, 5];\nconsole.log(a); // 1\nconsole.log(b); // 2\nconsole.log(rest); // [3, 4, 5]\n\n// 不完全解构\nlet [a, b] = [1, 2, 3]\nconsole.log(a); // 1\nconsole.log(b); // 2\n\n// 设置默认值\nlet [a = 1] = []\nconsole.log(a); // 1\n```\n\n### 对象赋值 ###\n\n```\n// 用于提取数据\nconst {a, b, ...rest} = {a:1, b:2, c:3, d:4}\nconsole.log(a); // 1\nconsole.log(b); // 2\nconsole.log(rest); // {c: 3, d: 4}\n```\n\n### 函数参数 ###\n\n```\n// 默认值设置\nfunction fun([a, b = 3]) {\n    return a + b;\n}\nfun([1]) // 4\n\n[[1, 2], [3, 4]].map(([a, b]) => a + b) // [3, 7]\n```\n\n\n## 对象展开运算符 ##\n\n扩展运算符（spread operator ...）将一个数组、类数组、字符串转为用逗号分隔的序列。\n\n最早是在[Vuex](https://vuex.vuejs.org/zh-cn/state.html)文档看到\n\n```\ncomputed: {\n  localComputed () { /* ... */ },\n  // 使用对象展开运算符将此对象混入到外部对象中\n  ...mapState({\n    // ...\n  })\n}\n// 来自: https://vuex.vuejs.org/zh-cn/state.html\n```\n得知是[对象展开运算符](https://github.com/tc39/proposal-object-rest-spread)。查阅资料发现属于ES6变量的解构赋值的内容。说来也惭愧[《ES6 标准入门》](http://es6.ruanyifeng.com/)第1版，第2版都看过，当初看的不深入，很多知识点都有漏洞。而今天在封装`Vue组件`的时候，如下代码看的甚是变扭，ES6模块和CommonJS规范糅杂在一起。\n\n```\nimport components from './components';\n\nconst install = function (Vue) {\n  Object.keys(components).forEach((key) => {\n    Vue.component(key, components[key]);\n  });\n};\n\nif (typeof window !== 'undefined' && window.Vue) {\n  install(window.Vue);\n}\n\nmodule.exports = Object.assign(components, { install });  // eslint-disable-line no-undef\n```\n于是做了如下调整\n\n```\nexport default {\n  install,\n  ...packages,\n};\n\n```\n\nVuex的文档中有介绍对象展开运算符（现处于 ECMASCript 提案 stage-3 阶段）。\n\n```\nThe TC39 categorizes proposals into the following stages:\n\nStage 0 - Strawman: just an idea, possible Babel plugin.\nStage 1 - Proposal: this is worth working on.\nStage 2 - Draft: initial spec.\nStage 3 - Candidate: complete spec and initial browser implementations.\nStage 4 - Finished: will be added to the next yearly release.\n\n摘自文档 https://babeljs.io/docs/plugins/\n```\n\n大致翻译如下:\n```\nStage 0 - Strawman（展示阶段）\nStage 1 - Proposal（征求意见阶段）\nStage 2 - Draft（草案阶段）\nStage 3 - Candidate（候选人阶段）\nStage 4 - Finished（定案阶段）\n进入 2 阶段，基本上都已经确定要发布了。\n\n在 2015 年进入 stage4 的叫做 es2015\n在 2016 年进入 stage4 的叫做 es2016\n以此类推\n\n作者：Yugo\n链接：http://www.jianshu.com/p/41d3f7768095\n```\n\n### 对象合并 ###\n```\nconst a = [1, 2];\nconst b = [3, 4];\nconsole.log(a.concat(b));\nconst c = [...a, ...b]; // [1, 2, 3, 4]\n\nconst a1 = { a: 1};\nconst b2 = { b: 2};\nconsole.log(Object.assign(a1, b2));\nconsole.log({ ...a1, ...b2}); // {a: 1, b: 2}\n```\n\n### 函数传参 ###\n```\nfunction fun(...args) {\n    console.log(args) //  [1, 2]\n}\nfun(1, 2);\n\n\nfunction func2(a, b, c) {\n    console.log(a, b, c) // {a: 1} 3 \"cc\"\n}\nlet rest = [3];\nfunc2({a: 1}, ...rest, 'cc');\n```\n\n### 扩展阅读 ###\n- [展开运算符的 6 种绝妙用法](http://www.zcfy.cc/article/6-great-uses-of-the-spread-operator-3268.html)\n- http://blog.csdn.net/qq_30100043/article/details/53424750\n- [ES6之Spread Operater拷贝对象](https://blog.fundebug.com/2017/07/19/master_object_spread_operator/)\n- [es6 扩展运算符 三个点（...）](http://blog.csdn.net/qq_30100043/article/details/53391308)\n- [第四章 扩展的对象功能](https://sagittarius-rev.gitbooks.io/understanding-ecmascript-6-zh-ver/chapter_4.html)\n\n## 总结 ##\n\n知识点的理解结合具体的项目代码，能快速掌握。不清楚不懂的查漏补缺，just-do-it，对!就是立刻做，这是你知识体系的短板，深挖进去发现会收获很多。\n\n## 参考 ##\n- http://es6.ruanyifeng.com/#docs/destructuring\n- https://github.com/thejameskyle/babel-handbook/blob/master/translations/zh-Hans/user-handbook.md\n- https://excaliburhan.com/post/babel-preset-and-plugins.html\n- https://segmentfault.com/a/1190000010468759\n- https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment","slug":"es6-destructuring-and-spread-operator","published":1,"updated":"2017-09-20T16:16:44.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9cutinu000ads9likqzk8vm","content":"<p>本文对<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment\" target=\"_blank\" rel=\"external\">变量的解构赋值(destructing)</a>和<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Spread_operator\" target=\"_blank\" rel=\"external\">展开运算符(spread operator …)</a>做个简单的介绍。</p><p>本文首发在<a href=\"https://huixisheng.github.io/es6-destructuring-and-spread-operator/\" target=\"_blank\" rel=\"external\">前端开发说</a></p><a id=\"more\"></a><h2 id=\"变量的解构赋值\"><a href=\"#变量的解构赋值\" class=\"headerlink\" title=\"变量的解构赋值\"></a>变量的解构赋值</h2><p>以下例子通过<code>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3216.0 Safari/537.36</code>测试。</p><h3 id=\"数组赋值\"><a href=\"#数组赋值\" class=\"headerlink\" title=\"数组赋值\"></a>数组赋值</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">let [a, b] = [1, 2];</div><div class=\"line\">console.log(a); // 1</div><div class=\"line\">console.log(b); // 2</div><div class=\"line\"></div><div class=\"line\">let [a, b, ...rest] = [1, 2, 3, 4, 5];</div><div class=\"line\">console.log(a); // 1</div><div class=\"line\">console.log(b); // 2</div><div class=\"line\">console.log(rest); // [3, 4, 5]</div><div class=\"line\"></div><div class=\"line\">// 不完全解构</div><div class=\"line\">let [a, b] = [1, 2, 3]</div><div class=\"line\">console.log(a); // 1</div><div class=\"line\">console.log(b); // 2</div><div class=\"line\"></div><div class=\"line\">// 设置默认值</div><div class=\"line\">let [a = 1] = []</div><div class=\"line\">console.log(a); // 1</div></pre></td></tr></table></figure><h3 id=\"对象赋值\"><a href=\"#对象赋值\" class=\"headerlink\" title=\"对象赋值\"></a>对象赋值</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">// 用于提取数据</div><div class=\"line\">const &#123;a, b, ...rest&#125; = &#123;a:1, b:2, c:3, d:4&#125;</div><div class=\"line\">console.log(a); // 1</div><div class=\"line\">console.log(b); // 2</div><div class=\"line\">console.log(rest); // &#123;c: 3, d: 4&#125;</div></pre></td></tr></table></figure><h3 id=\"函数参数\"><a href=\"#函数参数\" class=\"headerlink\" title=\"函数参数\"></a>函数参数</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">// 默认值设置</div><div class=\"line\">function fun([a, b = 3]) &#123;</div><div class=\"line\">    return a + b;</div><div class=\"line\">&#125;</div><div class=\"line\">fun([1]) // 4</div><div class=\"line\"></div><div class=\"line\">[[1, 2], [3, 4]].map(([a, b]) =&gt; a + b) // [3, 7]</div></pre></td></tr></table></figure><h2 id=\"对象展开运算符\"><a href=\"#对象展开运算符\" class=\"headerlink\" title=\"对象展开运算符\"></a>对象展开运算符</h2><p>扩展运算符（spread operator …）将一个数组、类数组、字符串转为用逗号分隔的序列。</p><p>最早是在<a href=\"https://vuex.vuejs.org/zh-cn/state.html\" target=\"_blank\" rel=\"external\">Vuex</a>文档看到</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">computed: &#123;</div><div class=\"line\">  localComputed () &#123; /* ... */ &#125;,</div><div class=\"line\">  // 使用对象展开运算符将此对象混入到外部对象中</div><div class=\"line\">  ...mapState(&#123;</div><div class=\"line\">    // ...</div><div class=\"line\">  &#125;)</div><div class=\"line\">&#125;</div><div class=\"line\">// 来自: https://vuex.vuejs.org/zh-cn/state.html</div></pre></td></tr></table></figure><p>得知是<a href=\"https://github.com/tc39/proposal-object-rest-spread\" target=\"_blank\" rel=\"external\">对象展开运算符</a>。查阅资料发现属于ES6变量的解构赋值的内容。说来也惭愧<a href=\"http://es6.ruanyifeng.com/\" target=\"_blank\" rel=\"external\">《ES6 标准入门》</a>第1版，第2版都看过，当初看的不深入，很多知识点都有漏洞。而今天在封装<code>Vue组件</code>的时候，如下代码看的甚是变扭，ES6模块和CommonJS规范糅杂在一起。</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">import components from &apos;./components&apos;;</div><div class=\"line\"></div><div class=\"line\">const install = function (Vue) &#123;</div><div class=\"line\">  Object.keys(components).forEach((key) =&gt; &#123;</div><div class=\"line\">    Vue.component(key, components[key]);</div><div class=\"line\">  &#125;);</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\">if (typeof window !== &apos;undefined&apos; &amp;&amp; window.Vue) &#123;</div><div class=\"line\">  install(window.Vue);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">module.exports = Object.assign(components, &#123; install &#125;);  // eslint-disable-line no-undef</div></pre></td></tr></table></figure><p>于是做了如下调整</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">export default &#123;</div><div class=\"line\">  install,</div><div class=\"line\">  ...packages,</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure><p>Vuex的文档中有介绍对象展开运算符（现处于 ECMASCript 提案 stage-3 阶段）。</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">The TC39 categorizes proposals into the following stages:</div><div class=\"line\"></div><div class=\"line\">Stage 0 - Strawman: just an idea, possible Babel plugin.</div><div class=\"line\">Stage 1 - Proposal: this is worth working on.</div><div class=\"line\">Stage 2 - Draft: initial spec.</div><div class=\"line\">Stage 3 - Candidate: complete spec and initial browser implementations.</div><div class=\"line\">Stage 4 - Finished: will be added to the next yearly release.</div><div class=\"line\"></div><div class=\"line\">摘自文档 https://babeljs.io/docs/plugins/</div></pre></td></tr></table></figure><p>大致翻译如下:<br></p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">Stage 0 - Strawman（展示阶段）</div><div class=\"line\">Stage 1 - Proposal（征求意见阶段）</div><div class=\"line\">Stage 2 - Draft（草案阶段）</div><div class=\"line\">Stage 3 - Candidate（候选人阶段）</div><div class=\"line\">Stage 4 - Finished（定案阶段）</div><div class=\"line\">进入 2 阶段，基本上都已经确定要发布了。</div><div class=\"line\"></div><div class=\"line\">在 2015 年进入 stage4 的叫做 es2015</div><div class=\"line\">在 2016 年进入 stage4 的叫做 es2016</div><div class=\"line\">以此类推</div><div class=\"line\"></div><div class=\"line\">作者：Yugo</div><div class=\"line\">链接：http://www.jianshu.com/p/41d3f7768095</div></pre></td></tr></table></figure><p></p><h3 id=\"对象合并\"><a href=\"#对象合并\" class=\"headerlink\" title=\"对象合并\"></a>对象合并</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">const a = [1, 2];</div><div class=\"line\">const b = [3, 4];</div><div class=\"line\">console.log(a.concat(b));</div><div class=\"line\">const c = [...a, ...b]; // [1, 2, 3, 4]</div><div class=\"line\"></div><div class=\"line\">const a1 = &#123; a: 1&#125;;</div><div class=\"line\">const b2 = &#123; b: 2&#125;;</div><div class=\"line\">console.log(Object.assign(a1, b2));</div><div class=\"line\">console.log(&#123; ...a1, ...b2&#125;); // &#123;a: 1, b: 2&#125;</div></pre></td></tr></table></figure><h3 id=\"函数传参\"><a href=\"#函数传参\" class=\"headerlink\" title=\"函数传参\"></a>函数传参</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">function fun(...args) &#123;</div><div class=\"line\">    console.log(args) //  [1, 2]</div><div class=\"line\">&#125;</div><div class=\"line\">fun(1, 2);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">function func2(a, b, c) &#123;</div><div class=\"line\">    console.log(a, b, c) // &#123;a: 1&#125; 3 &quot;cc&quot;</div><div class=\"line\">&#125;</div><div class=\"line\">let rest = [3];</div><div class=\"line\">func2(&#123;a: 1&#125;, ...rest, &apos;cc&apos;);</div></pre></td></tr></table></figure><h3 id=\"扩展阅读\"><a href=\"#扩展阅读\" class=\"headerlink\" title=\"扩展阅读\"></a>扩展阅读</h3><ul><li><a href=\"http://www.zcfy.cc/article/6-great-uses-of-the-spread-operator-3268.html\" target=\"_blank\" rel=\"external\">展开运算符的 6 种绝妙用法</a></li><li><a href=\"http://blog.csdn.net/qq_30100043/article/details/53424750\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/qq_30100043/article/details/53424750</a></li><li><a href=\"https://blog.fundebug.com/2017/07/19/master_object_spread_operator/\" target=\"_blank\" rel=\"external\">ES6之Spread Operater拷贝对象</a></li><li><a href=\"http://blog.csdn.net/qq_30100043/article/details/53391308\" target=\"_blank\" rel=\"external\">es6 扩展运算符 三个点（…）</a></li><li><a href=\"https://sagittarius-rev.gitbooks.io/understanding-ecmascript-6-zh-ver/chapter_4.html\" target=\"_blank\" rel=\"external\">第四章 扩展的对象功能</a></li></ul><h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>知识点的理解结合具体的项目代码，能快速掌握。不清楚不懂的查漏补缺，just-do-it，对!就是立刻做，这是你知识体系的短板，深挖进去发现会收获很多。</p><h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul><li><a href=\"http://es6.ruanyifeng.com/#docs/destructuring\" target=\"_blank\" rel=\"external\">http://es6.ruanyifeng.com/#docs/destructuring</a></li><li><a href=\"https://github.com/thejameskyle/babel-handbook/blob/master/translations/zh-Hans/user-handbook.md\" target=\"_blank\" rel=\"external\">https://github.com/thejameskyle/babel-handbook/blob/master/translations/zh-Hans/user-handbook.md</a></li><li><a href=\"https://excaliburhan.com/post/babel-preset-and-plugins.html\" target=\"_blank\" rel=\"external\">https://excaliburhan.com/post/babel-preset-and-plugins.html</a></li><li><a href=\"https://segmentfault.com/a/1190000010468759\" target=\"_blank\" rel=\"external\">https://segmentfault.com/a/1190000010468759</a></li><li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment\" target=\"_blank\" rel=\"external\">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment</a></li></ul>","site":{"data":{}},"excerpt":"<p>本文对<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment\" target=\"_blank\" rel=\"external\">变量的解构赋值(destructing)</a>和<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Spread_operator\" target=\"_blank\" rel=\"external\">展开运算符(spread operator …)</a>做个简单的介绍。</p><p>本文首发在<a href=\"https://huixisheng.github.io/es6-destructuring-and-spread-operator/\" target=\"_blank\" rel=\"external\">前端开发说</a></p>","more":"<h2 id=\"变量的解构赋值\"><a href=\"#变量的解构赋值\" class=\"headerlink\" title=\"变量的解构赋值\"></a>变量的解构赋值</h2><p>以下例子通过<code>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3216.0 Safari/537.36</code>测试。</p><h3 id=\"数组赋值\"><a href=\"#数组赋值\" class=\"headerlink\" title=\"数组赋值\"></a>数组赋值</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">let [a, b] = [1, 2];</div><div class=\"line\">console.log(a); // 1</div><div class=\"line\">console.log(b); // 2</div><div class=\"line\"></div><div class=\"line\">let [a, b, ...rest] = [1, 2, 3, 4, 5];</div><div class=\"line\">console.log(a); // 1</div><div class=\"line\">console.log(b); // 2</div><div class=\"line\">console.log(rest); // [3, 4, 5]</div><div class=\"line\"></div><div class=\"line\">// 不完全解构</div><div class=\"line\">let [a, b] = [1, 2, 3]</div><div class=\"line\">console.log(a); // 1</div><div class=\"line\">console.log(b); // 2</div><div class=\"line\"></div><div class=\"line\">// 设置默认值</div><div class=\"line\">let [a = 1] = []</div><div class=\"line\">console.log(a); // 1</div></pre></td></tr></table></figure><h3 id=\"对象赋值\"><a href=\"#对象赋值\" class=\"headerlink\" title=\"对象赋值\"></a>对象赋值</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">// 用于提取数据</div><div class=\"line\">const &#123;a, b, ...rest&#125; = &#123;a:1, b:2, c:3, d:4&#125;</div><div class=\"line\">console.log(a); // 1</div><div class=\"line\">console.log(b); // 2</div><div class=\"line\">console.log(rest); // &#123;c: 3, d: 4&#125;</div></pre></td></tr></table></figure><h3 id=\"函数参数\"><a href=\"#函数参数\" class=\"headerlink\" title=\"函数参数\"></a>函数参数</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">// 默认值设置</div><div class=\"line\">function fun([a, b = 3]) &#123;</div><div class=\"line\">    return a + b;</div><div class=\"line\">&#125;</div><div class=\"line\">fun([1]) // 4</div><div class=\"line\"></div><div class=\"line\">[[1, 2], [3, 4]].map(([a, b]) =&gt; a + b) // [3, 7]</div></pre></td></tr></table></figure><h2 id=\"对象展开运算符\"><a href=\"#对象展开运算符\" class=\"headerlink\" title=\"对象展开运算符\"></a>对象展开运算符</h2><p>扩展运算符（spread operator …）将一个数组、类数组、字符串转为用逗号分隔的序列。</p><p>最早是在<a href=\"https://vuex.vuejs.org/zh-cn/state.html\" target=\"_blank\" rel=\"external\">Vuex</a>文档看到</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">computed: &#123;</div><div class=\"line\">  localComputed () &#123; /* ... */ &#125;,</div><div class=\"line\">  // 使用对象展开运算符将此对象混入到外部对象中</div><div class=\"line\">  ...mapState(&#123;</div><div class=\"line\">    // ...</div><div class=\"line\">  &#125;)</div><div class=\"line\">&#125;</div><div class=\"line\">// 来自: https://vuex.vuejs.org/zh-cn/state.html</div></pre></td></tr></table></figure><p>得知是<a href=\"https://github.com/tc39/proposal-object-rest-spread\" target=\"_blank\" rel=\"external\">对象展开运算符</a>。查阅资料发现属于ES6变量的解构赋值的内容。说来也惭愧<a href=\"http://es6.ruanyifeng.com/\" target=\"_blank\" rel=\"external\">《ES6 标准入门》</a>第1版，第2版都看过，当初看的不深入，很多知识点都有漏洞。而今天在封装<code>Vue组件</code>的时候，如下代码看的甚是变扭，ES6模块和CommonJS规范糅杂在一起。</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">import components from &apos;./components&apos;;</div><div class=\"line\"></div><div class=\"line\">const install = function (Vue) &#123;</div><div class=\"line\">  Object.keys(components).forEach((key) =&gt; &#123;</div><div class=\"line\">    Vue.component(key, components[key]);</div><div class=\"line\">  &#125;);</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\">if (typeof window !== &apos;undefined&apos; &amp;&amp; window.Vue) &#123;</div><div class=\"line\">  install(window.Vue);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">module.exports = Object.assign(components, &#123; install &#125;);  // eslint-disable-line no-undef</div></pre></td></tr></table></figure><p>于是做了如下调整</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">export default &#123;</div><div class=\"line\">  install,</div><div class=\"line\">  ...packages,</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure><p>Vuex的文档中有介绍对象展开运算符（现处于 ECMASCript 提案 stage-3 阶段）。</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">The TC39 categorizes proposals into the following stages:</div><div class=\"line\"></div><div class=\"line\">Stage 0 - Strawman: just an idea, possible Babel plugin.</div><div class=\"line\">Stage 1 - Proposal: this is worth working on.</div><div class=\"line\">Stage 2 - Draft: initial spec.</div><div class=\"line\">Stage 3 - Candidate: complete spec and initial browser implementations.</div><div class=\"line\">Stage 4 - Finished: will be added to the next yearly release.</div><div class=\"line\"></div><div class=\"line\">摘自文档 https://babeljs.io/docs/plugins/</div></pre></td></tr></table></figure><p>大致翻译如下:<br></p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">Stage 0 - Strawman（展示阶段）</div><div class=\"line\">Stage 1 - Proposal（征求意见阶段）</div><div class=\"line\">Stage 2 - Draft（草案阶段）</div><div class=\"line\">Stage 3 - Candidate（候选人阶段）</div><div class=\"line\">Stage 4 - Finished（定案阶段）</div><div class=\"line\">进入 2 阶段，基本上都已经确定要发布了。</div><div class=\"line\"></div><div class=\"line\">在 2015 年进入 stage4 的叫做 es2015</div><div class=\"line\">在 2016 年进入 stage4 的叫做 es2016</div><div class=\"line\">以此类推</div><div class=\"line\"></div><div class=\"line\">作者：Yugo</div><div class=\"line\">链接：http://www.jianshu.com/p/41d3f7768095</div></pre></td></tr></table></figure><p></p><h3 id=\"对象合并\"><a href=\"#对象合并\" class=\"headerlink\" title=\"对象合并\"></a>对象合并</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">const a = [1, 2];</div><div class=\"line\">const b = [3, 4];</div><div class=\"line\">console.log(a.concat(b));</div><div class=\"line\">const c = [...a, ...b]; // [1, 2, 3, 4]</div><div class=\"line\"></div><div class=\"line\">const a1 = &#123; a: 1&#125;;</div><div class=\"line\">const b2 = &#123; b: 2&#125;;</div><div class=\"line\">console.log(Object.assign(a1, b2));</div><div class=\"line\">console.log(&#123; ...a1, ...b2&#125;); // &#123;a: 1, b: 2&#125;</div></pre></td></tr></table></figure><h3 id=\"函数传参\"><a href=\"#函数传参\" class=\"headerlink\" title=\"函数传参\"></a>函数传参</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">function fun(...args) &#123;</div><div class=\"line\">    console.log(args) //  [1, 2]</div><div class=\"line\">&#125;</div><div class=\"line\">fun(1, 2);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">function func2(a, b, c) &#123;</div><div class=\"line\">    console.log(a, b, c) // &#123;a: 1&#125; 3 &quot;cc&quot;</div><div class=\"line\">&#125;</div><div class=\"line\">let rest = [3];</div><div class=\"line\">func2(&#123;a: 1&#125;, ...rest, &apos;cc&apos;);</div></pre></td></tr></table></figure><h3 id=\"扩展阅读\"><a href=\"#扩展阅读\" class=\"headerlink\" title=\"扩展阅读\"></a>扩展阅读</h3><ul><li><a href=\"http://www.zcfy.cc/article/6-great-uses-of-the-spread-operator-3268.html\" target=\"_blank\" rel=\"external\">展开运算符的 6 种绝妙用法</a></li><li><a href=\"http://blog.csdn.net/qq_30100043/article/details/53424750\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/qq_30100043/article/details/53424750</a></li><li><a href=\"https://blog.fundebug.com/2017/07/19/master_object_spread_operator/\" target=\"_blank\" rel=\"external\">ES6之Spread Operater拷贝对象</a></li><li><a href=\"http://blog.csdn.net/qq_30100043/article/details/53391308\" target=\"_blank\" rel=\"external\">es6 扩展运算符 三个点（…）</a></li><li><a href=\"https://sagittarius-rev.gitbooks.io/understanding-ecmascript-6-zh-ver/chapter_4.html\" target=\"_blank\" rel=\"external\">第四章 扩展的对象功能</a></li></ul><h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>知识点的理解结合具体的项目代码，能快速掌握。不清楚不懂的查漏补缺，just-do-it，对!就是立刻做，这是你知识体系的短板，深挖进去发现会收获很多。</p><h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul><li><a href=\"http://es6.ruanyifeng.com/#docs/destructuring\" target=\"_blank\" rel=\"external\">http://es6.ruanyifeng.com/#docs/destructuring</a></li><li><a href=\"https://github.com/thejameskyle/babel-handbook/blob/master/translations/zh-Hans/user-handbook.md\" target=\"_blank\" rel=\"external\">https://github.com/thejameskyle/babel-handbook/blob/master/translations/zh-Hans/user-handbook.md</a></li><li><a href=\"https://excaliburhan.com/post/babel-preset-and-plugins.html\" target=\"_blank\" rel=\"external\">https://excaliburhan.com/post/babel-preset-and-plugins.html</a></li><li><a href=\"https://segmentfault.com/a/1190000010468759\" target=\"_blank\" rel=\"external\">https://segmentfault.com/a/1190000010468759</a></li><li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment\" target=\"_blank\" rel=\"external\">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment</a></li></ul>"},{"title":"开篇如何通过hexo创建blog","date":"2017-09-08T15:58:19.000Z","author":{"name":"悔惜晟","link":"http://huixisheng.github.io"},"_content":"\n此为团队博客开篇，让技术部的知识沉淀下来，这是一个好的开始。算是技术部的一个坑，让大家都参与进来。本文介绍通过hexo如何搭建技术博客。\n\n为何选择hexo，支持`markdown`，最主要是先有个平台有内容产出，有内容了什么都好说，选择其他框架、自定义主题或者自行开发一个适合自己的博客系统。\n\n## 安装 ##\n\n```bash\n$ npm install -g hexo-cli\n```\n**注意：**安装之前先安装nodejs ，下载地址 https://nodejs.org/en/\n\n## 初始化 ##\n\n```bash\n$ hexo init\n$ git init // 添加仓库\n$ git remote add origin git@github.com:cosmeapp/cosmeapp.github.com.git\n$ git clone https://github.com/iissnan/hexo-theme-next themes/next // 安装主题，记得切换到hexo站点目录下\n```\n\n### 创建文章 ###\n\n```bash\n$ hexo new post create-hexo-blog\n$ hexo new weekly  weekly-2017-05-06 // 创建周刊模板\n```\n\n### 本地预览 ###\n\n```bash\n$ hexo server -g\n```\n\n### 构建发布 ###\n\n```bash\n$ hexo deploy -g\n```\n\n## 插件 ##\n\n### hexo-deployer-git ###\n\n>Git deployer plugin for Hexo.\n\n```bash\n$ npm install hexo-deployer-git --save-dev\n```\n\n配置`_config.yml`\n\n```\ndeploy:\n  type: git\n  repo: git@github.com:cosmeapp/cosmeapp.github.com.git\n  branch: master\n```\n\n### 配置主题 ###\n\n```bash\n$ git clone https://github.com/iissnan/hexo-theme-next themes/next\n```\n\n配置`_config.yml`\n\n```\ntheme: next\n```\n\n其他具体的配置参考[http://theme-next.iissnan.com/](http://theme-next.iissnan.com/)\n\n### [Gitalk](https://github.com/gitalk/gitalk) ###\n>Gitalk 是一个基于 Github Issue 和 Preact 开发的评论插件\n\n因公司业务调整多说项目于2017年6月1日正式关停服务。于是考虑使用`Gitalk`代替。\n\n`NexT`主题集成`Gittalk`，这个可以发个pr\n\n```\n+++ b/layout/_partials/comments.swig\n@@ -32,4 +32,5 @@\n       <div id=\"vcomments\"></div>\n     {% endif %}\n   </div>\n+  <div id=\"gitalk-container\"></div>\n {% endif %}\n\n+++ b/layout/_third-party/comments/index.swig\n {% include 'valine.swig' %}\n+{% include 'gittalk.swig' %}\n```\n\n```\n{% if page.comments %}\n<link rel=\"stylesheet\" href=\"/gitalk/gitalk.css\">\n<script src=\"/gitalk/gitalk.min.js\"></script>\n\n<script>\nvar gitalk = new Gitalk({\n  clientID: 'cb9d990636e84547cadb',\n  clientSecret: '78036da2ca2985c3df477c76c407a120ae664368',\n  repo: 'cosmeapp.github.com',\n  owner: 'cosmeapp',\n  id: '',\n  title: '{{ page.title }}',\n  body: '{{ page.permalink }}\\n\\n{{ page.title }}',\n  labels: ['Gitalk'{% if page.tags and page.tags.length %}{% for tag in page.tags %},'{{ tag.name }}'{% endfor %}{% endif %}],\n  admin: ['huixisheng'],\n  distractionFreeMode: true\n});\n\ngitalk.render('gitalk-container');\n</script>\n{% endif %}\n```\n\n不想设置`id`成为`labels`。于是下载`Gitalk`源码修改，但构建的时候报错\n\n```\nERROR in ./src/index.js\nModule parse failed: ~/gitalk/src/index.js Unexpected token (23:18)\nYou may need an appropriate loader to handle this file type.\n|     }\n|\n|     return render(<GitalkComponent options={this.options}/>, node)\n|   }\n| }\n @ multi (webpack)-dev-server/client?http://localhost:8000 webpack/hot/dev-server ./index.js\n```\n\n很奇怪，看了相关`webpack`配置并没有什么问题，提了[issue](https://github.com/gitalk/gitalk/issues/23)。当然提issue前努力尝试去解决问题，开源的项目不可能连构建都不行。\n\n- 尝试升级相关的dependencies，推荐`npm-check`\n- 删除`node_moduels`,尝试 `npm install`和 `yarn install`\n- 问题初步怀疑是`jsx`不解析，但是`babel-loader`配置没问题\n- google `You may need an appropriate loader to handle this file type.` 尝试添加了`webpack`、`babel-loader`、`jsx`等关键词。折腾到凌晨2点多，无果，媳妇喊睡觉\n- 第二天起来，开始尝试写最简单的[demo](https://github.com/huixisheng/lab/tree/gh-pages/React)，demo跑起来没有问题，对比demo的配置，配置无差。后面发现`Gitalk`的项目是`clone`在`node_modules`目录下，换了目录。项目终于可以跑起来了 @todo 深入为何在`node_modules`目录下不行？初步设想，应该是`nodejs`查找依赖，通过配置`webpack`可以解决\n\n问题的出现不是偶然，任何问题的出现都是有原因，有可能是一个字母，不同的环境。当出现不可思议的问题时候，需要静下心，慢慢体会碰到问题的苦恼，最终享受问题解决的快乐。\n\n移除`id`添加为`labels`\n```\n+++ b/src/gitalk.jsx\n@@ -184,7 +184,8 @@ class GitalkComponent extends Component {\n       params: {\n         client_id: clientID,\n         client_secret: clientSecret,\n-        labels: labels.concat(id).join(',')\n+        labels: labels.join(',')\n       }\n     }).then(res => {\n     return axiosGithub.post(`/repos/${owner}/${repo}/issues`, {\n       title,\n-      labels: labels.concat(id),\n+      labels: labels,\n```\n\n相关的扩展阅读[如何评价「多说」即将关闭？有什么替代方案？](https://www.zhihu.com/question/57426274)\n\n\n| replace(r/\\d{4}-/g, '')\n\n\n### 其他插件 ###\n\n```\n    \"hexo-all-minifier\": \"^0.2.6\",\n    \"hexo-generator-feed\": \"^1.2.2\",\n    \"hexo-generator-seo-friendly-sitemap\": \"0.0.21\",\n    \"hexo-wordcount\": \"^3.0.2\",\n```\n\n## 自定义scaffold  ##\n\n最初是想实现如下title的日期是自动生成的。但`{{ date }}`会含有时间，直觉`filter`可以处理。然而没并软，且有报错。\n\n```\n---\ntitle: 美妆心得技术周刊2017-05-06\ntags:\n  - weekly\ndate: 2017-05-06 22:16:48\n---\n```\n\n于是开始啃代码，从`hexo-cli`开始\n\n根据`package.json` 的 `\"main\": \"lib/hexo\",` 和`bin/hexo`。使用的核心模块是`Hexo`，初步猜测当前项目的`node_moduels`存在`hexo`，就加载该目录下的模块，否则加载全局的。这个跟`webpack`一样。\n\n根据提示的报错\n\n```\nTemplate render error: (unknown path) [Line 1, Column 22]\n  expected symbol, got string\n    ...\n    at /Users/huixisheng/cosmeapp.github.com/node_modules/hexo/lib/extend/tag.js:66:9\n   ...\n    at Tag.render (/Users/huixisheng/cosmeapp.github.com/node_modules/hexo/lib/extend/tag.js:64:10)\n    at /Users/huixisheng/cosmeapp.github.com/node_modules/hexo/lib/hexo/post.js:111:16\n```\n定位到`post.js`。\n\n```\nPost.prototype.create = function(data, replace, callback) {\n  // console.log(data);\n  // return;\n```\n\n执行了 `_renderScaffold`\n\n`tag.render(yfmSplit.data, frontMatter)`。\n\n```\nvar placeholder = '\\uFFFC';\nvar rPlaceholder = /(?:<|&lt;)\\!--\\uFFFC(\\d+)--(?:>|&gt;)/g;\n\nTag.prototype.render = function(str, options, callback) {\n```\n\n```\n  return new Promise(function(resolve, reject) {\n    str = str.replace(/<pre><code.*>[\\s\\S]*?<\\/code><\\/pre>/gm, escapeContent);\n    env.renderString(str, options, function(err, result) {\n```\n\n最后发现是[`nunjucks`](http://mozilla.github.io/nunjucks/cn/templating.html)模块引擎解析的。那么这样问题就好办了。于是根据相关语法做配置即可。然后并没有提供`filter date`的方法，需要添加自定义`filter`。类试的库有[`nunjucks-date`](https://www.google.com.sg/search?biw=1242&bih=703&q=nunjucks+date&oq=nunjucks+date&gs_l=psy-ab.3...5873433.5873948.0.5874188.5.5.0.0.0.0.0.0..0.0....0...1.1.64.psy-ab..5.0.0.lMlZdOVppgE)。添加库需要涉及到`hexo`源码的修改，是否可以从原有的`filter`做文章。于是找到`replace`\n\n```\n---\ntitle: 美妆心得技术周刊{{ date | replace(r/\\s.*/g, \"\")  }}\n```\n关于`Hexo`源码的阅读还需更深入。\n\n\n### 参考文章 ###\n- http://johnwonder.github.io/2016/09/29/hexo-scaffold/\n- http://mozilla.github.io/nunjucks/cn/templating.html\n- https://hexo.io/zh-cn/docs/writing.html\n\n\n### 2017-09-11 ###\n- 添加自定义scaffold\n","source":"_posts/create-hexo-blog.md","raw":"---\ntitle: 开篇如何通过hexo创建blog\ndate: 2017-09-08 23:58:19\nauthor:\n  name: 悔惜晟\n  link: http://huixisheng.github.io\ntags:\n- hexo\n---\n\n此为团队博客开篇，让技术部的知识沉淀下来，这是一个好的开始。算是技术部的一个坑，让大家都参与进来。本文介绍通过hexo如何搭建技术博客。\n\n为何选择hexo，支持`markdown`，最主要是先有个平台有内容产出，有内容了什么都好说，选择其他框架、自定义主题或者自行开发一个适合自己的博客系统。\n\n## 安装 ##\n\n```bash\n$ npm install -g hexo-cli\n```\n**注意：**安装之前先安装nodejs ，下载地址 https://nodejs.org/en/\n\n## 初始化 ##\n\n```bash\n$ hexo init\n$ git init // 添加仓库\n$ git remote add origin git@github.com:cosmeapp/cosmeapp.github.com.git\n$ git clone https://github.com/iissnan/hexo-theme-next themes/next // 安装主题，记得切换到hexo站点目录下\n```\n\n### 创建文章 ###\n\n```bash\n$ hexo new post create-hexo-blog\n$ hexo new weekly  weekly-2017-05-06 // 创建周刊模板\n```\n\n### 本地预览 ###\n\n```bash\n$ hexo server -g\n```\n\n### 构建发布 ###\n\n```bash\n$ hexo deploy -g\n```\n\n## 插件 ##\n\n### hexo-deployer-git ###\n\n>Git deployer plugin for Hexo.\n\n```bash\n$ npm install hexo-deployer-git --save-dev\n```\n\n配置`_config.yml`\n\n```\ndeploy:\n  type: git\n  repo: git@github.com:cosmeapp/cosmeapp.github.com.git\n  branch: master\n```\n\n### 配置主题 ###\n\n```bash\n$ git clone https://github.com/iissnan/hexo-theme-next themes/next\n```\n\n配置`_config.yml`\n\n```\ntheme: next\n```\n\n其他具体的配置参考[http://theme-next.iissnan.com/](http://theme-next.iissnan.com/)\n\n### [Gitalk](https://github.com/gitalk/gitalk) ###\n>Gitalk 是一个基于 Github Issue 和 Preact 开发的评论插件\n\n因公司业务调整多说项目于2017年6月1日正式关停服务。于是考虑使用`Gitalk`代替。\n\n`NexT`主题集成`Gittalk`，这个可以发个pr\n\n```\n+++ b/layout/_partials/comments.swig\n@@ -32,4 +32,5 @@\n       <div id=\"vcomments\"></div>\n     {% endif %}\n   </div>\n+  <div id=\"gitalk-container\"></div>\n {% endif %}\n\n+++ b/layout/_third-party/comments/index.swig\n {% include 'valine.swig' %}\n+{% include 'gittalk.swig' %}\n```\n\n```\n{% if page.comments %}\n<link rel=\"stylesheet\" href=\"/gitalk/gitalk.css\">\n<script src=\"/gitalk/gitalk.min.js\"></script>\n\n<script>\nvar gitalk = new Gitalk({\n  clientID: 'cb9d990636e84547cadb',\n  clientSecret: '78036da2ca2985c3df477c76c407a120ae664368',\n  repo: 'cosmeapp.github.com',\n  owner: 'cosmeapp',\n  id: '',\n  title: '{{ page.title }}',\n  body: '{{ page.permalink }}\\n\\n{{ page.title }}',\n  labels: ['Gitalk'{% if page.tags and page.tags.length %}{% for tag in page.tags %},'{{ tag.name }}'{% endfor %}{% endif %}],\n  admin: ['huixisheng'],\n  distractionFreeMode: true\n});\n\ngitalk.render('gitalk-container');\n</script>\n{% endif %}\n```\n\n不想设置`id`成为`labels`。于是下载`Gitalk`源码修改，但构建的时候报错\n\n```\nERROR in ./src/index.js\nModule parse failed: ~/gitalk/src/index.js Unexpected token (23:18)\nYou may need an appropriate loader to handle this file type.\n|     }\n|\n|     return render(<GitalkComponent options={this.options}/>, node)\n|   }\n| }\n @ multi (webpack)-dev-server/client?http://localhost:8000 webpack/hot/dev-server ./index.js\n```\n\n很奇怪，看了相关`webpack`配置并没有什么问题，提了[issue](https://github.com/gitalk/gitalk/issues/23)。当然提issue前努力尝试去解决问题，开源的项目不可能连构建都不行。\n\n- 尝试升级相关的dependencies，推荐`npm-check`\n- 删除`node_moduels`,尝试 `npm install`和 `yarn install`\n- 问题初步怀疑是`jsx`不解析，但是`babel-loader`配置没问题\n- google `You may need an appropriate loader to handle this file type.` 尝试添加了`webpack`、`babel-loader`、`jsx`等关键词。折腾到凌晨2点多，无果，媳妇喊睡觉\n- 第二天起来，开始尝试写最简单的[demo](https://github.com/huixisheng/lab/tree/gh-pages/React)，demo跑起来没有问题，对比demo的配置，配置无差。后面发现`Gitalk`的项目是`clone`在`node_modules`目录下，换了目录。项目终于可以跑起来了 @todo 深入为何在`node_modules`目录下不行？初步设想，应该是`nodejs`查找依赖，通过配置`webpack`可以解决\n\n问题的出现不是偶然，任何问题的出现都是有原因，有可能是一个字母，不同的环境。当出现不可思议的问题时候，需要静下心，慢慢体会碰到问题的苦恼，最终享受问题解决的快乐。\n\n移除`id`添加为`labels`\n```\n+++ b/src/gitalk.jsx\n@@ -184,7 +184,8 @@ class GitalkComponent extends Component {\n       params: {\n         client_id: clientID,\n         client_secret: clientSecret,\n-        labels: labels.concat(id).join(',')\n+        labels: labels.join(',')\n       }\n     }).then(res => {\n     return axiosGithub.post(`/repos/${owner}/${repo}/issues`, {\n       title,\n-      labels: labels.concat(id),\n+      labels: labels,\n```\n\n相关的扩展阅读[如何评价「多说」即将关闭？有什么替代方案？](https://www.zhihu.com/question/57426274)\n\n\n| replace(r/\\d{4}-/g, '')\n\n\n### 其他插件 ###\n\n```\n    \"hexo-all-minifier\": \"^0.2.6\",\n    \"hexo-generator-feed\": \"^1.2.2\",\n    \"hexo-generator-seo-friendly-sitemap\": \"0.0.21\",\n    \"hexo-wordcount\": \"^3.0.2\",\n```\n\n## 自定义scaffold  ##\n\n最初是想实现如下title的日期是自动生成的。但`{{ date }}`会含有时间，直觉`filter`可以处理。然而没并软，且有报错。\n\n```\n---\ntitle: 美妆心得技术周刊2017-05-06\ntags:\n  - weekly\ndate: 2017-05-06 22:16:48\n---\n```\n\n于是开始啃代码，从`hexo-cli`开始\n\n根据`package.json` 的 `\"main\": \"lib/hexo\",` 和`bin/hexo`。使用的核心模块是`Hexo`，初步猜测当前项目的`node_moduels`存在`hexo`，就加载该目录下的模块，否则加载全局的。这个跟`webpack`一样。\n\n根据提示的报错\n\n```\nTemplate render error: (unknown path) [Line 1, Column 22]\n  expected symbol, got string\n    ...\n    at /Users/huixisheng/cosmeapp.github.com/node_modules/hexo/lib/extend/tag.js:66:9\n   ...\n    at Tag.render (/Users/huixisheng/cosmeapp.github.com/node_modules/hexo/lib/extend/tag.js:64:10)\n    at /Users/huixisheng/cosmeapp.github.com/node_modules/hexo/lib/hexo/post.js:111:16\n```\n定位到`post.js`。\n\n```\nPost.prototype.create = function(data, replace, callback) {\n  // console.log(data);\n  // return;\n```\n\n执行了 `_renderScaffold`\n\n`tag.render(yfmSplit.data, frontMatter)`。\n\n```\nvar placeholder = '\\uFFFC';\nvar rPlaceholder = /(?:<|&lt;)\\!--\\uFFFC(\\d+)--(?:>|&gt;)/g;\n\nTag.prototype.render = function(str, options, callback) {\n```\n\n```\n  return new Promise(function(resolve, reject) {\n    str = str.replace(/<pre><code.*>[\\s\\S]*?<\\/code><\\/pre>/gm, escapeContent);\n    env.renderString(str, options, function(err, result) {\n```\n\n最后发现是[`nunjucks`](http://mozilla.github.io/nunjucks/cn/templating.html)模块引擎解析的。那么这样问题就好办了。于是根据相关语法做配置即可。然后并没有提供`filter date`的方法，需要添加自定义`filter`。类试的库有[`nunjucks-date`](https://www.google.com.sg/search?biw=1242&bih=703&q=nunjucks+date&oq=nunjucks+date&gs_l=psy-ab.3...5873433.5873948.0.5874188.5.5.0.0.0.0.0.0..0.0....0...1.1.64.psy-ab..5.0.0.lMlZdOVppgE)。添加库需要涉及到`hexo`源码的修改，是否可以从原有的`filter`做文章。于是找到`replace`\n\n```\n---\ntitle: 美妆心得技术周刊{{ date | replace(r/\\s.*/g, \"\")  }}\n```\n关于`Hexo`源码的阅读还需更深入。\n\n\n### 参考文章 ###\n- http://johnwonder.github.io/2016/09/29/hexo-scaffold/\n- http://mozilla.github.io/nunjucks/cn/templating.html\n- https://hexo.io/zh-cn/docs/writing.html\n\n\n### 2017-09-11 ###\n- 添加自定义scaffold\n","slug":"create-hexo-blog","published":1,"updated":"2017-09-20T16:19:41.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9cutinx000cds9l1nfnxh56","content":"<p>此为团队博客开篇，让技术部的知识沉淀下来，这是一个好的开始。算是技术部的一个坑，让大家都参与进来。本文介绍通过hexo如何搭建技术博客。</p><p>为何选择hexo，支持<code>markdown</code>，最主要是先有个平台有内容产出，有内容了什么都好说，选择其他框架、自定义主题或者自行开发一个适合自己的博客系统。</p><h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm install -g hexo-cli</div></pre></td></tr></table></figure><p><strong>注意：</strong>安装之前先安装nodejs ，下载地址 <a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"external\">https://nodejs.org/en/</a></p><h2 id=\"初始化\"><a href=\"#初始化\" class=\"headerlink\" title=\"初始化\"></a>初始化</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo init</div><div class=\"line\">$ git init // 添加仓库</div><div class=\"line\">$ git remote add origin git@github.com:cosmeapp/cosmeapp.github.com.git</div><div class=\"line\">$ git <span class=\"built_in\">clone</span> https://github.com/iissnan/hexo-theme-next themes/next // 安装主题，记得切换到hexo站点目录下</div></pre></td></tr></table></figure><h3 id=\"创建文章\"><a href=\"#创建文章\" class=\"headerlink\" title=\"创建文章\"></a>创建文章</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new post create-hexo-blog</div><div class=\"line\">$ hexo new weekly  weekly-2017-05-06 // 创建周刊模板</div></pre></td></tr></table></figure><h3 id=\"本地预览\"><a href=\"#本地预览\" class=\"headerlink\" title=\"本地预览\"></a>本地预览</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server -g</div></pre></td></tr></table></figure><h3 id=\"构建发布\"><a href=\"#构建发布\" class=\"headerlink\" title=\"构建发布\"></a>构建发布</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy -g</div></pre></td></tr></table></figure><h2 id=\"插件\"><a href=\"#插件\" class=\"headerlink\" title=\"插件\"></a>插件</h2><h3 id=\"hexo-deployer-git\"><a href=\"#hexo-deployer-git\" class=\"headerlink\" title=\"hexo-deployer-git\"></a>hexo-deployer-git</h3><blockquote><p>Git deployer plugin for Hexo.</p></blockquote><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm install hexo-deployer-git --save-dev</div></pre></td></tr></table></figure><p>配置<code>_config.yml</code></p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">deploy:</div><div class=\"line\">  type: git</div><div class=\"line\">  repo: git@github.com:cosmeapp/cosmeapp.github.com.git</div><div class=\"line\">  branch: master</div></pre></td></tr></table></figure><h3 id=\"配置主题\"><a href=\"#配置主题\" class=\"headerlink\" title=\"配置主题\"></a>配置主题</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ git <span class=\"built_in\">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</div></pre></td></tr></table></figure><p>配置<code>_config.yml</code></p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">theme: next</div></pre></td></tr></table></figure><p>其他具体的配置参考<a href=\"http://theme-next.iissnan.com/\" target=\"_blank\" rel=\"external\">http://theme-next.iissnan.com/</a></p><h3 id=\"Gitalk\"><a href=\"#Gitalk\" class=\"headerlink\" title=\"Gitalk\"></a><a href=\"https://github.com/gitalk/gitalk\" target=\"_blank\" rel=\"external\">Gitalk</a></h3><blockquote><p>Gitalk 是一个基于 Github Issue 和 Preact 开发的评论插件</p></blockquote><p>因公司业务调整多说项目于2017年6月1日正式关停服务。于是考虑使用<code>Gitalk</code>代替。</p><p><code>NexT</code>主题集成<code>Gittalk</code>，这个可以发个pr</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">+++ b/layout/_partials/comments.swig</div><div class=\"line\">@@ -32,4 +32,5 @@</div><div class=\"line\">       &lt;div id=&quot;vcomments&quot;&gt;&lt;/div&gt;</div><div class=\"line\">     &#123;% endif %&#125;</div><div class=\"line\">   &lt;/div&gt;</div><div class=\"line\">+  &lt;div id=&quot;gitalk-container&quot;&gt;&lt;/div&gt;</div><div class=\"line\"> &#123;% endif %&#125;</div><div class=\"line\"></div><div class=\"line\">+++ b/layout/_third-party/comments/index.swig</div><div class=\"line\"> &#123;% include &apos;valine.swig&apos; %&#125;</div><div class=\"line\">+&#123;% include &apos;gittalk.swig&apos; %&#125;</div></pre></td></tr></table></figure><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;% if page.comments %&#125;</div><div class=\"line\">&lt;link rel=&quot;stylesheet&quot; href=&quot;/gitalk/gitalk.css&quot;&gt;</div><div class=\"line\">&lt;script src=&quot;/gitalk/gitalk.min.js&quot;&gt;&lt;/script&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;script&gt;</div><div class=\"line\">var gitalk = new Gitalk(&#123;</div><div class=\"line\">  clientID: &apos;cb9d990636e84547cadb&apos;,</div><div class=\"line\">  clientSecret: &apos;78036da2ca2985c3df477c76c407a120ae664368&apos;,</div><div class=\"line\">  repo: &apos;cosmeapp.github.com&apos;,</div><div class=\"line\">  owner: &apos;cosmeapp&apos;,</div><div class=\"line\">  id: &apos;&apos;,</div><div class=\"line\">  title: &apos;&#123;&#123; page.title &#125;&#125;&apos;,</div><div class=\"line\">  body: &apos;&#123;&#123; page.permalink &#125;&#125;\\n\\n&#123;&#123; page.title &#125;&#125;&apos;,</div><div class=\"line\">  labels: [&apos;Gitalk&apos;&#123;% if page.tags and page.tags.length %&#125;&#123;% for tag in page.tags %&#125;,&apos;&#123;&#123; tag.name &#125;&#125;&apos;&#123;% endfor %&#125;&#123;% endif %&#125;],</div><div class=\"line\">  admin: [&apos;huixisheng&apos;],</div><div class=\"line\">  distractionFreeMode: true</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">gitalk.render(&apos;gitalk-container&apos;);</div><div class=\"line\">&lt;/script&gt;</div><div class=\"line\">&#123;% endif %&#125;</div></pre></td></tr></table></figure><p>不想设置<code>id</code>成为<code>labels</code>。于是下载<code>Gitalk</code>源码修改，但构建的时候报错</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">ERROR in ./src/index.js</div><div class=\"line\">Module parse failed: ~/gitalk/src/index.js Unexpected token (23:18)</div><div class=\"line\">You may need an appropriate loader to handle this file type.</div><div class=\"line\">|     &#125;</div><div class=\"line\">|</div><div class=\"line\">|     return render(&lt;GitalkComponent options=&#123;this.options&#125;/&gt;, node)</div><div class=\"line\">|   &#125;</div><div class=\"line\">| &#125;</div><div class=\"line\"> @ multi (webpack)-dev-server/client?http://localhost:8000 webpack/hot/dev-server ./index.js</div></pre></td></tr></table></figure><p>很奇怪，看了相关<code>webpack</code>配置并没有什么问题，提了<a href=\"https://github.com/gitalk/gitalk/issues/23\" target=\"_blank\" rel=\"external\">issue</a>。当然提issue前努力尝试去解决问题，开源的项目不可能连构建都不行。</p><ul><li>尝试升级相关的dependencies，推荐<code>npm-check</code></li><li>删除<code>node_moduels</code>,尝试 <code>npm install</code>和 <code>yarn install</code></li><li>问题初步怀疑是<code>jsx</code>不解析，但是<code>babel-loader</code>配置没问题</li><li>google <code>You may need an appropriate loader to handle this file type.</code> 尝试添加了<code>webpack</code>、<code>babel-loader</code>、<code>jsx</code>等关键词。折腾到凌晨2点多，无果，媳妇喊睡觉</li><li>第二天起来，开始尝试写最简单的<a href=\"https://github.com/huixisheng/lab/tree/gh-pages/React\" target=\"_blank\" rel=\"external\">demo</a>，demo跑起来没有问题，对比demo的配置，配置无差。后面发现<code>Gitalk</code>的项目是<code>clone</code>在<code>node_modules</code>目录下，换了目录。项目终于可以跑起来了 @todo 深入为何在<code>node_modules</code>目录下不行？初步设想，应该是<code>nodejs</code>查找依赖，通过配置<code>webpack</code>可以解决</li></ul><p>问题的出现不是偶然，任何问题的出现都是有原因，有可能是一个字母，不同的环境。当出现不可思议的问题时候，需要静下心，慢慢体会碰到问题的苦恼，最终享受问题解决的快乐。</p><p>移除<code>id</code>添加为<code>labels</code><br></p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">+++ b/src/gitalk.jsx</div><div class=\"line\">@@ -184,7 +184,8 @@ class GitalkComponent extends Component &#123;</div><div class=\"line\">       params: &#123;</div><div class=\"line\">         client_id: clientID,</div><div class=\"line\">         client_secret: clientSecret,</div><div class=\"line\">-        labels: labels.concat(id).join(&apos;,&apos;)</div><div class=\"line\">+        labels: labels.join(&apos;,&apos;)</div><div class=\"line\">       &#125;</div><div class=\"line\">     &#125;).then(res =&gt; &#123;</div><div class=\"line\">     return axiosGithub.post(`/repos/$&#123;owner&#125;/$&#123;repo&#125;/issues`, &#123;</div><div class=\"line\">       title,</div><div class=\"line\">-      labels: labels.concat(id),</div><div class=\"line\">+      labels: labels,</div></pre></td></tr></table></figure><p></p><p>相关的扩展阅读<a href=\"https://www.zhihu.com/question/57426274\" target=\"_blank\" rel=\"external\">如何评价「多说」即将关闭？有什么替代方案？</a></p><p>| replace(r/\\d{4}-/g, ‘’)</p><h3 id=\"其他插件\"><a href=\"#其他插件\" class=\"headerlink\" title=\"其他插件\"></a>其他插件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&quot;hexo-all-minifier&quot;: &quot;^0.2.6&quot;,</div><div class=\"line\">&quot;hexo-generator-feed&quot;: &quot;^1.2.2&quot;,</div><div class=\"line\">&quot;hexo-generator-seo-friendly-sitemap&quot;: &quot;0.0.21&quot;,</div><div class=\"line\">&quot;hexo-wordcount&quot;: &quot;^3.0.2&quot;,</div></pre></td></tr></table></figure><h2 id=\"自定义scaffold\"><a href=\"#自定义scaffold\" class=\"headerlink\" title=\"自定义scaffold\"></a>自定义scaffold</h2><p>最初是想实现如下title的日期是自动生成的。但<code>1504886299000</code>会含有时间，直觉<code>filter</code>可以处理。然而没并软，且有报错。</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">---</div><div class=\"line\">title: 美妆心得技术周刊2017-05-06</div><div class=\"line\">tags:</div><div class=\"line\">  - weekly</div><div class=\"line\">date: 2017-05-06 22:16:48</div><div class=\"line\">---</div></pre></td></tr></table></figure><p>于是开始啃代码，从<code>hexo-cli</code>开始</p><p>根据<code>package.json</code> 的 <code>&quot;main&quot;: &quot;lib/hexo&quot;,</code> 和<code>bin/hexo</code>。使用的核心模块是<code>Hexo</code>，初步猜测当前项目的<code>node_moduels</code>存在<code>hexo</code>，就加载该目录下的模块，否则加载全局的。这个跟<code>webpack</code>一样。</p><p>根据提示的报错</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">Template render error: (unknown path) [Line 1, Column 22]</div><div class=\"line\">  expected symbol, got string</div><div class=\"line\">    ...</div><div class=\"line\">    at /Users/huixisheng/cosmeapp.github.com/node_modules/hexo/lib/extend/tag.js:66:9</div><div class=\"line\">   ...</div><div class=\"line\">    at Tag.render (/Users/huixisheng/cosmeapp.github.com/node_modules/hexo/lib/extend/tag.js:64:10)</div><div class=\"line\">    at /Users/huixisheng/cosmeapp.github.com/node_modules/hexo/lib/hexo/post.js:111:16</div></pre></td></tr></table></figure><p>定位到<code>post.js</code>。</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">Post.prototype.create = function(data, replace, callback) &#123;</div><div class=\"line\">  // console.log(data);</div><div class=\"line\">  // return;</div></pre></td></tr></table></figure><p>执行了 <code>_renderScaffold</code></p><p><code>tag.render(yfmSplit.data, frontMatter)</code>。</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">var placeholder = &apos;\\uFFFC&apos;;</div><div class=\"line\">var rPlaceholder = /(?:&lt;|&amp;lt;)\\!--\\uFFFC(\\d+)--(?:&gt;|&amp;gt;)/g;</div><div class=\"line\"></div><div class=\"line\">Tag.prototype.render = function(str, options, callback) &#123;</div></pre></td></tr></table></figure><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">return new Promise(function(resolve, reject) &#123;</div><div class=\"line\">  str = str.replace(/&lt;pre&gt;&lt;code.*&gt;[\\s\\S]*?&lt;\\/code&gt;&lt;\\/pre&gt;/gm, escapeContent);</div><div class=\"line\">  env.renderString(str, options, function(err, result) &#123;</div></pre></td></tr></table></figure><p>最后发现是<a href=\"http://mozilla.github.io/nunjucks/cn/templating.html\" target=\"_blank\" rel=\"external\"><code>nunjucks</code></a>模块引擎解析的。那么这样问题就好办了。于是根据相关语法做配置即可。然后并没有提供<code>filter date</code>的方法，需要添加自定义<code>filter</code>。类试的库有<a href=\"https://www.google.com.sg/search?biw=1242&amp;bih=703&amp;q=nunjucks+date&amp;oq=nunjucks+date&amp;gs_l=psy-ab.3...5873433.5873948.0.5874188.5.5.0.0.0.0.0.0..0.0....0...1.1.64.psy-ab..5.0.0.lMlZdOVppgE\" target=\"_blank\" rel=\"external\"><code>nunjucks-date</code></a>。添加库需要涉及到<code>hexo</code>源码的修改，是否可以从原有的<code>filter</code>做文章。于是找到<code>replace</code></p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">---</div><div class=\"line\">title: 美妆心得技术周刊&#123;&#123; date | replace(r/\\s.*/g, &quot;&quot;)  &#125;&#125;</div></pre></td></tr></table></figure><p>关于<code>Hexo</code>源码的阅读还需更深入。</p><h3 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h3><ul><li><a href=\"http://johnwonder.github.io/2016/09/29/hexo-scaffold/\" target=\"_blank\" rel=\"external\">http://johnwonder.github.io/2016/09/29/hexo-scaffold/</a></li><li><a href=\"http://mozilla.github.io/nunjucks/cn/templating.html\" target=\"_blank\" rel=\"external\">http://mozilla.github.io/nunjucks/cn/templating.html</a></li><li><a href=\"https://hexo.io/zh-cn/docs/writing.html\" target=\"_blank\" rel=\"external\">https://hexo.io/zh-cn/docs/writing.html</a></li></ul><h3 id=\"2017-09-11\"><a href=\"#2017-09-11\" class=\"headerlink\" title=\"2017-09-11\"></a>2017-09-11</h3><ul><li>添加自定义scaffold</li></ul>","site":{"data":{}},"excerpt":"","more":"<p>此为团队博客开篇，让技术部的知识沉淀下来，这是一个好的开始。算是技术部的一个坑，让大家都参与进来。本文介绍通过hexo如何搭建技术博客。</p><p>为何选择hexo，支持<code>markdown</code>，最主要是先有个平台有内容产出，有内容了什么都好说，选择其他框架、自定义主题或者自行开发一个适合自己的博客系统。</p><h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm install -g hexo-cli</div></pre></td></tr></table></figure><p><strong>注意：</strong>安装之前先安装nodejs ，下载地址 <a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"external\">https://nodejs.org/en/</a></p><h2 id=\"初始化\"><a href=\"#初始化\" class=\"headerlink\" title=\"初始化\"></a>初始化</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo init</div><div class=\"line\">$ git init // 添加仓库</div><div class=\"line\">$ git remote add origin git@github.com:cosmeapp/cosmeapp.github.com.git</div><div class=\"line\">$ git <span class=\"built_in\">clone</span> https://github.com/iissnan/hexo-theme-next themes/next // 安装主题，记得切换到hexo站点目录下</div></pre></td></tr></table></figure><h3 id=\"创建文章\"><a href=\"#创建文章\" class=\"headerlink\" title=\"创建文章\"></a>创建文章</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new post create-hexo-blog</div><div class=\"line\">$ hexo new weekly  weekly-2017-05-06 // 创建周刊模板</div></pre></td></tr></table></figure><h3 id=\"本地预览\"><a href=\"#本地预览\" class=\"headerlink\" title=\"本地预览\"></a>本地预览</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server -g</div></pre></td></tr></table></figure><h3 id=\"构建发布\"><a href=\"#构建发布\" class=\"headerlink\" title=\"构建发布\"></a>构建发布</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy -g</div></pre></td></tr></table></figure><h2 id=\"插件\"><a href=\"#插件\" class=\"headerlink\" title=\"插件\"></a>插件</h2><h3 id=\"hexo-deployer-git\"><a href=\"#hexo-deployer-git\" class=\"headerlink\" title=\"hexo-deployer-git\"></a>hexo-deployer-git</h3><blockquote><p>Git deployer plugin for Hexo.</p></blockquote><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm install hexo-deployer-git --save-dev</div></pre></td></tr></table></figure><p>配置<code>_config.yml</code></p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">deploy:</div><div class=\"line\">  type: git</div><div class=\"line\">  repo: git@github.com:cosmeapp/cosmeapp.github.com.git</div><div class=\"line\">  branch: master</div></pre></td></tr></table></figure><h3 id=\"配置主题\"><a href=\"#配置主题\" class=\"headerlink\" title=\"配置主题\"></a>配置主题</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ git <span class=\"built_in\">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</div></pre></td></tr></table></figure><p>配置<code>_config.yml</code></p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">theme: next</div></pre></td></tr></table></figure><p>其他具体的配置参考<a href=\"http://theme-next.iissnan.com/\" target=\"_blank\" rel=\"external\">http://theme-next.iissnan.com/</a></p><h3 id=\"Gitalk\"><a href=\"#Gitalk\" class=\"headerlink\" title=\"Gitalk\"></a><a href=\"https://github.com/gitalk/gitalk\" target=\"_blank\" rel=\"external\">Gitalk</a></h3><blockquote><p>Gitalk 是一个基于 Github Issue 和 Preact 开发的评论插件</p></blockquote><p>因公司业务调整多说项目于2017年6月1日正式关停服务。于是考虑使用<code>Gitalk</code>代替。</p><p><code>NexT</code>主题集成<code>Gittalk</code>，这个可以发个pr</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">+++ b/layout/_partials/comments.swig</div><div class=\"line\">@@ -32,4 +32,5 @@</div><div class=\"line\">       &lt;div id=&quot;vcomments&quot;&gt;&lt;/div&gt;</div><div class=\"line\">     &#123;% endif %&#125;</div><div class=\"line\">   &lt;/div&gt;</div><div class=\"line\">+  &lt;div id=&quot;gitalk-container&quot;&gt;&lt;/div&gt;</div><div class=\"line\"> &#123;% endif %&#125;</div><div class=\"line\"></div><div class=\"line\">+++ b/layout/_third-party/comments/index.swig</div><div class=\"line\"> &#123;% include &apos;valine.swig&apos; %&#125;</div><div class=\"line\">+&#123;% include &apos;gittalk.swig&apos; %&#125;</div></pre></td></tr></table></figure><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;% if page.comments %&#125;</div><div class=\"line\">&lt;link rel=&quot;stylesheet&quot; href=&quot;/gitalk/gitalk.css&quot;&gt;</div><div class=\"line\">&lt;script src=&quot;/gitalk/gitalk.min.js&quot;&gt;&lt;/script&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;script&gt;</div><div class=\"line\">var gitalk = new Gitalk(&#123;</div><div class=\"line\">  clientID: &apos;cb9d990636e84547cadb&apos;,</div><div class=\"line\">  clientSecret: &apos;78036da2ca2985c3df477c76c407a120ae664368&apos;,</div><div class=\"line\">  repo: &apos;cosmeapp.github.com&apos;,</div><div class=\"line\">  owner: &apos;cosmeapp&apos;,</div><div class=\"line\">  id: &apos;&apos;,</div><div class=\"line\">  title: &apos;&#123;&#123; page.title &#125;&#125;&apos;,</div><div class=\"line\">  body: &apos;&#123;&#123; page.permalink &#125;&#125;\\n\\n&#123;&#123; page.title &#125;&#125;&apos;,</div><div class=\"line\">  labels: [&apos;Gitalk&apos;&#123;% if page.tags and page.tags.length %&#125;&#123;% for tag in page.tags %&#125;,&apos;&#123;&#123; tag.name &#125;&#125;&apos;&#123;% endfor %&#125;&#123;% endif %&#125;],</div><div class=\"line\">  admin: [&apos;huixisheng&apos;],</div><div class=\"line\">  distractionFreeMode: true</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">gitalk.render(&apos;gitalk-container&apos;);</div><div class=\"line\">&lt;/script&gt;</div><div class=\"line\">&#123;% endif %&#125;</div></pre></td></tr></table></figure><p>不想设置<code>id</code>成为<code>labels</code>。于是下载<code>Gitalk</code>源码修改，但构建的时候报错</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">ERROR in ./src/index.js</div><div class=\"line\">Module parse failed: ~/gitalk/src/index.js Unexpected token (23:18)</div><div class=\"line\">You may need an appropriate loader to handle this file type.</div><div class=\"line\">|     &#125;</div><div class=\"line\">|</div><div class=\"line\">|     return render(&lt;GitalkComponent options=&#123;this.options&#125;/&gt;, node)</div><div class=\"line\">|   &#125;</div><div class=\"line\">| &#125;</div><div class=\"line\"> @ multi (webpack)-dev-server/client?http://localhost:8000 webpack/hot/dev-server ./index.js</div></pre></td></tr></table></figure><p>很奇怪，看了相关<code>webpack</code>配置并没有什么问题，提了<a href=\"https://github.com/gitalk/gitalk/issues/23\" target=\"_blank\" rel=\"external\">issue</a>。当然提issue前努力尝试去解决问题，开源的项目不可能连构建都不行。</p><ul><li>尝试升级相关的dependencies，推荐<code>npm-check</code></li><li>删除<code>node_moduels</code>,尝试 <code>npm install</code>和 <code>yarn install</code></li><li>问题初步怀疑是<code>jsx</code>不解析，但是<code>babel-loader</code>配置没问题</li><li>google <code>You may need an appropriate loader to handle this file type.</code> 尝试添加了<code>webpack</code>、<code>babel-loader</code>、<code>jsx</code>等关键词。折腾到凌晨2点多，无果，媳妇喊睡觉</li><li>第二天起来，开始尝试写最简单的<a href=\"https://github.com/huixisheng/lab/tree/gh-pages/React\" target=\"_blank\" rel=\"external\">demo</a>，demo跑起来没有问题，对比demo的配置，配置无差。后面发现<code>Gitalk</code>的项目是<code>clone</code>在<code>node_modules</code>目录下，换了目录。项目终于可以跑起来了 @todo 深入为何在<code>node_modules</code>目录下不行？初步设想，应该是<code>nodejs</code>查找依赖，通过配置<code>webpack</code>可以解决</li></ul><p>问题的出现不是偶然，任何问题的出现都是有原因，有可能是一个字母，不同的环境。当出现不可思议的问题时候，需要静下心，慢慢体会碰到问题的苦恼，最终享受问题解决的快乐。</p><p>移除<code>id</code>添加为<code>labels</code><br></p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">+++ b/src/gitalk.jsx</div><div class=\"line\">@@ -184,7 +184,8 @@ class GitalkComponent extends Component &#123;</div><div class=\"line\">       params: &#123;</div><div class=\"line\">         client_id: clientID,</div><div class=\"line\">         client_secret: clientSecret,</div><div class=\"line\">-        labels: labels.concat(id).join(&apos;,&apos;)</div><div class=\"line\">+        labels: labels.join(&apos;,&apos;)</div><div class=\"line\">       &#125;</div><div class=\"line\">     &#125;).then(res =&gt; &#123;</div><div class=\"line\">     return axiosGithub.post(`/repos/$&#123;owner&#125;/$&#123;repo&#125;/issues`, &#123;</div><div class=\"line\">       title,</div><div class=\"line\">-      labels: labels.concat(id),</div><div class=\"line\">+      labels: labels,</div></pre></td></tr></table></figure><p></p><p>相关的扩展阅读<a href=\"https://www.zhihu.com/question/57426274\" target=\"_blank\" rel=\"external\">如何评价「多说」即将关闭？有什么替代方案？</a></p><p>| replace(r/\\d{4}-/g, ‘’)</p><h3 id=\"其他插件\"><a href=\"#其他插件\" class=\"headerlink\" title=\"其他插件\"></a>其他插件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&quot;hexo-all-minifier&quot;: &quot;^0.2.6&quot;,</div><div class=\"line\">&quot;hexo-generator-feed&quot;: &quot;^1.2.2&quot;,</div><div class=\"line\">&quot;hexo-generator-seo-friendly-sitemap&quot;: &quot;0.0.21&quot;,</div><div class=\"line\">&quot;hexo-wordcount&quot;: &quot;^3.0.2&quot;,</div></pre></td></tr></table></figure><h2 id=\"自定义scaffold\"><a href=\"#自定义scaffold\" class=\"headerlink\" title=\"自定义scaffold\"></a>自定义scaffold</h2><p>最初是想实现如下title的日期是自动生成的。但<code>1504886299000</code>会含有时间，直觉<code>filter</code>可以处理。然而没并软，且有报错。</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">---</div><div class=\"line\">title: 美妆心得技术周刊2017-05-06</div><div class=\"line\">tags:</div><div class=\"line\">  - weekly</div><div class=\"line\">date: 2017-05-06 22:16:48</div><div class=\"line\">---</div></pre></td></tr></table></figure><p>于是开始啃代码，从<code>hexo-cli</code>开始</p><p>根据<code>package.json</code> 的 <code>&quot;main&quot;: &quot;lib/hexo&quot;,</code> 和<code>bin/hexo</code>。使用的核心模块是<code>Hexo</code>，初步猜测当前项目的<code>node_moduels</code>存在<code>hexo</code>，就加载该目录下的模块，否则加载全局的。这个跟<code>webpack</code>一样。</p><p>根据提示的报错</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">Template render error: (unknown path) [Line 1, Column 22]</div><div class=\"line\">  expected symbol, got string</div><div class=\"line\">    ...</div><div class=\"line\">    at /Users/huixisheng/cosmeapp.github.com/node_modules/hexo/lib/extend/tag.js:66:9</div><div class=\"line\">   ...</div><div class=\"line\">    at Tag.render (/Users/huixisheng/cosmeapp.github.com/node_modules/hexo/lib/extend/tag.js:64:10)</div><div class=\"line\">    at /Users/huixisheng/cosmeapp.github.com/node_modules/hexo/lib/hexo/post.js:111:16</div></pre></td></tr></table></figure><p>定位到<code>post.js</code>。</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">Post.prototype.create = function(data, replace, callback) &#123;</div><div class=\"line\">  // console.log(data);</div><div class=\"line\">  // return;</div></pre></td></tr></table></figure><p>执行了 <code>_renderScaffold</code></p><p><code>tag.render(yfmSplit.data, frontMatter)</code>。</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">var placeholder = &apos;\\uFFFC&apos;;</div><div class=\"line\">var rPlaceholder = /(?:&lt;|&amp;lt;)\\!--\\uFFFC(\\d+)--(?:&gt;|&amp;gt;)/g;</div><div class=\"line\"></div><div class=\"line\">Tag.prototype.render = function(str, options, callback) &#123;</div></pre></td></tr></table></figure><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">return new Promise(function(resolve, reject) &#123;</div><div class=\"line\">  str = str.replace(/&lt;pre&gt;&lt;code.*&gt;[\\s\\S]*?&lt;\\/code&gt;&lt;\\/pre&gt;/gm, escapeContent);</div><div class=\"line\">  env.renderString(str, options, function(err, result) &#123;</div></pre></td></tr></table></figure><p>最后发现是<a href=\"http://mozilla.github.io/nunjucks/cn/templating.html\" target=\"_blank\" rel=\"external\"><code>nunjucks</code></a>模块引擎解析的。那么这样问题就好办了。于是根据相关语法做配置即可。然后并没有提供<code>filter date</code>的方法，需要添加自定义<code>filter</code>。类试的库有<a href=\"https://www.google.com.sg/search?biw=1242&amp;bih=703&amp;q=nunjucks+date&amp;oq=nunjucks+date&amp;gs_l=psy-ab.3...5873433.5873948.0.5874188.5.5.0.0.0.0.0.0..0.0....0...1.1.64.psy-ab..5.0.0.lMlZdOVppgE\" target=\"_blank\" rel=\"external\"><code>nunjucks-date</code></a>。添加库需要涉及到<code>hexo</code>源码的修改，是否可以从原有的<code>filter</code>做文章。于是找到<code>replace</code></p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">---</div><div class=\"line\">title: 美妆心得技术周刊&#123;&#123; date | replace(r/\\s.*/g, &quot;&quot;)  &#125;&#125;</div></pre></td></tr></table></figure><p>关于<code>Hexo</code>源码的阅读还需更深入。</p><h3 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h3><ul><li><a href=\"http://johnwonder.github.io/2016/09/29/hexo-scaffold/\" target=\"_blank\" rel=\"external\">http://johnwonder.github.io/2016/09/29/hexo-scaffold/</a></li><li><a href=\"http://mozilla.github.io/nunjucks/cn/templating.html\" target=\"_blank\" rel=\"external\">http://mozilla.github.io/nunjucks/cn/templating.html</a></li><li><a href=\"https://hexo.io/zh-cn/docs/writing.html\" target=\"_blank\" rel=\"external\">https://hexo.io/zh-cn/docs/writing.html</a></li></ul><h3 id=\"2017-09-11\"><a href=\"#2017-09-11\" class=\"headerlink\" title=\"2017-09-11\"></a>2017-09-11</h3><ul><li>添加自定义scaffold</li></ul>"},{"title":"Fast Scrolling with RecyclerView翻译","author":{"name":"刘赛登","link":null},"date":"2017-09-27T01:10:58.000Z","_content":"\n\n> 原文来源: https://android.jlelse.eu/fast-scrolling-with-recyclerview-2b89d4574688\n\n这次翻译一篇来自于medium的文章，内容与recyclerView有关。\n\n众所周知,RecyclerView对ListView有很大的优势, Recyclerview也逐步代替ListView来实现列表的效果。我十分想念一个功能——快速滚动，你可以拖动一个绘制的滑块并在列表中滚动。\n在ListView中你可以这是做:\n\n```\nlistView = (ListView) findViewById(R.id.listView);\nlistView.setFastScrollEnabled(true);\n```\n但是在RecyclerView中，没有一种简单的方式来拖动滑块实现下面的效果:\n\n![dada](https://cdn-images-1.medium.com/max/1600/1*HliXJE2zpLAXWmXusOFSSA.gif)\n\n所以我们会引用第三方库比如[Recycler Bubble](https://github.com/FutureMind/recycler-fast-scroll)或者[RecyclerView-FastScroll](https://github.com/timusus/RecyclerView-FastScroll)。\n\n随着Support Library 26的到来，我们能够轻松地实现RecyclerView快速滚动。Let’s get to it!\n\n![](https://cdn-images-1.medium.com/max/1600/1*fnt26zTwl3zkAIazlNGvZw.gif)\n\n首先我们项目得引用Support Library 26,项目中的build.gradle如下所示:\n```\ndependencies {\n    ....\n    compile 'com.android.support:design:26.0.1'\n    compile 'com.android.support:recyclerview-v7:26.0.1'\n    ....\n}\n```\n\n由于Support Library 26现已转移到Google的maven存储库，需要在我们项目级的build.gradle文件中添加**google()**\n\n```\nbuildscript {\n\n    repositories {\n        google()\n    }\n    ....\n}\n```\n\n这是我们界面的布局代码,如下:\n\n#### content_main.xml\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<android.support.constraint.ConstraintLayout\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    app:layout_behavior=\"@string/appbar_scrolling_view_behavior\"\n    tools:context=\"com.shaishavgandhi.fastscrolling.MainActivity\"\n    tools:showIn=\"@layout/activity_main\">\n\n\n <android.support.v7.widget.RecyclerView\n    android:id=\"@+id/recyclerView\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\">\n\n </android.support.v7.widget.RecyclerView>\n\n</android.support.constraint.ConstraintLayout>\n```\n\n我构建了一个recyclerView，其由美国各州以及其代码的mock数据填充，如下展示：\n\n![](https://cdn-images-1.medium.com/max/1600/1*WwKn8Y9KQ-1EFAN324xwuw.gif)\n\n现在让我们开始实现快速滚动,更新后的布局文件如下展示:\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<android.support.constraint.ConstraintLayout\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    app:layout_behavior=\"@string/appbar_scrolling_view_behavior\"\n    tools:context=\"com.shaishavgandhi.fastscrolling.MainActivity\"\n    tools:showIn=\"@layout/activity_main\">\n\n\n <android.support.v7.widget.RecyclerView\n    android:id=\"@+id/recyclerView\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    app:fastScrollEnabled=\"true\"\n    app:fastScrollHorizontalThumbDrawable=\"@drawable/thumb_drawable\"\n    app:fastScrollHorizontalTrackDrawable=\"@drawable/line_drawable\"\n    app:fastScrollVerticalThumbDrawable=\"@drawable/thumb_drawable\"\n    app:fastScrollVerticalTrackDrawable=\"@drawable/line_drawable\">\n\n </android.support.v7.widget.RecyclerView>\n\n</android.support.constraint.ConstraintLayout>\n```\n\n让我们浏览一下下面的属性：\n- **fastScrollEnabled** boolean类型来启动快速滚动，如果设置为true值的话将要求我们提供一下四个属性\n- **fastScrollHorizontalThumbDrawable** StateListDrawable类型将被用来绘制可以在横轴可滑动的的滑块\n- **fastScrollHorizontalTrackDrawable** StateListDrawable类型将被用来绘制一条表示在横轴上的scrollbar的线条（轨道 译者注0）\n- **fastScrollVerticalThumbDrawable** StateListDrawable类型将被用来绘制可以在纵轴可滑动的的滑块\n- **fastScrollVerticalTrackDrawable** StateListDrawable类型将被用来绘制一条表示在纵轴上的scrollbar的线条\n\n**后四个的属性的值需要是StateListDrawable 否则会报错**（译者注）\n\n让我们来看一下StateListDrawables ，我使用原生形状，以便\n可以轻松地重复使用它们。\n\n#### line_drawable.xml\n\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n    <item\n        android:state_pressed=\"true\"\n        android:drawable=\"@drawable/line\"/>\n\n    <item\n        android:drawable=\"@drawable/line\"/>\n</selector>\n```\n\n#### line.xml\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<shape xmlns:android=\"http://schemas.android.com/apk/res/android\"\n       android:shape=\"rectangle\">\n\n    <solid android:color=\"@android:color/darker_gray\" />\n\n    <padding\n        android:top=\"10dp\"\n        android:left=\"10dp\"\n        android:right=\"10dp\"\n        android:bottom=\"10dp\"/>\n</shape>\n```\n\n#### thumb_drawable.xml\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n    <item\n        android:state_pressed=\"true\"\n        android:drawable=\"@drawable/thumb\"/>\n\n    <item\n        android:drawable=\"@drawable/thumb\"/>\n</selector>\n```\n\n#### thumb.xml ####\n\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<shape xmlns:android=\"http://schemas.android.com/apk/res/android\"\n       android:shape=\"rectangle\">\n\n    <corners\n        android:topLeftRadius=\"44dp\"\n        android:topRightRadius=\"44dp\"\n        android:bottomLeftRadius=\"44dp\" />\n\n    <padding\n        android:paddingLeft=\"22dp\"\n        android:paddingRight=\"22dp\" />\n\n    <solid android:color=\"@color/colorPrimaryDark\" />\n\n</shape>\n```\n\n效果如下所示：\n\n![image](https://cdn-images-1.medium.com/max/1600/1*RN2W9mpIMaFkAqs2KI5pyw.gif)\n\n太棒了！\n![image](https://cdn-images-1.medium.com/max/1600/1*cK8-ghSt_uRfRvMlJNd9cw.gif)\n\n这是启用快速滚动的基本示例。看到我们如何自定义它以显示信件的首字母，如联系人应用程序。\n\n[Demo](https://github.com/shaishavgandhi05/FastScrolling)\n\n最后，happy coding。","source":"_posts/fast-scrolling-with-recyclerview.md","raw":"---\ntitle: Fast Scrolling with RecyclerView翻译\nauthor:\n  name: 刘赛登\n  link:\ndate: 2017-09-27 09:10:58\ntags:\n- Andriod\n- 翻译\n---\n\n\n> 原文来源: https://android.jlelse.eu/fast-scrolling-with-recyclerview-2b89d4574688\n\n这次翻译一篇来自于medium的文章，内容与recyclerView有关。\n\n众所周知,RecyclerView对ListView有很大的优势, Recyclerview也逐步代替ListView来实现列表的效果。我十分想念一个功能——快速滚动，你可以拖动一个绘制的滑块并在列表中滚动。\n在ListView中你可以这是做:\n\n```\nlistView = (ListView) findViewById(R.id.listView);\nlistView.setFastScrollEnabled(true);\n```\n但是在RecyclerView中，没有一种简单的方式来拖动滑块实现下面的效果:\n\n![dada](https://cdn-images-1.medium.com/max/1600/1*HliXJE2zpLAXWmXusOFSSA.gif)\n\n所以我们会引用第三方库比如[Recycler Bubble](https://github.com/FutureMind/recycler-fast-scroll)或者[RecyclerView-FastScroll](https://github.com/timusus/RecyclerView-FastScroll)。\n\n随着Support Library 26的到来，我们能够轻松地实现RecyclerView快速滚动。Let’s get to it!\n\n![](https://cdn-images-1.medium.com/max/1600/1*fnt26zTwl3zkAIazlNGvZw.gif)\n\n首先我们项目得引用Support Library 26,项目中的build.gradle如下所示:\n```\ndependencies {\n    ....\n    compile 'com.android.support:design:26.0.1'\n    compile 'com.android.support:recyclerview-v7:26.0.1'\n    ....\n}\n```\n\n由于Support Library 26现已转移到Google的maven存储库，需要在我们项目级的build.gradle文件中添加**google()**\n\n```\nbuildscript {\n\n    repositories {\n        google()\n    }\n    ....\n}\n```\n\n这是我们界面的布局代码,如下:\n\n#### content_main.xml\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<android.support.constraint.ConstraintLayout\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    app:layout_behavior=\"@string/appbar_scrolling_view_behavior\"\n    tools:context=\"com.shaishavgandhi.fastscrolling.MainActivity\"\n    tools:showIn=\"@layout/activity_main\">\n\n\n <android.support.v7.widget.RecyclerView\n    android:id=\"@+id/recyclerView\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\">\n\n </android.support.v7.widget.RecyclerView>\n\n</android.support.constraint.ConstraintLayout>\n```\n\n我构建了一个recyclerView，其由美国各州以及其代码的mock数据填充，如下展示：\n\n![](https://cdn-images-1.medium.com/max/1600/1*WwKn8Y9KQ-1EFAN324xwuw.gif)\n\n现在让我们开始实现快速滚动,更新后的布局文件如下展示:\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<android.support.constraint.ConstraintLayout\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    app:layout_behavior=\"@string/appbar_scrolling_view_behavior\"\n    tools:context=\"com.shaishavgandhi.fastscrolling.MainActivity\"\n    tools:showIn=\"@layout/activity_main\">\n\n\n <android.support.v7.widget.RecyclerView\n    android:id=\"@+id/recyclerView\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    app:fastScrollEnabled=\"true\"\n    app:fastScrollHorizontalThumbDrawable=\"@drawable/thumb_drawable\"\n    app:fastScrollHorizontalTrackDrawable=\"@drawable/line_drawable\"\n    app:fastScrollVerticalThumbDrawable=\"@drawable/thumb_drawable\"\n    app:fastScrollVerticalTrackDrawable=\"@drawable/line_drawable\">\n\n </android.support.v7.widget.RecyclerView>\n\n</android.support.constraint.ConstraintLayout>\n```\n\n让我们浏览一下下面的属性：\n- **fastScrollEnabled** boolean类型来启动快速滚动，如果设置为true值的话将要求我们提供一下四个属性\n- **fastScrollHorizontalThumbDrawable** StateListDrawable类型将被用来绘制可以在横轴可滑动的的滑块\n- **fastScrollHorizontalTrackDrawable** StateListDrawable类型将被用来绘制一条表示在横轴上的scrollbar的线条（轨道 译者注0）\n- **fastScrollVerticalThumbDrawable** StateListDrawable类型将被用来绘制可以在纵轴可滑动的的滑块\n- **fastScrollVerticalTrackDrawable** StateListDrawable类型将被用来绘制一条表示在纵轴上的scrollbar的线条\n\n**后四个的属性的值需要是StateListDrawable 否则会报错**（译者注）\n\n让我们来看一下StateListDrawables ，我使用原生形状，以便\n可以轻松地重复使用它们。\n\n#### line_drawable.xml\n\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n    <item\n        android:state_pressed=\"true\"\n        android:drawable=\"@drawable/line\"/>\n\n    <item\n        android:drawable=\"@drawable/line\"/>\n</selector>\n```\n\n#### line.xml\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<shape xmlns:android=\"http://schemas.android.com/apk/res/android\"\n       android:shape=\"rectangle\">\n\n    <solid android:color=\"@android:color/darker_gray\" />\n\n    <padding\n        android:top=\"10dp\"\n        android:left=\"10dp\"\n        android:right=\"10dp\"\n        android:bottom=\"10dp\"/>\n</shape>\n```\n\n#### thumb_drawable.xml\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n    <item\n        android:state_pressed=\"true\"\n        android:drawable=\"@drawable/thumb\"/>\n\n    <item\n        android:drawable=\"@drawable/thumb\"/>\n</selector>\n```\n\n#### thumb.xml ####\n\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<shape xmlns:android=\"http://schemas.android.com/apk/res/android\"\n       android:shape=\"rectangle\">\n\n    <corners\n        android:topLeftRadius=\"44dp\"\n        android:topRightRadius=\"44dp\"\n        android:bottomLeftRadius=\"44dp\" />\n\n    <padding\n        android:paddingLeft=\"22dp\"\n        android:paddingRight=\"22dp\" />\n\n    <solid android:color=\"@color/colorPrimaryDark\" />\n\n</shape>\n```\n\n效果如下所示：\n\n![image](https://cdn-images-1.medium.com/max/1600/1*RN2W9mpIMaFkAqs2KI5pyw.gif)\n\n太棒了！\n![image](https://cdn-images-1.medium.com/max/1600/1*cK8-ghSt_uRfRvMlJNd9cw.gif)\n\n这是启用快速滚动的基本示例。看到我们如何自定义它以显示信件的首字母，如联系人应用程序。\n\n[Demo](https://github.com/shaishavgandhi05/FastScrolling)\n\n最后，happy coding。","slug":"fast-scrolling-with-recyclerview","published":1,"updated":"2017-09-27T01:19:58.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9cutiny000dds9l8m73i3sp","content":"<blockquote><p>原文来源: <a href=\"https://android.jlelse.eu/fast-scrolling-with-recyclerview-2b89d4574688\" target=\"_blank\" rel=\"external\">https://android.jlelse.eu/fast-scrolling-with-recyclerview-2b89d4574688</a></p></blockquote><p>这次翻译一篇来自于medium的文章，内容与recyclerView有关。</p><p>众所周知,RecyclerView对ListView有很大的优势, Recyclerview也逐步代替ListView来实现列表的效果。我十分想念一个功能——快速滚动，你可以拖动一个绘制的滑块并在列表中滚动。<br>在ListView中你可以这是做:</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">listView = (ListView) findViewById(R.id.listView);</div><div class=\"line\">listView.setFastScrollEnabled(true);</div></pre></td></tr></table></figure><p>但是在RecyclerView中，没有一种简单的方式来拖动滑块实现下面的效果:</p><p><img src=\"https://cdn-images-1.medium.com/max/1600/1*HliXJE2zpLAXWmXusOFSSA.gif\" alt=\"dada\"></p><p>所以我们会引用第三方库比如<a href=\"https://github.com/FutureMind/recycler-fast-scroll\" target=\"_blank\" rel=\"external\">Recycler Bubble</a>或者<a href=\"https://github.com/timusus/RecyclerView-FastScroll\" target=\"_blank\" rel=\"external\">RecyclerView-FastScroll</a>。</p><p>随着Support Library 26的到来，我们能够轻松地实现RecyclerView快速滚动。Let’s get to it!</p><p><img src=\"https://cdn-images-1.medium.com/max/1600/1*fnt26zTwl3zkAIazlNGvZw.gif\" alt=\"\"></p><p>首先我们项目得引用Support Library 26,项目中的build.gradle如下所示:<br></p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">dependencies &#123;</div><div class=\"line\">    ....</div><div class=\"line\">    compile &apos;com.android.support:design:26.0.1&apos;</div><div class=\"line\">    compile &apos;com.android.support:recyclerview-v7:26.0.1&apos;</div><div class=\"line\">    ....</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure><p></p><p>由于Support Library 26现已转移到Google的maven存储库，需要在我们项目级的build.gradle文件中添加<strong>google()</strong></p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">buildscript &#123;</div><div class=\"line\"></div><div class=\"line\">    repositories &#123;</div><div class=\"line\">        google()</div><div class=\"line\">    &#125;</div><div class=\"line\">    ....</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure><p>这是我们界面的布局代码,如下:</p><h4 id=\"content-main-xml\"><a href=\"#content-main-xml\" class=\"headerlink\" title=\"content_main.xml\"></a>content_main.xml</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</div><div class=\"line\">&lt;android.support.constraint.ConstraintLayout</div><div class=\"line\">    xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</div><div class=\"line\">    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;</div><div class=\"line\">    xmlns:tools=&quot;http://schemas.android.com/tools&quot;</div><div class=\"line\">    android:layout_width=&quot;match_parent&quot;</div><div class=\"line\">    android:layout_height=&quot;match_parent&quot;</div><div class=\"line\">    app:layout_behavior=&quot;@string/appbar_scrolling_view_behavior&quot;</div><div class=\"line\">    tools:context=&quot;com.shaishavgandhi.fastscrolling.MainActivity&quot;</div><div class=\"line\">    tools:showIn=&quot;@layout/activity_main&quot;&gt;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"> &lt;android.support.v7.widget.RecyclerView</div><div class=\"line\">    android:id=&quot;@+id/recyclerView&quot;</div><div class=\"line\">    android:layout_width=&quot;match_parent&quot;</div><div class=\"line\">    android:layout_height=&quot;wrap_content&quot;&gt;</div><div class=\"line\"></div><div class=\"line\"> &lt;/android.support.v7.widget.RecyclerView&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;/android.support.constraint.ConstraintLayout&gt;</div></pre></td></tr></table></figure><p>我构建了一个recyclerView，其由美国各州以及其代码的mock数据填充，如下展示：</p><p><img src=\"https://cdn-images-1.medium.com/max/1600/1*WwKn8Y9KQ-1EFAN324xwuw.gif\" alt=\"\"></p><p>现在让我们开始实现快速滚动,更新后的布局文件如下展示:<br></p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</div><div class=\"line\">&lt;android.support.constraint.ConstraintLayout</div><div class=\"line\">    xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</div><div class=\"line\">    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;</div><div class=\"line\">    xmlns:tools=&quot;http://schemas.android.com/tools&quot;</div><div class=\"line\">    android:layout_width=&quot;match_parent&quot;</div><div class=\"line\">    android:layout_height=&quot;match_parent&quot;</div><div class=\"line\">    app:layout_behavior=&quot;@string/appbar_scrolling_view_behavior&quot;</div><div class=\"line\">    tools:context=&quot;com.shaishavgandhi.fastscrolling.MainActivity&quot;</div><div class=\"line\">    tools:showIn=&quot;@layout/activity_main&quot;&gt;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"> &lt;android.support.v7.widget.RecyclerView</div><div class=\"line\">    android:id=&quot;@+id/recyclerView&quot;</div><div class=\"line\">    android:layout_width=&quot;match_parent&quot;</div><div class=\"line\">    android:layout_height=&quot;wrap_content&quot;</div><div class=\"line\">    app:fastScrollEnabled=&quot;true&quot;</div><div class=\"line\">    app:fastScrollHorizontalThumbDrawable=&quot;@drawable/thumb_drawable&quot;</div><div class=\"line\">    app:fastScrollHorizontalTrackDrawable=&quot;@drawable/line_drawable&quot;</div><div class=\"line\">    app:fastScrollVerticalThumbDrawable=&quot;@drawable/thumb_drawable&quot;</div><div class=\"line\">    app:fastScrollVerticalTrackDrawable=&quot;@drawable/line_drawable&quot;&gt;</div><div class=\"line\"></div><div class=\"line\"> &lt;/android.support.v7.widget.RecyclerView&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;/android.support.constraint.ConstraintLayout&gt;</div></pre></td></tr></table></figure><p></p><p>让我们浏览一下下面的属性：</p><ul><li><strong>fastScrollEnabled</strong> boolean类型来启动快速滚动，如果设置为true值的话将要求我们提供一下四个属性</li><li><strong>fastScrollHorizontalThumbDrawable</strong> StateListDrawable类型将被用来绘制可以在横轴可滑动的的滑块</li><li><strong>fastScrollHorizontalTrackDrawable</strong> StateListDrawable类型将被用来绘制一条表示在横轴上的scrollbar的线条（轨道 译者注0）</li><li><strong>fastScrollVerticalThumbDrawable</strong> StateListDrawable类型将被用来绘制可以在纵轴可滑动的的滑块</li><li><strong>fastScrollVerticalTrackDrawable</strong> StateListDrawable类型将被用来绘制一条表示在纵轴上的scrollbar的线条</li></ul><p><strong>后四个的属性的值需要是StateListDrawable 否则会报错</strong>（译者注）</p><p>让我们来看一下StateListDrawables ，我使用原生形状，以便<br>可以轻松地重复使用它们。</p><h4 id=\"line-drawable-xml\"><a href=\"#line-drawable-xml\" class=\"headerlink\" title=\"line_drawable.xml\"></a>line_drawable.xml</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</div><div class=\"line\">&lt;selector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;</div><div class=\"line\">    &lt;item</div><div class=\"line\">        android:state_pressed=&quot;true&quot;</div><div class=\"line\">        android:drawable=&quot;@drawable/line&quot;/&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;item</div><div class=\"line\">        android:drawable=&quot;@drawable/line&quot;/&gt;</div><div class=\"line\">&lt;/selector&gt;</div></pre></td></tr></table></figure><h4 id=\"line-xml\"><a href=\"#line-xml\" class=\"headerlink\" title=\"line.xml\"></a>line.xml</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</div><div class=\"line\">&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</div><div class=\"line\">       android:shape=&quot;rectangle&quot;&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;solid android:color=&quot;@android:color/darker_gray&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;padding</div><div class=\"line\">        android:top=&quot;10dp&quot;</div><div class=\"line\">        android:left=&quot;10dp&quot;</div><div class=\"line\">        android:right=&quot;10dp&quot;</div><div class=\"line\">        android:bottom=&quot;10dp&quot;/&gt;</div><div class=\"line\">&lt;/shape&gt;</div></pre></td></tr></table></figure><h4 id=\"thumb-drawable-xml\"><a href=\"#thumb-drawable-xml\" class=\"headerlink\" title=\"thumb_drawable.xml\"></a>thumb_drawable.xml</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</div><div class=\"line\">&lt;selector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;</div><div class=\"line\">    &lt;item</div><div class=\"line\">        android:state_pressed=&quot;true&quot;</div><div class=\"line\">        android:drawable=&quot;@drawable/thumb&quot;/&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;item</div><div class=\"line\">        android:drawable=&quot;@drawable/thumb&quot;/&gt;</div><div class=\"line\">&lt;/selector&gt;</div></pre></td></tr></table></figure><h4 id=\"thumb-xml\"><a href=\"#thumb-xml\" class=\"headerlink\" title=\"thumb.xml\"></a>thumb.xml</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</div><div class=\"line\">&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</div><div class=\"line\">       android:shape=&quot;rectangle&quot;&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;corners</div><div class=\"line\">        android:topLeftRadius=&quot;44dp&quot;</div><div class=\"line\">        android:topRightRadius=&quot;44dp&quot;</div><div class=\"line\">        android:bottomLeftRadius=&quot;44dp&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;padding</div><div class=\"line\">        android:paddingLeft=&quot;22dp&quot;</div><div class=\"line\">        android:paddingRight=&quot;22dp&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;solid android:color=&quot;@color/colorPrimaryDark&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;/shape&gt;</div></pre></td></tr></table></figure><p>效果如下所示：</p><p><img src=\"https://cdn-images-1.medium.com/max/1600/1*RN2W9mpIMaFkAqs2KI5pyw.gif\" alt=\"image\"></p><p>太棒了！<br><img src=\"https://cdn-images-1.medium.com/max/1600/1*cK8-ghSt_uRfRvMlJNd9cw.gif\" alt=\"image\"></p><p>这是启用快速滚动的基本示例。看到我们如何自定义它以显示信件的首字母，如联系人应用程序。</p><p><a href=\"https://github.com/shaishavgandhi05/FastScrolling\" target=\"_blank\" rel=\"external\">Demo</a></p><p>最后，happy coding。</p>","site":{"data":{}},"excerpt":"","more":"<blockquote><p>原文来源: <a href=\"https://android.jlelse.eu/fast-scrolling-with-recyclerview-2b89d4574688\" target=\"_blank\" rel=\"external\">https://android.jlelse.eu/fast-scrolling-with-recyclerview-2b89d4574688</a></p></blockquote><p>这次翻译一篇来自于medium的文章，内容与recyclerView有关。</p><p>众所周知,RecyclerView对ListView有很大的优势, Recyclerview也逐步代替ListView来实现列表的效果。我十分想念一个功能——快速滚动，你可以拖动一个绘制的滑块并在列表中滚动。<br>在ListView中你可以这是做:</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">listView = (ListView) findViewById(R.id.listView);</div><div class=\"line\">listView.setFastScrollEnabled(true);</div></pre></td></tr></table></figure><p>但是在RecyclerView中，没有一种简单的方式来拖动滑块实现下面的效果:</p><p><img src=\"https://cdn-images-1.medium.com/max/1600/1*HliXJE2zpLAXWmXusOFSSA.gif\" alt=\"dada\"></p><p>所以我们会引用第三方库比如<a href=\"https://github.com/FutureMind/recycler-fast-scroll\" target=\"_blank\" rel=\"external\">Recycler Bubble</a>或者<a href=\"https://github.com/timusus/RecyclerView-FastScroll\" target=\"_blank\" rel=\"external\">RecyclerView-FastScroll</a>。</p><p>随着Support Library 26的到来，我们能够轻松地实现RecyclerView快速滚动。Let’s get to it!</p><p><img src=\"https://cdn-images-1.medium.com/max/1600/1*fnt26zTwl3zkAIazlNGvZw.gif\" alt=\"\"></p><p>首先我们项目得引用Support Library 26,项目中的build.gradle如下所示:<br></p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">dependencies &#123;</div><div class=\"line\">    ....</div><div class=\"line\">    compile &apos;com.android.support:design:26.0.1&apos;</div><div class=\"line\">    compile &apos;com.android.support:recyclerview-v7:26.0.1&apos;</div><div class=\"line\">    ....</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure><p></p><p>由于Support Library 26现已转移到Google的maven存储库，需要在我们项目级的build.gradle文件中添加<strong>google()</strong></p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">buildscript &#123;</div><div class=\"line\"></div><div class=\"line\">    repositories &#123;</div><div class=\"line\">        google()</div><div class=\"line\">    &#125;</div><div class=\"line\">    ....</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure><p>这是我们界面的布局代码,如下:</p><h4 id=\"content-main-xml\"><a href=\"#content-main-xml\" class=\"headerlink\" title=\"content_main.xml\"></a>content_main.xml</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</div><div class=\"line\">&lt;android.support.constraint.ConstraintLayout</div><div class=\"line\">    xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</div><div class=\"line\">    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;</div><div class=\"line\">    xmlns:tools=&quot;http://schemas.android.com/tools&quot;</div><div class=\"line\">    android:layout_width=&quot;match_parent&quot;</div><div class=\"line\">    android:layout_height=&quot;match_parent&quot;</div><div class=\"line\">    app:layout_behavior=&quot;@string/appbar_scrolling_view_behavior&quot;</div><div class=\"line\">    tools:context=&quot;com.shaishavgandhi.fastscrolling.MainActivity&quot;</div><div class=\"line\">    tools:showIn=&quot;@layout/activity_main&quot;&gt;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"> &lt;android.support.v7.widget.RecyclerView</div><div class=\"line\">    android:id=&quot;@+id/recyclerView&quot;</div><div class=\"line\">    android:layout_width=&quot;match_parent&quot;</div><div class=\"line\">    android:layout_height=&quot;wrap_content&quot;&gt;</div><div class=\"line\"></div><div class=\"line\"> &lt;/android.support.v7.widget.RecyclerView&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;/android.support.constraint.ConstraintLayout&gt;</div></pre></td></tr></table></figure><p>我构建了一个recyclerView，其由美国各州以及其代码的mock数据填充，如下展示：</p><p><img src=\"https://cdn-images-1.medium.com/max/1600/1*WwKn8Y9KQ-1EFAN324xwuw.gif\" alt=\"\"></p><p>现在让我们开始实现快速滚动,更新后的布局文件如下展示:<br></p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</div><div class=\"line\">&lt;android.support.constraint.ConstraintLayout</div><div class=\"line\">    xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</div><div class=\"line\">    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;</div><div class=\"line\">    xmlns:tools=&quot;http://schemas.android.com/tools&quot;</div><div class=\"line\">    android:layout_width=&quot;match_parent&quot;</div><div class=\"line\">    android:layout_height=&quot;match_parent&quot;</div><div class=\"line\">    app:layout_behavior=&quot;@string/appbar_scrolling_view_behavior&quot;</div><div class=\"line\">    tools:context=&quot;com.shaishavgandhi.fastscrolling.MainActivity&quot;</div><div class=\"line\">    tools:showIn=&quot;@layout/activity_main&quot;&gt;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"> &lt;android.support.v7.widget.RecyclerView</div><div class=\"line\">    android:id=&quot;@+id/recyclerView&quot;</div><div class=\"line\">    android:layout_width=&quot;match_parent&quot;</div><div class=\"line\">    android:layout_height=&quot;wrap_content&quot;</div><div class=\"line\">    app:fastScrollEnabled=&quot;true&quot;</div><div class=\"line\">    app:fastScrollHorizontalThumbDrawable=&quot;@drawable/thumb_drawable&quot;</div><div class=\"line\">    app:fastScrollHorizontalTrackDrawable=&quot;@drawable/line_drawable&quot;</div><div class=\"line\">    app:fastScrollVerticalThumbDrawable=&quot;@drawable/thumb_drawable&quot;</div><div class=\"line\">    app:fastScrollVerticalTrackDrawable=&quot;@drawable/line_drawable&quot;&gt;</div><div class=\"line\"></div><div class=\"line\"> &lt;/android.support.v7.widget.RecyclerView&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;/android.support.constraint.ConstraintLayout&gt;</div></pre></td></tr></table></figure><p></p><p>让我们浏览一下下面的属性：</p><ul><li><strong>fastScrollEnabled</strong> boolean类型来启动快速滚动，如果设置为true值的话将要求我们提供一下四个属性</li><li><strong>fastScrollHorizontalThumbDrawable</strong> StateListDrawable类型将被用来绘制可以在横轴可滑动的的滑块</li><li><strong>fastScrollHorizontalTrackDrawable</strong> StateListDrawable类型将被用来绘制一条表示在横轴上的scrollbar的线条（轨道 译者注0）</li><li><strong>fastScrollVerticalThumbDrawable</strong> StateListDrawable类型将被用来绘制可以在纵轴可滑动的的滑块</li><li><strong>fastScrollVerticalTrackDrawable</strong> StateListDrawable类型将被用来绘制一条表示在纵轴上的scrollbar的线条</li></ul><p><strong>后四个的属性的值需要是StateListDrawable 否则会报错</strong>（译者注）</p><p>让我们来看一下StateListDrawables ，我使用原生形状，以便<br>可以轻松地重复使用它们。</p><h4 id=\"line-drawable-xml\"><a href=\"#line-drawable-xml\" class=\"headerlink\" title=\"line_drawable.xml\"></a>line_drawable.xml</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</div><div class=\"line\">&lt;selector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;</div><div class=\"line\">    &lt;item</div><div class=\"line\">        android:state_pressed=&quot;true&quot;</div><div class=\"line\">        android:drawable=&quot;@drawable/line&quot;/&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;item</div><div class=\"line\">        android:drawable=&quot;@drawable/line&quot;/&gt;</div><div class=\"line\">&lt;/selector&gt;</div></pre></td></tr></table></figure><h4 id=\"line-xml\"><a href=\"#line-xml\" class=\"headerlink\" title=\"line.xml\"></a>line.xml</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</div><div class=\"line\">&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</div><div class=\"line\">       android:shape=&quot;rectangle&quot;&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;solid android:color=&quot;@android:color/darker_gray&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;padding</div><div class=\"line\">        android:top=&quot;10dp&quot;</div><div class=\"line\">        android:left=&quot;10dp&quot;</div><div class=\"line\">        android:right=&quot;10dp&quot;</div><div class=\"line\">        android:bottom=&quot;10dp&quot;/&gt;</div><div class=\"line\">&lt;/shape&gt;</div></pre></td></tr></table></figure><h4 id=\"thumb-drawable-xml\"><a href=\"#thumb-drawable-xml\" class=\"headerlink\" title=\"thumb_drawable.xml\"></a>thumb_drawable.xml</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</div><div class=\"line\">&lt;selector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;</div><div class=\"line\">    &lt;item</div><div class=\"line\">        android:state_pressed=&quot;true&quot;</div><div class=\"line\">        android:drawable=&quot;@drawable/thumb&quot;/&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;item</div><div class=\"line\">        android:drawable=&quot;@drawable/thumb&quot;/&gt;</div><div class=\"line\">&lt;/selector&gt;</div></pre></td></tr></table></figure><h4 id=\"thumb-xml\"><a href=\"#thumb-xml\" class=\"headerlink\" title=\"thumb.xml\"></a>thumb.xml</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</div><div class=\"line\">&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</div><div class=\"line\">       android:shape=&quot;rectangle&quot;&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;corners</div><div class=\"line\">        android:topLeftRadius=&quot;44dp&quot;</div><div class=\"line\">        android:topRightRadius=&quot;44dp&quot;</div><div class=\"line\">        android:bottomLeftRadius=&quot;44dp&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;padding</div><div class=\"line\">        android:paddingLeft=&quot;22dp&quot;</div><div class=\"line\">        android:paddingRight=&quot;22dp&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;solid android:color=&quot;@color/colorPrimaryDark&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;/shape&gt;</div></pre></td></tr></table></figure><p>效果如下所示：</p><p><img src=\"https://cdn-images-1.medium.com/max/1600/1*RN2W9mpIMaFkAqs2KI5pyw.gif\" alt=\"image\"></p><p>太棒了！<br><img src=\"https://cdn-images-1.medium.com/max/1600/1*cK8-ghSt_uRfRvMlJNd9cw.gif\" alt=\"image\"></p><p>这是启用快速滚动的基本示例。看到我们如何自定义它以显示信件的首字母，如联系人应用程序。</p><p><a href=\"https://github.com/shaishavgandhi05/FastScrolling\" target=\"_blank\" rel=\"external\">Demo</a></p><p>最后，happy coding。</p>"},{"title":"FlexboxLayout的封装过程","author":{"name":"刘赛登","link":null},"date":"2017-10-29T14:22:49.000Z","_content":"\n## 什么是FlexboxLayout\n[FlexboxLayout](https://github.com/google/flexbox-layout)是Google开源出来的一个控件。\n\n> FlexboxLayout is a library project which brings the similar capabilities of CSS Flexible Box Layout Module to Android.\n\n上面大致的意思是FLexboxLayout是一个能为android带来类似CSS Flexbox 布局类似的能力的组件。\n\n根据官方的说明，在使用FlexboxLayout之前，我们需要了解CSS Flexbox属性。以下是了解Flexbox的链接，需要各位了解：\n\n1. [CSS Flexbox 介绍](http://cssreference.parryqiu.com/flexbox/)\n2. [FLEXBOX FROGGY玩游戏学flex\n](http://flexboxfroggy.com/#zh-cn)\n3. [Flexbox相关收集](https://github.com/huixisheng/flexbox)\n\n## 实例\n![image](https://raw.githubusercontent.com/HuangYuSherry/sketch/master/demo.png)\n\n## 使用场景\n实例中说明FlexboxLayout可以来实现首页功能按钮的多行布局（**解决RecyclerView嵌套问题**），流式布局（**代替[hongyang 的FlowLayout](https://github.com/hongyangAndroid/FlowLayout)，官方的功能性更强**）,前两个场景应该还我们开发过程经常会碰到的，当然还有很多使用场景。\n\n## 封装过程 ##\n\n我封装的目的是为了使用方便,并没有对fleboxlayout本身做内部操作。\n\n### 引入Flexboxlayout ###\n\n在项目的build.gradle添加一下代码:\n```\ndependencies {\n    compile 'com.google.android:flexbox:0.3.1'\n}\n```\n### 创建Adapter适配器\n```\npublic abstract class FlexBoxAdapter<T extends FlexBoxViewHolder> {\n\n    public abstract T onCreateViewHolder(ViewGroup parent);\n\n    public abstract void onHandleLayoutParams(View view, int spanCount, int position);\n\n    public abstract void onBindViewHolder(T holder, int position);\n\n    public abstract int getCount();\n\n    private final DataSetObservable mDataSetObservable = new DataSetObservable();\n\n    public void registerDataSetObserver(DataSetObserver observer) {\n        mDataSetObservable.registerObserver(observer);\n    }\n\n    public void unregisterDataSetObserver(DataSetObserver observer) {\n        mDataSetObservable.unregisterObserver(observer);\n    }\n\n    public void notifyDataSetChanged() {\n        mDataSetObservable.notifyChanged();\n    }\n}\n```\n使用adapter是了为控件提供数据的来源，将数据和View本身分离，对实现者来说操作层面上只需要关注**onCreateViewHolder()**,**onBindViewHolder()**，**onHandleLayoutParams()**,熟悉RecyclerView的人来说能理解前两个方法，第三个方法是为了对子view进行Flexbox属性操作。例如：\n\n```\n@Override\n    public void onHandleLayoutParams(View view, int spanCount, int position) {\n        FlexboxLayout.LayoutParams lp = (FlexboxLayout.LayoutParams) view.getLayoutParams();\n        if ((position) % spanCount == 0) {\n            lp.setWrapBefore(true);\n        } else {\n            lp.setWrapBefore(false);\n        }\n        view.setLayoutParams(lp);\n    }\n```\n上面的属性是调用者主动让子View换行。使用情景可以首页功能按钮为多行。\n\n###封装FlexboxLayout\n核心代码\n\n```\n public void setAdapter(FlexBoxAdapter adapter) {\n        if (mAdapter != null && mDataSetObserver != null) {\n            mAdapter.unregisterDataSetObserver(mDataSetObserver);\n        }\n\n        mAdapter = adapter;\n\n        if (mAdapter != null) {\n            mDataSetObserver = new AdapterDataSetObserver();\n            mAdapter.registerDataSetObserver(mDataSetObserver);\n            removeAllViews();\n            mHolders.clear();\n            refreshView();\n        } else {\n            throw new NullPointerException(\"adapter 不可为空\");\n        }\n    }\n    private void refreshView() {\n        mCurItemCount = mAdapter.getCount();\n        if (mCurItemCount > 0) {\n            for (int i = 0; i < mCurItemCount; i++) {\n                final FlexBoxViewHolder holder = createViewHolder(i);\n\n                onHandleItmViewListener(i, holder);\n\n                mAdapter.onHandleLayoutParams(holder.itemView, mSpanCount, i);\n\n                mAdapter.onBindViewHolder(holder, i);\n            }\n        } else {\n            removeAllViews();\n            mHolders.clear();\n        }\n    }\n\n    /**\n     * 创建ViewHolder\n     *\n     * @param position\n     * @return\n     */\n    private FlexBoxViewHolder createViewHolder(int position) {\n\n        FlexBoxViewHolder holder = null;\n        if (mHolders.size() > position) {\n            holder = mHolders.get(position);\n        }\n\n        if (holder == null) {\n            holder = mAdapter.onCreateViewHolder(this);\n            if (holder.itemView.getParent() == null) {// 未添加到父布局中需要添加，已经添加的不需要再次添加\n                this.addView(holder.itemView, position);\n            }\n            mHolders.add(holder);\n        }\n        return holder;\n    }\n\n     private void notifyDataSetChanged() {\n        if (getChildCount() > mAdapter.getCount()) {\n            removeViewAt(getChildCount() - mAdapter.getCount());\n        }\n        refreshView();\n    }\n```\n这里开放setAdapter()供调用者使用，接下来做的操作解释创建View，添加View，对View进行数据操作，这方面可以对照**onCreateViewHolder()**,**onBindViewHolder()**两个方法理解。\n\n### 点击事件\n```\n flexboxLayout.setOnFlexBoxItemClickListener(new OnFlexBoxItemClickListener() {\n            @Override\n            public void onItemClick(View view, int position) {\n                //@todo\n            }\n        });\n```\n\n\n### 调用代码\n\n```\nUIFlexBoxView tagView = findViewById(R.id.tag_view);\nTagFlexBoxAdapter  adapter = new TagFlexBoxAdapter(tagList.getTags());\ntagView(adapter);\n```\n\n### 关于NotifyDataSetChanged()\nnotifyDataSetChanged() 这边是为了减少View的创建，并没有实现RecyclerView的View复用的效果。当然你依然可以在数据变化后依然调用setAdapter(),在正常情况下并不影响使用效果。\n\n\n[github项目地址](https://github.com/shamao/Beauty/tree/master/app/src/main/java/beauty/louise/com/view/flexbox)\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/google-flexbox-layout.md","raw":"---\ntitle: FlexboxLayout的封装过程\nauthor:\n  name: 刘赛登\n  link:\ndate: 2017-10-29 22:22:49\ntags:\n- Android\n---\n\n## 什么是FlexboxLayout\n[FlexboxLayout](https://github.com/google/flexbox-layout)是Google开源出来的一个控件。\n\n> FlexboxLayout is a library project which brings the similar capabilities of CSS Flexible Box Layout Module to Android.\n\n上面大致的意思是FLexboxLayout是一个能为android带来类似CSS Flexbox 布局类似的能力的组件。\n\n根据官方的说明，在使用FlexboxLayout之前，我们需要了解CSS Flexbox属性。以下是了解Flexbox的链接，需要各位了解：\n\n1. [CSS Flexbox 介绍](http://cssreference.parryqiu.com/flexbox/)\n2. [FLEXBOX FROGGY玩游戏学flex\n](http://flexboxfroggy.com/#zh-cn)\n3. [Flexbox相关收集](https://github.com/huixisheng/flexbox)\n\n## 实例\n![image](https://raw.githubusercontent.com/HuangYuSherry/sketch/master/demo.png)\n\n## 使用场景\n实例中说明FlexboxLayout可以来实现首页功能按钮的多行布局（**解决RecyclerView嵌套问题**），流式布局（**代替[hongyang 的FlowLayout](https://github.com/hongyangAndroid/FlowLayout)，官方的功能性更强**）,前两个场景应该还我们开发过程经常会碰到的，当然还有很多使用场景。\n\n## 封装过程 ##\n\n我封装的目的是为了使用方便,并没有对fleboxlayout本身做内部操作。\n\n### 引入Flexboxlayout ###\n\n在项目的build.gradle添加一下代码:\n```\ndependencies {\n    compile 'com.google.android:flexbox:0.3.1'\n}\n```\n### 创建Adapter适配器\n```\npublic abstract class FlexBoxAdapter<T extends FlexBoxViewHolder> {\n\n    public abstract T onCreateViewHolder(ViewGroup parent);\n\n    public abstract void onHandleLayoutParams(View view, int spanCount, int position);\n\n    public abstract void onBindViewHolder(T holder, int position);\n\n    public abstract int getCount();\n\n    private final DataSetObservable mDataSetObservable = new DataSetObservable();\n\n    public void registerDataSetObserver(DataSetObserver observer) {\n        mDataSetObservable.registerObserver(observer);\n    }\n\n    public void unregisterDataSetObserver(DataSetObserver observer) {\n        mDataSetObservable.unregisterObserver(observer);\n    }\n\n    public void notifyDataSetChanged() {\n        mDataSetObservable.notifyChanged();\n    }\n}\n```\n使用adapter是了为控件提供数据的来源，将数据和View本身分离，对实现者来说操作层面上只需要关注**onCreateViewHolder()**,**onBindViewHolder()**，**onHandleLayoutParams()**,熟悉RecyclerView的人来说能理解前两个方法，第三个方法是为了对子view进行Flexbox属性操作。例如：\n\n```\n@Override\n    public void onHandleLayoutParams(View view, int spanCount, int position) {\n        FlexboxLayout.LayoutParams lp = (FlexboxLayout.LayoutParams) view.getLayoutParams();\n        if ((position) % spanCount == 0) {\n            lp.setWrapBefore(true);\n        } else {\n            lp.setWrapBefore(false);\n        }\n        view.setLayoutParams(lp);\n    }\n```\n上面的属性是调用者主动让子View换行。使用情景可以首页功能按钮为多行。\n\n###封装FlexboxLayout\n核心代码\n\n```\n public void setAdapter(FlexBoxAdapter adapter) {\n        if (mAdapter != null && mDataSetObserver != null) {\n            mAdapter.unregisterDataSetObserver(mDataSetObserver);\n        }\n\n        mAdapter = adapter;\n\n        if (mAdapter != null) {\n            mDataSetObserver = new AdapterDataSetObserver();\n            mAdapter.registerDataSetObserver(mDataSetObserver);\n            removeAllViews();\n            mHolders.clear();\n            refreshView();\n        } else {\n            throw new NullPointerException(\"adapter 不可为空\");\n        }\n    }\n    private void refreshView() {\n        mCurItemCount = mAdapter.getCount();\n        if (mCurItemCount > 0) {\n            for (int i = 0; i < mCurItemCount; i++) {\n                final FlexBoxViewHolder holder = createViewHolder(i);\n\n                onHandleItmViewListener(i, holder);\n\n                mAdapter.onHandleLayoutParams(holder.itemView, mSpanCount, i);\n\n                mAdapter.onBindViewHolder(holder, i);\n            }\n        } else {\n            removeAllViews();\n            mHolders.clear();\n        }\n    }\n\n    /**\n     * 创建ViewHolder\n     *\n     * @param position\n     * @return\n     */\n    private FlexBoxViewHolder createViewHolder(int position) {\n\n        FlexBoxViewHolder holder = null;\n        if (mHolders.size() > position) {\n            holder = mHolders.get(position);\n        }\n\n        if (holder == null) {\n            holder = mAdapter.onCreateViewHolder(this);\n            if (holder.itemView.getParent() == null) {// 未添加到父布局中需要添加，已经添加的不需要再次添加\n                this.addView(holder.itemView, position);\n            }\n            mHolders.add(holder);\n        }\n        return holder;\n    }\n\n     private void notifyDataSetChanged() {\n        if (getChildCount() > mAdapter.getCount()) {\n            removeViewAt(getChildCount() - mAdapter.getCount());\n        }\n        refreshView();\n    }\n```\n这里开放setAdapter()供调用者使用，接下来做的操作解释创建View，添加View，对View进行数据操作，这方面可以对照**onCreateViewHolder()**,**onBindViewHolder()**两个方法理解。\n\n### 点击事件\n```\n flexboxLayout.setOnFlexBoxItemClickListener(new OnFlexBoxItemClickListener() {\n            @Override\n            public void onItemClick(View view, int position) {\n                //@todo\n            }\n        });\n```\n\n\n### 调用代码\n\n```\nUIFlexBoxView tagView = findViewById(R.id.tag_view);\nTagFlexBoxAdapter  adapter = new TagFlexBoxAdapter(tagList.getTags());\ntagView(adapter);\n```\n\n### 关于NotifyDataSetChanged()\nnotifyDataSetChanged() 这边是为了减少View的创建，并没有实现RecyclerView的View复用的效果。当然你依然可以在数据变化后依然调用setAdapter(),在正常情况下并不影响使用效果。\n\n\n[github项目地址](https://github.com/shamao/Beauty/tree/master/app/src/main/java/beauty/louise/com/view/flexbox)\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"google-flexbox-layout","published":1,"updated":"2017-10-29T14:24:31.893Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9cutio1000eds9le6u20zvu","content":"<h2 id=\"什么是FlexboxLayout\"><a href=\"#什么是FlexboxLayout\" class=\"headerlink\" title=\"什么是FlexboxLayout\"></a>什么是FlexboxLayout</h2><p><a href=\"https://github.com/google/flexbox-layout\" target=\"_blank\" rel=\"external\">FlexboxLayout</a>是Google开源出来的一个控件。</p><blockquote><p>FlexboxLayout is a library project which brings the similar capabilities of CSS Flexible Box Layout Module to Android.</p></blockquote><p>上面大致的意思是FLexboxLayout是一个能为android带来类似CSS Flexbox 布局类似的能力的组件。</p><p>根据官方的说明，在使用FlexboxLayout之前，我们需要了解CSS Flexbox属性。以下是了解Flexbox的链接，需要各位了解：</p><ol><li><a href=\"http://cssreference.parryqiu.com/flexbox/\" target=\"_blank\" rel=\"external\">CSS Flexbox 介绍</a></li><li><a href=\"http://flexboxfroggy.com/#zh-cn\" target=\"_blank\" rel=\"external\">FLEXBOX FROGGY玩游戏学flex</a></li><li><a href=\"https://github.com/huixisheng/flexbox\" target=\"_blank\" rel=\"external\">Flexbox相关收集</a></li></ol><h2 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h2><p><img src=\"https://raw.githubusercontent.com/HuangYuSherry/sketch/master/demo.png\" alt=\"image\"></p><h2 id=\"使用场景\"><a href=\"#使用场景\" class=\"headerlink\" title=\"使用场景\"></a>使用场景</h2><p>实例中说明FlexboxLayout可以来实现首页功能按钮的多行布局（<strong>解决RecyclerView嵌套问题</strong>），流式布局（<strong>代替<a href=\"https://github.com/hongyangAndroid/FlowLayout\" target=\"_blank\" rel=\"external\">hongyang 的FlowLayout</a>，官方的功能性更强</strong>）,前两个场景应该还我们开发过程经常会碰到的，当然还有很多使用场景。</p><h2 id=\"封装过程\"><a href=\"#封装过程\" class=\"headerlink\" title=\"封装过程\"></a>封装过程</h2><p>我封装的目的是为了使用方便,并没有对fleboxlayout本身做内部操作。</p><h3 id=\"引入Flexboxlayout\"><a href=\"#引入Flexboxlayout\" class=\"headerlink\" title=\"引入Flexboxlayout\"></a>引入Flexboxlayout</h3><p>在项目的build.gradle添加一下代码:<br></p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">dependencies &#123;</div><div class=\"line\">    compile &apos;com.google.android:flexbox:0.3.1&apos;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure><p></p><h3 id=\"创建Adapter适配器\"><a href=\"#创建Adapter适配器\" class=\"headerlink\" title=\"创建Adapter适配器\"></a>创建Adapter适配器</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\">public abstract class FlexBoxAdapter&lt;T extends FlexBoxViewHolder&gt; &#123;</div><div class=\"line\"></div><div class=\"line\">    public abstract T onCreateViewHolder(ViewGroup parent);</div><div class=\"line\"></div><div class=\"line\">    public abstract void onHandleLayoutParams(View view, int spanCount, int position);</div><div class=\"line\"></div><div class=\"line\">    public abstract void onBindViewHolder(T holder, int position);</div><div class=\"line\"></div><div class=\"line\">    public abstract int getCount();</div><div class=\"line\"></div><div class=\"line\">    private final DataSetObservable mDataSetObservable = new DataSetObservable();</div><div class=\"line\"></div><div class=\"line\">    public void registerDataSetObserver(DataSetObserver observer) &#123;</div><div class=\"line\">        mDataSetObservable.registerObserver(observer);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    public void unregisterDataSetObserver(DataSetObserver observer) &#123;</div><div class=\"line\">        mDataSetObservable.unregisterObserver(observer);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    public void notifyDataSetChanged() &#123;</div><div class=\"line\">        mDataSetObservable.notifyChanged();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure><p>使用adapter是了为控件提供数据的来源，将数据和View本身分离，对实现者来说操作层面上只需要关注<strong>onCreateViewHolder()</strong>,<strong>onBindViewHolder()</strong>，<strong>onHandleLayoutParams()</strong>,熟悉RecyclerView的人来说能理解前两个方法，第三个方法是为了对子view进行Flexbox属性操作。例如：</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">@Override</div><div class=\"line\">    public void onHandleLayoutParams(View view, int spanCount, int position) &#123;</div><div class=\"line\">        FlexboxLayout.LayoutParams lp = (FlexboxLayout.LayoutParams) view.getLayoutParams();</div><div class=\"line\">        if ((position) % spanCount == 0) &#123;</div><div class=\"line\">            lp.setWrapBefore(true);</div><div class=\"line\">        &#125; else &#123;</div><div class=\"line\">            lp.setWrapBefore(false);</div><div class=\"line\">        &#125;</div><div class=\"line\">        view.setLayoutParams(lp);</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure><p>上面的属性是调用者主动让子View换行。使用情景可以首页功能按钮为多行。</p><p>###封装FlexboxLayout<br>核心代码</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div></pre></td><td class=\"code\"><pre><div class=\"line\">public void setAdapter(FlexBoxAdapter adapter) &#123;</div><div class=\"line\">       if (mAdapter != null &amp;&amp; mDataSetObserver != null) &#123;</div><div class=\"line\">           mAdapter.unregisterDataSetObserver(mDataSetObserver);</div><div class=\"line\">       &#125;</div><div class=\"line\"></div><div class=\"line\">       mAdapter = adapter;</div><div class=\"line\"></div><div class=\"line\">       if (mAdapter != null) &#123;</div><div class=\"line\">           mDataSetObserver = new AdapterDataSetObserver();</div><div class=\"line\">           mAdapter.registerDataSetObserver(mDataSetObserver);</div><div class=\"line\">           removeAllViews();</div><div class=\"line\">           mHolders.clear();</div><div class=\"line\">           refreshView();</div><div class=\"line\">       &#125; else &#123;</div><div class=\"line\">           throw new NullPointerException(&quot;adapter 不可为空&quot;);</div><div class=\"line\">       &#125;</div><div class=\"line\">   &#125;</div><div class=\"line\">   private void refreshView() &#123;</div><div class=\"line\">       mCurItemCount = mAdapter.getCount();</div><div class=\"line\">       if (mCurItemCount &gt; 0) &#123;</div><div class=\"line\">           for (int i = 0; i &lt; mCurItemCount; i++) &#123;</div><div class=\"line\">               final FlexBoxViewHolder holder = createViewHolder(i);</div><div class=\"line\"></div><div class=\"line\">               onHandleItmViewListener(i, holder);</div><div class=\"line\"></div><div class=\"line\">               mAdapter.onHandleLayoutParams(holder.itemView, mSpanCount, i);</div><div class=\"line\"></div><div class=\"line\">               mAdapter.onBindViewHolder(holder, i);</div><div class=\"line\">           &#125;</div><div class=\"line\">       &#125; else &#123;</div><div class=\"line\">           removeAllViews();</div><div class=\"line\">           mHolders.clear();</div><div class=\"line\">       &#125;</div><div class=\"line\">   &#125;</div><div class=\"line\"></div><div class=\"line\">   /**</div><div class=\"line\">    * 创建ViewHolder</div><div class=\"line\">    *</div><div class=\"line\">    * @param position</div><div class=\"line\">    * @return</div><div class=\"line\">    */</div><div class=\"line\">   private FlexBoxViewHolder createViewHolder(int position) &#123;</div><div class=\"line\"></div><div class=\"line\">       FlexBoxViewHolder holder = null;</div><div class=\"line\">       if (mHolders.size() &gt; position) &#123;</div><div class=\"line\">           holder = mHolders.get(position);</div><div class=\"line\">       &#125;</div><div class=\"line\"></div><div class=\"line\">       if (holder == null) &#123;</div><div class=\"line\">           holder = mAdapter.onCreateViewHolder(this);</div><div class=\"line\">           if (holder.itemView.getParent() == null) &#123;// 未添加到父布局中需要添加，已经添加的不需要再次添加</div><div class=\"line\">               this.addView(holder.itemView, position);</div><div class=\"line\">           &#125;</div><div class=\"line\">           mHolders.add(holder);</div><div class=\"line\">       &#125;</div><div class=\"line\">       return holder;</div><div class=\"line\">   &#125;</div><div class=\"line\"></div><div class=\"line\">    private void notifyDataSetChanged() &#123;</div><div class=\"line\">       if (getChildCount() &gt; mAdapter.getCount()) &#123;</div><div class=\"line\">           removeViewAt(getChildCount() - mAdapter.getCount());</div><div class=\"line\">       &#125;</div><div class=\"line\">       refreshView();</div><div class=\"line\">   &#125;</div></pre></td></tr></table></figure><p>这里开放setAdapter()供调用者使用，接下来做的操作解释创建View，添加View，对View进行数据操作，这方面可以对照<strong>onCreateViewHolder()</strong>,<strong>onBindViewHolder()</strong>两个方法理解。</p><h3 id=\"点击事件\"><a href=\"#点击事件\" class=\"headerlink\" title=\"点击事件\"></a>点击事件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">flexboxLayout.setOnFlexBoxItemClickListener(new OnFlexBoxItemClickListener() &#123;</div><div class=\"line\">           @Override</div><div class=\"line\">           public void onItemClick(View view, int position) &#123;</div><div class=\"line\">               //@todo</div><div class=\"line\">           &#125;</div><div class=\"line\">       &#125;);</div></pre></td></tr></table></figure><h3 id=\"调用代码\"><a href=\"#调用代码\" class=\"headerlink\" title=\"调用代码\"></a>调用代码</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">UIFlexBoxView tagView = findViewById(R.id.tag_view);</div><div class=\"line\">TagFlexBoxAdapter  adapter = new TagFlexBoxAdapter(tagList.getTags());</div><div class=\"line\">tagView(adapter);</div></pre></td></tr></table></figure><h3 id=\"关于NotifyDataSetChanged\"><a href=\"#关于NotifyDataSetChanged\" class=\"headerlink\" title=\"关于NotifyDataSetChanged()\"></a>关于NotifyDataSetChanged()</h3><p>notifyDataSetChanged() 这边是为了减少View的创建，并没有实现RecyclerView的View复用的效果。当然你依然可以在数据变化后依然调用setAdapter(),在正常情况下并不影响使用效果。</p><p><a href=\"https://github.com/shamao/Beauty/tree/master/app/src/main/java/beauty/louise/com/view/flexbox\" target=\"_blank\" rel=\"external\">github项目地址</a></p>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"什么是FlexboxLayout\"><a href=\"#什么是FlexboxLayout\" class=\"headerlink\" title=\"什么是FlexboxLayout\"></a>什么是FlexboxLayout</h2><p><a href=\"https://github.com/google/flexbox-layout\" target=\"_blank\" rel=\"external\">FlexboxLayout</a>是Google开源出来的一个控件。</p><blockquote><p>FlexboxLayout is a library project which brings the similar capabilities of CSS Flexible Box Layout Module to Android.</p></blockquote><p>上面大致的意思是FLexboxLayout是一个能为android带来类似CSS Flexbox 布局类似的能力的组件。</p><p>根据官方的说明，在使用FlexboxLayout之前，我们需要了解CSS Flexbox属性。以下是了解Flexbox的链接，需要各位了解：</p><ol><li><a href=\"http://cssreference.parryqiu.com/flexbox/\" target=\"_blank\" rel=\"external\">CSS Flexbox 介绍</a></li><li><a href=\"http://flexboxfroggy.com/#zh-cn\" target=\"_blank\" rel=\"external\">FLEXBOX FROGGY玩游戏学flex</a></li><li><a href=\"https://github.com/huixisheng/flexbox\" target=\"_blank\" rel=\"external\">Flexbox相关收集</a></li></ol><h2 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h2><p><img src=\"https://raw.githubusercontent.com/HuangYuSherry/sketch/master/demo.png\" alt=\"image\"></p><h2 id=\"使用场景\"><a href=\"#使用场景\" class=\"headerlink\" title=\"使用场景\"></a>使用场景</h2><p>实例中说明FlexboxLayout可以来实现首页功能按钮的多行布局（<strong>解决RecyclerView嵌套问题</strong>），流式布局（<strong>代替<a href=\"https://github.com/hongyangAndroid/FlowLayout\" target=\"_blank\" rel=\"external\">hongyang 的FlowLayout</a>，官方的功能性更强</strong>）,前两个场景应该还我们开发过程经常会碰到的，当然还有很多使用场景。</p><h2 id=\"封装过程\"><a href=\"#封装过程\" class=\"headerlink\" title=\"封装过程\"></a>封装过程</h2><p>我封装的目的是为了使用方便,并没有对fleboxlayout本身做内部操作。</p><h3 id=\"引入Flexboxlayout\"><a href=\"#引入Flexboxlayout\" class=\"headerlink\" title=\"引入Flexboxlayout\"></a>引入Flexboxlayout</h3><p>在项目的build.gradle添加一下代码:<br></p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">dependencies &#123;</div><div class=\"line\">    compile &apos;com.google.android:flexbox:0.3.1&apos;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure><p></p><h3 id=\"创建Adapter适配器\"><a href=\"#创建Adapter适配器\" class=\"headerlink\" title=\"创建Adapter适配器\"></a>创建Adapter适配器</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\">public abstract class FlexBoxAdapter&lt;T extends FlexBoxViewHolder&gt; &#123;</div><div class=\"line\"></div><div class=\"line\">    public abstract T onCreateViewHolder(ViewGroup parent);</div><div class=\"line\"></div><div class=\"line\">    public abstract void onHandleLayoutParams(View view, int spanCount, int position);</div><div class=\"line\"></div><div class=\"line\">    public abstract void onBindViewHolder(T holder, int position);</div><div class=\"line\"></div><div class=\"line\">    public abstract int getCount();</div><div class=\"line\"></div><div class=\"line\">    private final DataSetObservable mDataSetObservable = new DataSetObservable();</div><div class=\"line\"></div><div class=\"line\">    public void registerDataSetObserver(DataSetObserver observer) &#123;</div><div class=\"line\">        mDataSetObservable.registerObserver(observer);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    public void unregisterDataSetObserver(DataSetObserver observer) &#123;</div><div class=\"line\">        mDataSetObservable.unregisterObserver(observer);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    public void notifyDataSetChanged() &#123;</div><div class=\"line\">        mDataSetObservable.notifyChanged();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure><p>使用adapter是了为控件提供数据的来源，将数据和View本身分离，对实现者来说操作层面上只需要关注<strong>onCreateViewHolder()</strong>,<strong>onBindViewHolder()</strong>，<strong>onHandleLayoutParams()</strong>,熟悉RecyclerView的人来说能理解前两个方法，第三个方法是为了对子view进行Flexbox属性操作。例如：</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">@Override</div><div class=\"line\">    public void onHandleLayoutParams(View view, int spanCount, int position) &#123;</div><div class=\"line\">        FlexboxLayout.LayoutParams lp = (FlexboxLayout.LayoutParams) view.getLayoutParams();</div><div class=\"line\">        if ((position) % spanCount == 0) &#123;</div><div class=\"line\">            lp.setWrapBefore(true);</div><div class=\"line\">        &#125; else &#123;</div><div class=\"line\">            lp.setWrapBefore(false);</div><div class=\"line\">        &#125;</div><div class=\"line\">        view.setLayoutParams(lp);</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure><p>上面的属性是调用者主动让子View换行。使用情景可以首页功能按钮为多行。</p><p>###封装FlexboxLayout<br>核心代码</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div></pre></td><td class=\"code\"><pre><div class=\"line\">public void setAdapter(FlexBoxAdapter adapter) &#123;</div><div class=\"line\">       if (mAdapter != null &amp;&amp; mDataSetObserver != null) &#123;</div><div class=\"line\">           mAdapter.unregisterDataSetObserver(mDataSetObserver);</div><div class=\"line\">       &#125;</div><div class=\"line\"></div><div class=\"line\">       mAdapter = adapter;</div><div class=\"line\"></div><div class=\"line\">       if (mAdapter != null) &#123;</div><div class=\"line\">           mDataSetObserver = new AdapterDataSetObserver();</div><div class=\"line\">           mAdapter.registerDataSetObserver(mDataSetObserver);</div><div class=\"line\">           removeAllViews();</div><div class=\"line\">           mHolders.clear();</div><div class=\"line\">           refreshView();</div><div class=\"line\">       &#125; else &#123;</div><div class=\"line\">           throw new NullPointerException(&quot;adapter 不可为空&quot;);</div><div class=\"line\">       &#125;</div><div class=\"line\">   &#125;</div><div class=\"line\">   private void refreshView() &#123;</div><div class=\"line\">       mCurItemCount = mAdapter.getCount();</div><div class=\"line\">       if (mCurItemCount &gt; 0) &#123;</div><div class=\"line\">           for (int i = 0; i &lt; mCurItemCount; i++) &#123;</div><div class=\"line\">               final FlexBoxViewHolder holder = createViewHolder(i);</div><div class=\"line\"></div><div class=\"line\">               onHandleItmViewListener(i, holder);</div><div class=\"line\"></div><div class=\"line\">               mAdapter.onHandleLayoutParams(holder.itemView, mSpanCount, i);</div><div class=\"line\"></div><div class=\"line\">               mAdapter.onBindViewHolder(holder, i);</div><div class=\"line\">           &#125;</div><div class=\"line\">       &#125; else &#123;</div><div class=\"line\">           removeAllViews();</div><div class=\"line\">           mHolders.clear();</div><div class=\"line\">       &#125;</div><div class=\"line\">   &#125;</div><div class=\"line\"></div><div class=\"line\">   /**</div><div class=\"line\">    * 创建ViewHolder</div><div class=\"line\">    *</div><div class=\"line\">    * @param position</div><div class=\"line\">    * @return</div><div class=\"line\">    */</div><div class=\"line\">   private FlexBoxViewHolder createViewHolder(int position) &#123;</div><div class=\"line\"></div><div class=\"line\">       FlexBoxViewHolder holder = null;</div><div class=\"line\">       if (mHolders.size() &gt; position) &#123;</div><div class=\"line\">           holder = mHolders.get(position);</div><div class=\"line\">       &#125;</div><div class=\"line\"></div><div class=\"line\">       if (holder == null) &#123;</div><div class=\"line\">           holder = mAdapter.onCreateViewHolder(this);</div><div class=\"line\">           if (holder.itemView.getParent() == null) &#123;// 未添加到父布局中需要添加，已经添加的不需要再次添加</div><div class=\"line\">               this.addView(holder.itemView, position);</div><div class=\"line\">           &#125;</div><div class=\"line\">           mHolders.add(holder);</div><div class=\"line\">       &#125;</div><div class=\"line\">       return holder;</div><div class=\"line\">   &#125;</div><div class=\"line\"></div><div class=\"line\">    private void notifyDataSetChanged() &#123;</div><div class=\"line\">       if (getChildCount() &gt; mAdapter.getCount()) &#123;</div><div class=\"line\">           removeViewAt(getChildCount() - mAdapter.getCount());</div><div class=\"line\">       &#125;</div><div class=\"line\">       refreshView();</div><div class=\"line\">   &#125;</div></pre></td></tr></table></figure><p>这里开放setAdapter()供调用者使用，接下来做的操作解释创建View，添加View，对View进行数据操作，这方面可以对照<strong>onCreateViewHolder()</strong>,<strong>onBindViewHolder()</strong>两个方法理解。</p><h3 id=\"点击事件\"><a href=\"#点击事件\" class=\"headerlink\" title=\"点击事件\"></a>点击事件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">flexboxLayout.setOnFlexBoxItemClickListener(new OnFlexBoxItemClickListener() &#123;</div><div class=\"line\">           @Override</div><div class=\"line\">           public void onItemClick(View view, int position) &#123;</div><div class=\"line\">               //@todo</div><div class=\"line\">           &#125;</div><div class=\"line\">       &#125;);</div></pre></td></tr></table></figure><h3 id=\"调用代码\"><a href=\"#调用代码\" class=\"headerlink\" title=\"调用代码\"></a>调用代码</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">UIFlexBoxView tagView = findViewById(R.id.tag_view);</div><div class=\"line\">TagFlexBoxAdapter  adapter = new TagFlexBoxAdapter(tagList.getTags());</div><div class=\"line\">tagView(adapter);</div></pre></td></tr></table></figure><h3 id=\"关于NotifyDataSetChanged\"><a href=\"#关于NotifyDataSetChanged\" class=\"headerlink\" title=\"关于NotifyDataSetChanged()\"></a>关于NotifyDataSetChanged()</h3><p>notifyDataSetChanged() 这边是为了减少View的创建，并没有实现RecyclerView的View复用的效果。当然你依然可以在数据变化后依然调用setAdapter(),在正常情况下并不影响使用效果。</p><p><a href=\"https://github.com/shamao/Beauty/tree/master/app/src/main/java/beauty/louise/com/view/flexbox\" target=\"_blank\" rel=\"external\">github项目地址</a></p>"},{"title":"git基本操作","date":"2017-09-20T16:45:09.000Z","author":{"name":"Limitsy","link":null},"_content":"\n\n本文最早由Limitsy编写，[悔惜晟](https://huixisheng.github.io)做了补充。\n\n## 克隆 ##\n\n```\n$ git clone git://host.xz[:port]/path/to/repo.git\n```\n\n完整命令，[具体参数可以参考](https://git-scm.com/docs/git-clone), 或者`git clone --help`\n```\ngit clone [--template=<template_directory>]\n      [-l] [-s] [--no-hardlinks] [-q] [-n] [--bare] [--mirror]\n      [-o <name>] [-b <name>] [-u <upload-pack>] [--reference <repository>]\n      [--dissociate] [--separate-git-dir <git dir>]\n      [--depth <depth>] [--[no-]single-branch] [--no-tags]\n      [--recurse-submodules] [--[no-]shallow-submodules]\n      [--jobs <n>] [--] <repository> [<directory>]\n```\n\n## 更新操作\n1. git add .\n2. git commit\n3. git pull origin $(current_branch)'\n4. git push origin $(current_branch)'（没冲突 OR 先解决冲突 再重复上述操作）\n\n## 合并分支\n1. 更新操作完成对分支的修改\n2. git pull origin master(合并主分支 防止有冲突)\n3. git push origin $(current_branch)'（没冲突 OR 先解决冲突 再重复上述操作）\n4. 再在线上完成分支合并\n\n## 新建分支\n* git checkout -b {branch} (新建分支)\n* git checkout {branch} (切换到现有分支)\n* git checkout --track origin/{branch} (切换到远程分支并同步到本地，之前需要操作 git pull)\n\n## Tag操作\n* git tag #查看标签列表\n* git tag v1.2.1 #添加标签v.1.2.1\n* git tag -a v1.2.1 b477cbc #为之前提交的commit添加标签\n* git show v1.2.1  #查看标签 v.1.2.1 的信息\n* git push --tags # 提交时带上标签信息\n* git tag -d 2.5.1001 #删除本地标签\u001b\u001b\n* git push origin :refs/tags/1.2.0 #删除远程标签\n\n\n## coding 服务切换 ##\n\n>Coding.net Tips : [GIT access is disabled on coding.net domain, please use git.coding.net instead. See detail: https://coding.net/u/coding/pp/54510]\nfatal: Could not read from remote repository.\n\n    git remote set-url origin git://host.xz[:port]/path/to/repo.git\n\n\n## 使用rebase 保持分支书整洁 ##\n\n利用rebase修改历史提交记录，可以看[这里](https://huixisheng.github.io/git-rebase/)\n\n### 方法1 ###\n\n    git pull --rebase origin master\n\n\n### 方法2  ###\n\n    git checkout dev\n    git reabse master\n    git checkout master\n    git merge dev\n\n- [Git速成班: git rebase](http://www.html-js.com/article/Week-end-column-Git-crash-course-git-rebase)\n\n\n## submodule 替换为 subtree ##\n\n    git rm —cached app/Library\n    rm -rf app/Library\n    vi .git/config  删除submodule 配置\n    rm .gitmodules\n\n    //添加subtree\n\n    git remote add Library git://host.xz[:port]/path/to/repo.git\n    git subtree add —prefix=app/Library Library dev\n    git checkout -b dev\n    git pull origin dev   合并主分支代码\n\n\n##  项目一键初始化 ##\n\n    git clone git://host.xz[:port]/path/to/repo.git\n    composer update\n    mkdir storage\n    chmod -R 777 storage/\n    mkdir -p bootstrap/cache/\n    chmod -R 777 bootstrap/cache/\n    php artisan route:cache\n    php artisan config:cache\n\n**ps: todo 修改为一键脚本**\n\n## 碰到的问题 ##\n\n- [coding.net Permission denied (publickey)](https://coding.net/u/rainy/pp/30783)\n- [如何创建 ssh key](https://help.github.com/articles/generating-ssh-keys/)\n- [git命令简单介绍](http://huixisheng.github.io/git/)\n","source":"_posts/git-basic.md","raw":"title: git基本操作\ndate: 2017-09-21 00:45:09\nauthor:\n  name: Limitsy\n  link:\ntags:\n- git\n---\n\n\n本文最早由Limitsy编写，[悔惜晟](https://huixisheng.github.io)做了补充。\n\n## 克隆 ##\n\n```\n$ git clone git://host.xz[:port]/path/to/repo.git\n```\n\n完整命令，[具体参数可以参考](https://git-scm.com/docs/git-clone), 或者`git clone --help`\n```\ngit clone [--template=<template_directory>]\n      [-l] [-s] [--no-hardlinks] [-q] [-n] [--bare] [--mirror]\n      [-o <name>] [-b <name>] [-u <upload-pack>] [--reference <repository>]\n      [--dissociate] [--separate-git-dir <git dir>]\n      [--depth <depth>] [--[no-]single-branch] [--no-tags]\n      [--recurse-submodules] [--[no-]shallow-submodules]\n      [--jobs <n>] [--] <repository> [<directory>]\n```\n\n## 更新操作\n1. git add .\n2. git commit\n3. git pull origin $(current_branch)'\n4. git push origin $(current_branch)'（没冲突 OR 先解决冲突 再重复上述操作）\n\n## 合并分支\n1. 更新操作完成对分支的修改\n2. git pull origin master(合并主分支 防止有冲突)\n3. git push origin $(current_branch)'（没冲突 OR 先解决冲突 再重复上述操作）\n4. 再在线上完成分支合并\n\n## 新建分支\n* git checkout -b {branch} (新建分支)\n* git checkout {branch} (切换到现有分支)\n* git checkout --track origin/{branch} (切换到远程分支并同步到本地，之前需要操作 git pull)\n\n## Tag操作\n* git tag #查看标签列表\n* git tag v1.2.1 #添加标签v.1.2.1\n* git tag -a v1.2.1 b477cbc #为之前提交的commit添加标签\n* git show v1.2.1  #查看标签 v.1.2.1 的信息\n* git push --tags # 提交时带上标签信息\n* git tag -d 2.5.1001 #删除本地标签\u001b\u001b\n* git push origin :refs/tags/1.2.0 #删除远程标签\n\n\n## coding 服务切换 ##\n\n>Coding.net Tips : [GIT access is disabled on coding.net domain, please use git.coding.net instead. See detail: https://coding.net/u/coding/pp/54510]\nfatal: Could not read from remote repository.\n\n    git remote set-url origin git://host.xz[:port]/path/to/repo.git\n\n\n## 使用rebase 保持分支书整洁 ##\n\n利用rebase修改历史提交记录，可以看[这里](https://huixisheng.github.io/git-rebase/)\n\n### 方法1 ###\n\n    git pull --rebase origin master\n\n\n### 方法2  ###\n\n    git checkout dev\n    git reabse master\n    git checkout master\n    git merge dev\n\n- [Git速成班: git rebase](http://www.html-js.com/article/Week-end-column-Git-crash-course-git-rebase)\n\n\n## submodule 替换为 subtree ##\n\n    git rm —cached app/Library\n    rm -rf app/Library\n    vi .git/config  删除submodule 配置\n    rm .gitmodules\n\n    //添加subtree\n\n    git remote add Library git://host.xz[:port]/path/to/repo.git\n    git subtree add —prefix=app/Library Library dev\n    git checkout -b dev\n    git pull origin dev   合并主分支代码\n\n\n##  项目一键初始化 ##\n\n    git clone git://host.xz[:port]/path/to/repo.git\n    composer update\n    mkdir storage\n    chmod -R 777 storage/\n    mkdir -p bootstrap/cache/\n    chmod -R 777 bootstrap/cache/\n    php artisan route:cache\n    php artisan config:cache\n\n**ps: todo 修改为一键脚本**\n\n## 碰到的问题 ##\n\n- [coding.net Permission denied (publickey)](https://coding.net/u/rainy/pp/30783)\n- [如何创建 ssh key](https://help.github.com/articles/generating-ssh-keys/)\n- [git命令简单介绍](http://huixisheng.github.io/git/)\n","slug":"git-basic","published":1,"updated":"2017-09-20T16:55:33.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9cutio4000hds9lf10pqnyt","content":"<p>本文最早由Limitsy编写，<a href=\"https://huixisheng.github.io\" target=\"_blank\" rel=\"external\">悔惜晟</a>做了补充。</p><h2 id=\"克隆\"><a href=\"#克隆\" class=\"headerlink\" title=\"克隆\"></a>克隆</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ git clone git://host.xz[:port]/path/to/repo.git</div></pre></td></tr></table></figure><p>完整命令，<a href=\"https://git-scm.com/docs/git-clone\" target=\"_blank\" rel=\"external\">具体参数可以参考</a>, 或者<code>git clone --help</code><br></p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">git clone [--template=&lt;template_directory&gt;]</div><div class=\"line\">      [-l] [-s] [--no-hardlinks] [-q] [-n] [--bare] [--mirror]</div><div class=\"line\">      [-o &lt;name&gt;] [-b &lt;name&gt;] [-u &lt;upload-pack&gt;] [--reference &lt;repository&gt;]</div><div class=\"line\">      [--dissociate] [--separate-git-dir &lt;git dir&gt;]</div><div class=\"line\">      [--depth &lt;depth&gt;] [--[no-]single-branch] [--no-tags]</div><div class=\"line\">      [--recurse-submodules] [--[no-]shallow-submodules]</div><div class=\"line\">      [--jobs &lt;n&gt;] [--] &lt;repository&gt; [&lt;directory&gt;]</div></pre></td></tr></table></figure><p></p><h2 id=\"更新操作\"><a href=\"#更新操作\" class=\"headerlink\" title=\"更新操作\"></a>更新操作</h2><ol><li>git add .</li><li>git commit</li><li>git pull origin $(current_branch)’</li><li>git push origin $(current_branch)’（没冲突 OR 先解决冲突 再重复上述操作）</li></ol><h2 id=\"合并分支\"><a href=\"#合并分支\" class=\"headerlink\" title=\"合并分支\"></a>合并分支</h2><ol><li>更新操作完成对分支的修改</li><li>git pull origin master(合并主分支 防止有冲突)</li><li>git push origin $(current_branch)’（没冲突 OR 先解决冲突 再重复上述操作）</li><li>再在线上完成分支合并</li></ol><h2 id=\"新建分支\"><a href=\"#新建分支\" class=\"headerlink\" title=\"新建分支\"></a>新建分支</h2><ul><li>git checkout -b {branch} (新建分支)</li><li>git checkout {branch} (切换到现有分支)</li><li>git checkout –track origin/{branch} (切换到远程分支并同步到本地，之前需要操作 git pull)</li></ul><h2 id=\"Tag操作\"><a href=\"#Tag操作\" class=\"headerlink\" title=\"Tag操作\"></a>Tag操作</h2><ul><li>git tag #查看标签列表</li><li>git tag v1.2.1 #添加标签v.1.2.1</li><li>git tag -a v1.2.1 b477cbc #为之前提交的commit添加标签</li><li>git show v1.2.1 #查看标签 v.1.2.1 的信息</li><li>git push –tags # 提交时带上标签信息</li><li>git tag -d 2.5.1001 #删除本地标签\u001b\u001b</li><li>git push origin :refs/tags/1.2.0 #删除远程标签</li></ul><h2 id=\"coding-服务切换\"><a href=\"#coding-服务切换\" class=\"headerlink\" title=\"coding 服务切换\"></a>coding 服务切换</h2><blockquote><p>Coding.net Tips : [GIT access is disabled on coding.net domain, please use git.coding.net instead. See detail: <a href=\"https://coding.net/u/coding/pp/54510\" target=\"_blank\" rel=\"external\">https://coding.net/u/coding/pp/54510</a>]<br>fatal: Could not read from remote repository.</p></blockquote><pre><code>git remote set-url origin git://host.xz[:port]/path/to/repo.git\n</code></pre><h2 id=\"使用rebase-保持分支书整洁\"><a href=\"#使用rebase-保持分支书整洁\" class=\"headerlink\" title=\"使用rebase 保持分支书整洁\"></a>使用rebase 保持分支书整洁</h2><p>利用rebase修改历史提交记录，可以看<a href=\"https://huixisheng.github.io/git-rebase/\" target=\"_blank\" rel=\"external\">这里</a></p><h3 id=\"方法1\"><a href=\"#方法1\" class=\"headerlink\" title=\"方法1\"></a>方法1</h3><pre><code>git pull --rebase origin master\n</code></pre><h3 id=\"方法2\"><a href=\"#方法2\" class=\"headerlink\" title=\"方法2\"></a>方法2</h3><pre><code>git checkout dev\ngit reabse master\ngit checkout master\ngit merge dev\n</code></pre><ul><li><a href=\"http://www.html-js.com/article/Week-end-column-Git-crash-course-git-rebase\" target=\"_blank\" rel=\"external\">Git速成班: git rebase</a></li></ul><h2 id=\"submodule-替换为-subtree\"><a href=\"#submodule-替换为-subtree\" class=\"headerlink\" title=\"submodule 替换为 subtree\"></a>submodule 替换为 subtree</h2><pre><code>git rm —cached app/Library\nrm -rf app/Library\nvi .git/config  删除submodule 配置\nrm .gitmodules\n\n//添加subtree\n\ngit remote add Library git://host.xz[:port]/path/to/repo.git\ngit subtree add —prefix=app/Library Library dev\ngit checkout -b dev\ngit pull origin dev   合并主分支代码\n</code></pre><h2 id=\"项目一键初始化\"><a href=\"#项目一键初始化\" class=\"headerlink\" title=\"项目一键初始化\"></a>项目一键初始化</h2><pre><code>git clone git://host.xz[:port]/path/to/repo.git\ncomposer update\nmkdir storage\nchmod -R 777 storage/\nmkdir -p bootstrap/cache/\nchmod -R 777 bootstrap/cache/\nphp artisan route:cache\nphp artisan config:cache\n</code></pre><p><strong>ps: todo 修改为一键脚本</strong></p><h2 id=\"碰到的问题\"><a href=\"#碰到的问题\" class=\"headerlink\" title=\"碰到的问题\"></a>碰到的问题</h2><ul><li><a href=\"https://coding.net/u/rainy/pp/30783\" target=\"_blank\" rel=\"external\">coding.net Permission denied (publickey)</a></li><li><a href=\"https://help.github.com/articles/generating-ssh-keys/\" target=\"_blank\" rel=\"external\">如何创建 ssh key</a></li><li><a href=\"http://huixisheng.github.io/git/\" target=\"_blank\" rel=\"external\">git命令简单介绍</a></li></ul>","site":{"data":{}},"excerpt":"","more":"<p>本文最早由Limitsy编写，<a href=\"https://huixisheng.github.io\" target=\"_blank\" rel=\"external\">悔惜晟</a>做了补充。</p><h2 id=\"克隆\"><a href=\"#克隆\" class=\"headerlink\" title=\"克隆\"></a>克隆</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ git clone git://host.xz[:port]/path/to/repo.git</div></pre></td></tr></table></figure><p>完整命令，<a href=\"https://git-scm.com/docs/git-clone\" target=\"_blank\" rel=\"external\">具体参数可以参考</a>, 或者<code>git clone --help</code><br></p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">git clone [--template=&lt;template_directory&gt;]</div><div class=\"line\">      [-l] [-s] [--no-hardlinks] [-q] [-n] [--bare] [--mirror]</div><div class=\"line\">      [-o &lt;name&gt;] [-b &lt;name&gt;] [-u &lt;upload-pack&gt;] [--reference &lt;repository&gt;]</div><div class=\"line\">      [--dissociate] [--separate-git-dir &lt;git dir&gt;]</div><div class=\"line\">      [--depth &lt;depth&gt;] [--[no-]single-branch] [--no-tags]</div><div class=\"line\">      [--recurse-submodules] [--[no-]shallow-submodules]</div><div class=\"line\">      [--jobs &lt;n&gt;] [--] &lt;repository&gt; [&lt;directory&gt;]</div></pre></td></tr></table></figure><p></p><h2 id=\"更新操作\"><a href=\"#更新操作\" class=\"headerlink\" title=\"更新操作\"></a>更新操作</h2><ol><li>git add .</li><li>git commit</li><li>git pull origin $(current_branch)’</li><li>git push origin $(current_branch)’（没冲突 OR 先解决冲突 再重复上述操作）</li></ol><h2 id=\"合并分支\"><a href=\"#合并分支\" class=\"headerlink\" title=\"合并分支\"></a>合并分支</h2><ol><li>更新操作完成对分支的修改</li><li>git pull origin master(合并主分支 防止有冲突)</li><li>git push origin $(current_branch)’（没冲突 OR 先解决冲突 再重复上述操作）</li><li>再在线上完成分支合并</li></ol><h2 id=\"新建分支\"><a href=\"#新建分支\" class=\"headerlink\" title=\"新建分支\"></a>新建分支</h2><ul><li>git checkout -b {branch} (新建分支)</li><li>git checkout {branch} (切换到现有分支)</li><li>git checkout –track origin/{branch} (切换到远程分支并同步到本地，之前需要操作 git pull)</li></ul><h2 id=\"Tag操作\"><a href=\"#Tag操作\" class=\"headerlink\" title=\"Tag操作\"></a>Tag操作</h2><ul><li>git tag #查看标签列表</li><li>git tag v1.2.1 #添加标签v.1.2.1</li><li>git tag -a v1.2.1 b477cbc #为之前提交的commit添加标签</li><li>git show v1.2.1 #查看标签 v.1.2.1 的信息</li><li>git push –tags # 提交时带上标签信息</li><li>git tag -d 2.5.1001 #删除本地标签\u001b\u001b</li><li>git push origin :refs/tags/1.2.0 #删除远程标签</li></ul><h2 id=\"coding-服务切换\"><a href=\"#coding-服务切换\" class=\"headerlink\" title=\"coding 服务切换\"></a>coding 服务切换</h2><blockquote><p>Coding.net Tips : [GIT access is disabled on coding.net domain, please use git.coding.net instead. See detail: <a href=\"https://coding.net/u/coding/pp/54510\" target=\"_blank\" rel=\"external\">https://coding.net/u/coding/pp/54510</a>]<br>fatal: Could not read from remote repository.</p></blockquote><pre><code>git remote set-url origin git://host.xz[:port]/path/to/repo.git\n</code></pre><h2 id=\"使用rebase-保持分支书整洁\"><a href=\"#使用rebase-保持分支书整洁\" class=\"headerlink\" title=\"使用rebase 保持分支书整洁\"></a>使用rebase 保持分支书整洁</h2><p>利用rebase修改历史提交记录，可以看<a href=\"https://huixisheng.github.io/git-rebase/\" target=\"_blank\" rel=\"external\">这里</a></p><h3 id=\"方法1\"><a href=\"#方法1\" class=\"headerlink\" title=\"方法1\"></a>方法1</h3><pre><code>git pull --rebase origin master\n</code></pre><h3 id=\"方法2\"><a href=\"#方法2\" class=\"headerlink\" title=\"方法2\"></a>方法2</h3><pre><code>git checkout dev\ngit reabse master\ngit checkout master\ngit merge dev\n</code></pre><ul><li><a href=\"http://www.html-js.com/article/Week-end-column-Git-crash-course-git-rebase\" target=\"_blank\" rel=\"external\">Git速成班: git rebase</a></li></ul><h2 id=\"submodule-替换为-subtree\"><a href=\"#submodule-替换为-subtree\" class=\"headerlink\" title=\"submodule 替换为 subtree\"></a>submodule 替换为 subtree</h2><pre><code>git rm —cached app/Library\nrm -rf app/Library\nvi .git/config  删除submodule 配置\nrm .gitmodules\n\n//添加subtree\n\ngit remote add Library git://host.xz[:port]/path/to/repo.git\ngit subtree add —prefix=app/Library Library dev\ngit checkout -b dev\ngit pull origin dev   合并主分支代码\n</code></pre><h2 id=\"项目一键初始化\"><a href=\"#项目一键初始化\" class=\"headerlink\" title=\"项目一键初始化\"></a>项目一键初始化</h2><pre><code>git clone git://host.xz[:port]/path/to/repo.git\ncomposer update\nmkdir storage\nchmod -R 777 storage/\nmkdir -p bootstrap/cache/\nchmod -R 777 bootstrap/cache/\nphp artisan route:cache\nphp artisan config:cache\n</code></pre><p><strong>ps: todo 修改为一键脚本</strong></p><h2 id=\"碰到的问题\"><a href=\"#碰到的问题\" class=\"headerlink\" title=\"碰到的问题\"></a>碰到的问题</h2><ul><li><a href=\"https://coding.net/u/rainy/pp/30783\" target=\"_blank\" rel=\"external\">coding.net Permission denied (publickey)</a></li><li><a href=\"https://help.github.com/articles/generating-ssh-keys/\" target=\"_blank\" rel=\"external\">如何创建 ssh key</a></li><li><a href=\"http://huixisheng.github.io/git/\" target=\"_blank\" rel=\"external\">git命令简单介绍</a></li></ul>"},{"title":"在安卓手机上安装Charles证书","date":"2017-09-26T16:27:09.000Z","author":{"name":"daben","link":null},"_content":"# 在安卓手机上安装Charles证书\n\n\n日常开发中，总有遇到要查看网络请求的时候，浏览器中打开调试器就能看到，手机端就抓瞎了。Charles就正好能帮住我们解决这样的难题。\n\n然鹅，使用几次之后你就会发现，抓http请求的时候Charles是一抓一个准，而抓https的时候你却看到的都是红叉叉。因为使用Charles截取https通信需要安装Charles的证书，没有安装证书，自然看到的都是叉叉咯。\n\n说到安装证书，安卓爸爸安装Charles的证书总是会遇到奇奇怪怪的问题。我也是找了八百个帖子试了一百种办法好不容易才装上，于是就有了这篇文章，权当记录以备忘，同时也希望能帮到同样卡在装证书上的同学。\n\n\n\n## 简介\n\nCharles是mac中常用的抓包工具，主要是用来抓网络封包然后进行分析。\n\n**官网**：https://www.charlesproxy.com/\n\n正版收费，免费试用30天。\n\n\n\n## 安装证书\n\n根据我**八百个帖子**的经验，安装证书有两种**比较靠谱**的办法：\n\n1. 根据官方的推荐，在线下载自动安装，轻松愉快（ BUT，我没安上… ）\n2. 本地导出证书，传到手机上安装\n\n我的情况是第一种方法没成功，下载到了文件但是无法安装（ 黑人问号？？？）\n\n![安装失败](/images/charles/4.jpeg)\n\n说一下第一种方法的步骤：\n\n- 打开Charles，眼睛瞄到顶上菜单栏的 “ Help ” ，点开。\n\n- 找到 “ SSL Proxying ”  ->   “ Install Charles Root Certificate on a Mobile Device or Remote Browser ”，按下去。\n\n  ![方法一步骤](/images/charles/1.png)\n\n- 然后跟着提示操作。手机代理到本机ip的 `8888` 端口，在手机浏览器上打开`chls.pro/ssl`，就会自动下载并安装证书（ 如果没有自动安装，可以自己去下载管理里面找出来手动安装它 ）。\n\n  ![charles提示](/images/charles/3.png)\n\n  不知道本机ip可以使用 `ifconfig` 命令查找\n\n然鹅，这种方法根本不适合我。无奈只能寄希望于第二种：\n\n- 打开Charles，还是瞄到上面 \" Help \" ，点开。\n\n- 找到 \" SSL Proxying \"  ->  \" Save Charles Root Certificate… \"，按下去。\n\n  ![](/images/charles/2.png)\n\n  会出现提示保存的界面，可以保存成两种格式，`.pem ` 和 `.cer` ，我存了 `.cer` 。\n\n  ![](/images/charles/6.png)\n\n  就是这货，把这个文件传到手机上。\n\n  我是用微信传的，传到了之后在微信里点开，结果提示还是无法安装，这就神奇了不是？\n\n  别急，咱们换种办法，进入\"设置\" -> \"更多设置\" -> \"系统安全\" -> \"从SD卡安装证书\"，然后找到证书文件，打开（ 可能不同的手机路径略有不同，莫慌，仔细找找总会找到的。我的是小米 ）。\n\n  ![](/images/charles/8.jpeg)\n\n  这里有一点要注意，安装证书要输入锁屏密码，如果没有，就去设置一个。\n\n  ![](/images/charles/9.jpeg)\n\n  历经千辛万苦，终于安装成功了。\n\n  ​\n\n## 总结\n\n简单的总结一下，我在安装证书时的跌宕起伏：\n\n1. 通过在线安装的方法不成功，提示无法读取证书文件。\n2. 进入下载目录找到下载的证书文件手动安装也不成功，同样提示无法读取。\n3. 转到系统安全设置中，从SD卡安装同样也不成功。至此官网方法正式宣告失败。\n4. 通过导出证书到本地，传到手机上，在微信点开安装，失败，提示无法读取证书文件。\n5. 进入文件管理，手动点开证书文件，提示无法读取证书。\n6. 使用从SD卡安装功能，成功进入证书安装界面。安装证书需要设置锁屏密码，设置锁屏密码。\n7. 安装成功。\n\n\n\n虽然走了很多弯路，但总算是安上了，期间查了不少资料，也看了不少博客，发现遇到大家遇到的问题都不尽相同，所以决定写一篇文章总结一下自己的心得。万一正好帮上谁了呢？\n\n\n\n## 参考\n\n[如何用charles进行https抓包](http://www.jianshu.com/p/923eca294579)\n\n[Charles 从入门到精通](http://blog.devtang.com/2015/11/14/charles-introduction/)\n\n[细说 Charles 配置 HTTPS 代理的乱码问题](https://malcolmyu.github.io/2017/02/26/Dive-into-Charles-HTTPS-Proxying/)\n\n","source":"_posts/install-charles-certificate-android.md","raw":"---\ntitle: 在安卓手机上安装Charles证书\ndate: 2017-09-27 00:27:09\nauthor:\n  name: daben\n  link:\ntags:\n- charles\n---\n# 在安卓手机上安装Charles证书\n\n\n日常开发中，总有遇到要查看网络请求的时候，浏览器中打开调试器就能看到，手机端就抓瞎了。Charles就正好能帮住我们解决这样的难题。\n\n然鹅，使用几次之后你就会发现，抓http请求的时候Charles是一抓一个准，而抓https的时候你却看到的都是红叉叉。因为使用Charles截取https通信需要安装Charles的证书，没有安装证书，自然看到的都是叉叉咯。\n\n说到安装证书，安卓爸爸安装Charles的证书总是会遇到奇奇怪怪的问题。我也是找了八百个帖子试了一百种办法好不容易才装上，于是就有了这篇文章，权当记录以备忘，同时也希望能帮到同样卡在装证书上的同学。\n\n\n\n## 简介\n\nCharles是mac中常用的抓包工具，主要是用来抓网络封包然后进行分析。\n\n**官网**：https://www.charlesproxy.com/\n\n正版收费，免费试用30天。\n\n\n\n## 安装证书\n\n根据我**八百个帖子**的经验，安装证书有两种**比较靠谱**的办法：\n\n1. 根据官方的推荐，在线下载自动安装，轻松愉快（ BUT，我没安上… ）\n2. 本地导出证书，传到手机上安装\n\n我的情况是第一种方法没成功，下载到了文件但是无法安装（ 黑人问号？？？）\n\n![安装失败](/images/charles/4.jpeg)\n\n说一下第一种方法的步骤：\n\n- 打开Charles，眼睛瞄到顶上菜单栏的 “ Help ” ，点开。\n\n- 找到 “ SSL Proxying ”  ->   “ Install Charles Root Certificate on a Mobile Device or Remote Browser ”，按下去。\n\n  ![方法一步骤](/images/charles/1.png)\n\n- 然后跟着提示操作。手机代理到本机ip的 `8888` 端口，在手机浏览器上打开`chls.pro/ssl`，就会自动下载并安装证书（ 如果没有自动安装，可以自己去下载管理里面找出来手动安装它 ）。\n\n  ![charles提示](/images/charles/3.png)\n\n  不知道本机ip可以使用 `ifconfig` 命令查找\n\n然鹅，这种方法根本不适合我。无奈只能寄希望于第二种：\n\n- 打开Charles，还是瞄到上面 \" Help \" ，点开。\n\n- 找到 \" SSL Proxying \"  ->  \" Save Charles Root Certificate… \"，按下去。\n\n  ![](/images/charles/2.png)\n\n  会出现提示保存的界面，可以保存成两种格式，`.pem ` 和 `.cer` ，我存了 `.cer` 。\n\n  ![](/images/charles/6.png)\n\n  就是这货，把这个文件传到手机上。\n\n  我是用微信传的，传到了之后在微信里点开，结果提示还是无法安装，这就神奇了不是？\n\n  别急，咱们换种办法，进入\"设置\" -> \"更多设置\" -> \"系统安全\" -> \"从SD卡安装证书\"，然后找到证书文件，打开（ 可能不同的手机路径略有不同，莫慌，仔细找找总会找到的。我的是小米 ）。\n\n  ![](/images/charles/8.jpeg)\n\n  这里有一点要注意，安装证书要输入锁屏密码，如果没有，就去设置一个。\n\n  ![](/images/charles/9.jpeg)\n\n  历经千辛万苦，终于安装成功了。\n\n  ​\n\n## 总结\n\n简单的总结一下，我在安装证书时的跌宕起伏：\n\n1. 通过在线安装的方法不成功，提示无法读取证书文件。\n2. 进入下载目录找到下载的证书文件手动安装也不成功，同样提示无法读取。\n3. 转到系统安全设置中，从SD卡安装同样也不成功。至此官网方法正式宣告失败。\n4. 通过导出证书到本地，传到手机上，在微信点开安装，失败，提示无法读取证书文件。\n5. 进入文件管理，手动点开证书文件，提示无法读取证书。\n6. 使用从SD卡安装功能，成功进入证书安装界面。安装证书需要设置锁屏密码，设置锁屏密码。\n7. 安装成功。\n\n\n\n虽然走了很多弯路，但总算是安上了，期间查了不少资料，也看了不少博客，发现遇到大家遇到的问题都不尽相同，所以决定写一篇文章总结一下自己的心得。万一正好帮上谁了呢？\n\n\n\n## 参考\n\n[如何用charles进行https抓包](http://www.jianshu.com/p/923eca294579)\n\n[Charles 从入门到精通](http://blog.devtang.com/2015/11/14/charles-introduction/)\n\n[细说 Charles 配置 HTTPS 代理的乱码问题](https://malcolmyu.github.io/2017/02/26/Dive-into-Charles-HTTPS-Proxying/)\n\n","slug":"install-charles-certificate-android","published":1,"updated":"2017-10-09T08:34:53.651Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9cutio7000jds9liw108brv","content":"<h1 id=\"在安卓手机上安装Charles证书\"><a href=\"#在安卓手机上安装Charles证书\" class=\"headerlink\" title=\"在安卓手机上安装Charles证书\"></a>在安卓手机上安装Charles证书</h1><p>日常开发中，总有遇到要查看网络请求的时候，浏览器中打开调试器就能看到，手机端就抓瞎了。Charles就正好能帮住我们解决这样的难题。</p><p>然鹅，使用几次之后你就会发现，抓http请求的时候Charles是一抓一个准，而抓https的时候你却看到的都是红叉叉。因为使用Charles截取https通信需要安装Charles的证书，没有安装证书，自然看到的都是叉叉咯。</p><p>说到安装证书，安卓爸爸安装Charles的证书总是会遇到奇奇怪怪的问题。我也是找了八百个帖子试了一百种办法好不容易才装上，于是就有了这篇文章，权当记录以备忘，同时也希望能帮到同样卡在装证书上的同学。</p><h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>Charles是mac中常用的抓包工具，主要是用来抓网络封包然后进行分析。</p><p><strong>官网</strong>：<a href=\"https://www.charlesproxy.com/\" target=\"_blank\" rel=\"external\">https://www.charlesproxy.com/</a></p><p>正版收费，免费试用30天。</p><h2 id=\"安装证书\"><a href=\"#安装证书\" class=\"headerlink\" title=\"安装证书\"></a>安装证书</h2><p>根据我<strong>八百个帖子</strong>的经验，安装证书有两种<strong>比较靠谱</strong>的办法：</p><ol><li>根据官方的推荐，在线下载自动安装，轻松愉快（ BUT，我没安上… ）</li><li>本地导出证书，传到手机上安装</li></ol><p>我的情况是第一种方法没成功，下载到了文件但是无法安装（ 黑人问号？？？）</p><p><img src=\"/images/charles/4.jpeg\" alt=\"安装失败\"></p><p>说一下第一种方法的步骤：</p><ul><li><p>打开Charles，眼睛瞄到顶上菜单栏的 “ Help ” ，点开。</p></li><li><p>找到 “ SSL Proxying ” -&gt; “ Install Charles Root Certificate on a Mobile Device or Remote Browser ”，按下去。</p><p><img src=\"/images/charles/1.png\" alt=\"方法一步骤\"></p></li><li><p>然后跟着提示操作。手机代理到本机ip的 <code>8888</code> 端口，在手机浏览器上打开<code>chls.pro/ssl</code>，就会自动下载并安装证书（ 如果没有自动安装，可以自己去下载管理里面找出来手动安装它 ）。</p><p><img src=\"/images/charles/3.png\" alt=\"charles提示\"></p><p>不知道本机ip可以使用 <code>ifconfig</code> 命令查找</p></li></ul><p>然鹅，这种方法根本不适合我。无奈只能寄希望于第二种：</p><ul><li><p>打开Charles，还是瞄到上面 “ Help “ ，点开。</p></li><li><p>找到 “ SSL Proxying “ -&gt; “ Save Charles Root Certificate… “，按下去。</p><p><img src=\"/images/charles/2.png\" alt=\"\"></p><p>会出现提示保存的界面，可以保存成两种格式，<code>.pem</code> 和 <code>.cer</code> ，我存了 <code>.cer</code> 。</p><p><img src=\"/images/charles/6.png\" alt=\"\"></p><p>就是这货，把这个文件传到手机上。</p><p>我是用微信传的，传到了之后在微信里点开，结果提示还是无法安装，这就神奇了不是？</p><p>别急，咱们换种办法，进入”设置” -&gt; “更多设置” -&gt; “系统安全” -&gt; “从SD卡安装证书”，然后找到证书文件，打开（ 可能不同的手机路径略有不同，莫慌，仔细找找总会找到的。我的是小米 ）。</p><p><img src=\"/images/charles/8.jpeg\" alt=\"\"></p><p>这里有一点要注意，安装证书要输入锁屏密码，如果没有，就去设置一个。</p><p><img src=\"/images/charles/9.jpeg\" alt=\"\"></p><p>历经千辛万苦，终于安装成功了。</p><p>​</p></li></ul><h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>简单的总结一下，我在安装证书时的跌宕起伏：</p><ol><li>通过在线安装的方法不成功，提示无法读取证书文件。</li><li>进入下载目录找到下载的证书文件手动安装也不成功，同样提示无法读取。</li><li>转到系统安全设置中，从SD卡安装同样也不成功。至此官网方法正式宣告失败。</li><li>通过导出证书到本地，传到手机上，在微信点开安装，失败，提示无法读取证书文件。</li><li>进入文件管理，手动点开证书文件，提示无法读取证书。</li><li>使用从SD卡安装功能，成功进入证书安装界面。安装证书需要设置锁屏密码，设置锁屏密码。</li><li>安装成功。</li></ol><p>虽然走了很多弯路，但总算是安上了，期间查了不少资料，也看了不少博客，发现遇到大家遇到的问题都不尽相同，所以决定写一篇文章总结一下自己的心得。万一正好帮上谁了呢？</p><h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"http://www.jianshu.com/p/923eca294579\" target=\"_blank\" rel=\"external\">如何用charles进行https抓包</a></p><p><a href=\"http://blog.devtang.com/2015/11/14/charles-introduction/\" target=\"_blank\" rel=\"external\">Charles 从入门到精通</a></p><p><a href=\"https://malcolmyu.github.io/2017/02/26/Dive-into-Charles-HTTPS-Proxying/\" target=\"_blank\" rel=\"external\">细说 Charles 配置 HTTPS 代理的乱码问题</a></p>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"在安卓手机上安装Charles证书\"><a href=\"#在安卓手机上安装Charles证书\" class=\"headerlink\" title=\"在安卓手机上安装Charles证书\"></a>在安卓手机上安装Charles证书</h1><p>日常开发中，总有遇到要查看网络请求的时候，浏览器中打开调试器就能看到，手机端就抓瞎了。Charles就正好能帮住我们解决这样的难题。</p><p>然鹅，使用几次之后你就会发现，抓http请求的时候Charles是一抓一个准，而抓https的时候你却看到的都是红叉叉。因为使用Charles截取https通信需要安装Charles的证书，没有安装证书，自然看到的都是叉叉咯。</p><p>说到安装证书，安卓爸爸安装Charles的证书总是会遇到奇奇怪怪的问题。我也是找了八百个帖子试了一百种办法好不容易才装上，于是就有了这篇文章，权当记录以备忘，同时也希望能帮到同样卡在装证书上的同学。</p><h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>Charles是mac中常用的抓包工具，主要是用来抓网络封包然后进行分析。</p><p><strong>官网</strong>：<a href=\"https://www.charlesproxy.com/\" target=\"_blank\" rel=\"external\">https://www.charlesproxy.com/</a></p><p>正版收费，免费试用30天。</p><h2 id=\"安装证书\"><a href=\"#安装证书\" class=\"headerlink\" title=\"安装证书\"></a>安装证书</h2><p>根据我<strong>八百个帖子</strong>的经验，安装证书有两种<strong>比较靠谱</strong>的办法：</p><ol><li>根据官方的推荐，在线下载自动安装，轻松愉快（ BUT，我没安上… ）</li><li>本地导出证书，传到手机上安装</li></ol><p>我的情况是第一种方法没成功，下载到了文件但是无法安装（ 黑人问号？？？）</p><p><img src=\"/images/charles/4.jpeg\" alt=\"安装失败\"></p><p>说一下第一种方法的步骤：</p><ul><li><p>打开Charles，眼睛瞄到顶上菜单栏的 “ Help ” ，点开。</p></li><li><p>找到 “ SSL Proxying ” -&gt; “ Install Charles Root Certificate on a Mobile Device or Remote Browser ”，按下去。</p><p><img src=\"/images/charles/1.png\" alt=\"方法一步骤\"></p></li><li><p>然后跟着提示操作。手机代理到本机ip的 <code>8888</code> 端口，在手机浏览器上打开<code>chls.pro/ssl</code>，就会自动下载并安装证书（ 如果没有自动安装，可以自己去下载管理里面找出来手动安装它 ）。</p><p><img src=\"/images/charles/3.png\" alt=\"charles提示\"></p><p>不知道本机ip可以使用 <code>ifconfig</code> 命令查找</p></li></ul><p>然鹅，这种方法根本不适合我。无奈只能寄希望于第二种：</p><ul><li><p>打开Charles，还是瞄到上面 “ Help “ ，点开。</p></li><li><p>找到 “ SSL Proxying “ -&gt; “ Save Charles Root Certificate… “，按下去。</p><p><img src=\"/images/charles/2.png\" alt=\"\"></p><p>会出现提示保存的界面，可以保存成两种格式，<code>.pem</code> 和 <code>.cer</code> ，我存了 <code>.cer</code> 。</p><p><img src=\"/images/charles/6.png\" alt=\"\"></p><p>就是这货，把这个文件传到手机上。</p><p>我是用微信传的，传到了之后在微信里点开，结果提示还是无法安装，这就神奇了不是？</p><p>别急，咱们换种办法，进入”设置” -&gt; “更多设置” -&gt; “系统安全” -&gt; “从SD卡安装证书”，然后找到证书文件，打开（ 可能不同的手机路径略有不同，莫慌，仔细找找总会找到的。我的是小米 ）。</p><p><img src=\"/images/charles/8.jpeg\" alt=\"\"></p><p>这里有一点要注意，安装证书要输入锁屏密码，如果没有，就去设置一个。</p><p><img src=\"/images/charles/9.jpeg\" alt=\"\"></p><p>历经千辛万苦，终于安装成功了。</p><p>​</p></li></ul><h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>简单的总结一下，我在安装证书时的跌宕起伏：</p><ol><li>通过在线安装的方法不成功，提示无法读取证书文件。</li><li>进入下载目录找到下载的证书文件手动安装也不成功，同样提示无法读取。</li><li>转到系统安全设置中，从SD卡安装同样也不成功。至此官网方法正式宣告失败。</li><li>通过导出证书到本地，传到手机上，在微信点开安装，失败，提示无法读取证书文件。</li><li>进入文件管理，手动点开证书文件，提示无法读取证书。</li><li>使用从SD卡安装功能，成功进入证书安装界面。安装证书需要设置锁屏密码，设置锁屏密码。</li><li>安装成功。</li></ol><p>虽然走了很多弯路，但总算是安上了，期间查了不少资料，也看了不少博客，发现遇到大家遇到的问题都不尽相同，所以决定写一篇文章总结一下自己的心得。万一正好帮上谁了呢？</p><h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"http://www.jianshu.com/p/923eca294579\" target=\"_blank\" rel=\"external\">如何用charles进行https抓包</a></p><p><a href=\"http://blog.devtang.com/2015/11/14/charles-introduction/\" target=\"_blank\" rel=\"external\">Charles 从入门到精通</a></p><p><a href=\"https://malcolmyu.github.io/2017/02/26/Dive-into-Charles-HTTPS-Proxying/\" target=\"_blank\" rel=\"external\">细说 Charles 配置 HTTPS 代理的乱码问题</a></p>"},{"title":"Git flow 分支规范管理流程","date":"2017-09-20T16:45:09.000Z","author":{"name":"漠天","link":null},"_content":"\n本文主要通过git flow管理分支。\n\n## git flow 模型\n\n\n![image](http://static.cosmeapp.com/FqoiVHHk3A5XeVNnJrj3VuMybjSW?imageView2/2/w/611/h/815)\n\n>图片来自[nvie的博文](http://nvie.com/posts/a-successful-git-branching-model/)\n\n\n## 安装\n\n    brew install git-flow\n\n## git flow 辅助命令\n\ngit flow 命令使用帮助:\n\n    usage: git flow <subcommand>\n\n    Available subcommands are:\n       init      Initialize a new git repo with support for the branching model.\n       feature   Manage your feature branches.\n       release   Manage your release branches.\n       hotfix    Manage your hotfix branches.\n       support   Manage your support branches.\n       version   Shows version information.\n\n\n命令Samples:\n\n    1. 使用 git feature start meibox 开启meibox功能的开发.\n    2. 使用 git feature publish meibox 将meibox分支提交到远端\n    3. 使用 git feature finish meibox 完成meibox分支并将功能合并到dev分支\n\n    功能开发完成并完成合并后删除远程分支\n    git push origin --delete feature-test\n\n## 分支规范\n\n    master    ~ 主分支 (线上部署分支)\n    dev       ~ 开发分支\n    feature-  ~ 特性分支\n    hotfix-   ~ 修正生产代码中的缺陷\n\n为了更好的使用git flow管理, 已将相关项目的`git submodule` 替换为 `git subtree`\n\n### 分支说明\n\n`feature 分支:`\n\n统一使用简化的git flow 流程来进行项目, 采用统一的分支前缀, 并在管理流程中增加代码Review环节:\n\n\t在一个新特性开始时 使用git flow feature start 开启新的特性分支(保持feauter-的相同前缀)\n    功能完成开发后, 使用coding的[合并请求]功能发起代码评审.\n\n![code-review](http://static.cosmeapp.com/FpdkhVkrh04GG8Ra_JJoTCRhyRZH?imageView2/2/w/400)\n\n    功能模块代码, 至少经过两个人的code review 才允许被合并.(并且每次提交之前养成自己主动review的习惯)\n\n    在相应feature-完成代码review之后, 作者需要对相关功能进行改进完善(评审人提出异议的情况, 作者确认问题是否真实存在)\n    评审完毕后feature特性开发完成, 合并到dev分支, 并删除对应的feature-分支.\n\n\n>注: 同一个feature在开发完成合并之后需要删除, 不允许重复使用, 新的功能特性新建新的功能分支开进行开发\n\n\n`hotfix 分支:`\n\n    主要用于修复线上bug, 从master分支切出hotfix分支, 修复问题后合并到master 和 dev\n    Sample: git flow hotfix start bugtest, 重要bug修复后需要发起评审\n\n    ➜  projectApi git:(dev) git flow hotfix start test\n    Switched to a new branch 'hotfix-test'\n\n    Summary of actions:\n    - A new branch 'hotfix-test' was created, based on 'master'\n    - You are now on branch 'hotfix-test'\n\n    Follow-up actions:\n    - Bump the version number now!\n    - Start committing your hot fixes\n    - When done, run:\n\n         git flow hotfix finish 'test'\n\n`dev 分支:`\n\n    开发分支, 在feature完成 或 bugfix 之后相关代码被合并到dev.\n    develop分支是保存当前最新开发成果的分支。通常这个分支上的代码也是可进行每日夜间发布的代码（Nightly build）。\n\n`master 分支:`\n\n    线上发布分支\n\n\n\n线上测试环境:\n\n\n    在保障dev 分支的代码质量后, 将dev作为线上测试环境的部署分支, 为了简化分支管理流程,在美妆git管理流程中, 暂时去掉了release分支的预发布管理.\n\n>注: release 分支说明:\n    release分支是为发布新的产品版本而设计的。在这个分支上的代码允许做小的缺陷修正、准备发布版本所需的各项说明信息\n    （版本号、发布时间、编译时间等等）。通过在release分支上进行这些工作可以让develop分支空闲出来以接受新的feature分支上\n    的代码提交，进入新的软件开发迭代周期。\n\n## 测试环境代码发布规范 ##\n\n目前主要针对projectApi，projectShop项目\n\n描述： 线上部署的projectApi测试环境统一使用名为在test 的分支进行发布。\n\n\n发布流程\n\n一、  当A同学开发完一个特性feature-aaa后。(current branch: feature-a)\n\nSample：\n\n    git checkout test\n    git pull origin test\n    git merge feature-a (合并远程feature修改使用 git pull origin feature-a)\n    git push origin test\n\n二、 当B同学开发完另一个特性feature-b后。同上。\n\n\n\n注：此时test分支同时包含A同学B同学修改特性的代码。其他分支禁止合并test分支。\n\nA同学提交到test测试通过后，将feature-a合并到dev, B同学测试通过后将特性feature-b合并到dev。\n\n因为分支上同时包含多个同学的特性代码，严禁直接将test合并到其他分支（包含别人修改的未经测试的特性代码）。\n\n\n\n解决问题：\n\n目前线上测试环境部署在dev分支，A和B同时需要测试时，会临时将测试部署修改成A或者B对应的特性分支，这样线上测试环境只有单一特性，\n\n无法满足多人测试。同时未经线上测试的feature合并到dev分支不安全。\n\n\n\n缺点：\n\na. 常规冲突可通过合并解决。但A同学B同学在同一个功能模块上做不同实验性代码修改时会产生问题，比如同一逻辑的不同实现。\n\nb. 因为此时线上测试环境包含多个特性修改，A开发完成，测试feature-a通过，将feature-a合并到dev，最终阶段性开发完成后，将dev合并到master。\n\n此时可能feature-a已经合到dev => master， feature-b还处于测试阶段，那么由于a特性的线上测试受到了b特性的影响，测试环境与最终的部署线上存异，从而因不一致性导致未发现的问题产生。\n\n\n\n\n## 参考\n\n- [基于git的源代码管理模型——git flow](http://www.ituring.com.cn/article/56870)\n- [用 Git Subtree 在多个 Git 项目间双向同步子项目，附简明使用手册](https://segmentfault.com/a/1190000003969060)\n","source":"_posts/git-flow.md","raw":"title: Git flow 分支规范管理流程\ndate: 2017-09-21 00:45:09\nauthor:\n  name: 漠天\n  link:\ntags:\n- git\n---\n\n本文主要通过git flow管理分支。\n\n## git flow 模型\n\n\n![image](http://static.cosmeapp.com/FqoiVHHk3A5XeVNnJrj3VuMybjSW?imageView2/2/w/611/h/815)\n\n>图片来自[nvie的博文](http://nvie.com/posts/a-successful-git-branching-model/)\n\n\n## 安装\n\n    brew install git-flow\n\n## git flow 辅助命令\n\ngit flow 命令使用帮助:\n\n    usage: git flow <subcommand>\n\n    Available subcommands are:\n       init      Initialize a new git repo with support for the branching model.\n       feature   Manage your feature branches.\n       release   Manage your release branches.\n       hotfix    Manage your hotfix branches.\n       support   Manage your support branches.\n       version   Shows version information.\n\n\n命令Samples:\n\n    1. 使用 git feature start meibox 开启meibox功能的开发.\n    2. 使用 git feature publish meibox 将meibox分支提交到远端\n    3. 使用 git feature finish meibox 完成meibox分支并将功能合并到dev分支\n\n    功能开发完成并完成合并后删除远程分支\n    git push origin --delete feature-test\n\n## 分支规范\n\n    master    ~ 主分支 (线上部署分支)\n    dev       ~ 开发分支\n    feature-  ~ 特性分支\n    hotfix-   ~ 修正生产代码中的缺陷\n\n为了更好的使用git flow管理, 已将相关项目的`git submodule` 替换为 `git subtree`\n\n### 分支说明\n\n`feature 分支:`\n\n统一使用简化的git flow 流程来进行项目, 采用统一的分支前缀, 并在管理流程中增加代码Review环节:\n\n\t在一个新特性开始时 使用git flow feature start 开启新的特性分支(保持feauter-的相同前缀)\n    功能完成开发后, 使用coding的[合并请求]功能发起代码评审.\n\n![code-review](http://static.cosmeapp.com/FpdkhVkrh04GG8Ra_JJoTCRhyRZH?imageView2/2/w/400)\n\n    功能模块代码, 至少经过两个人的code review 才允许被合并.(并且每次提交之前养成自己主动review的习惯)\n\n    在相应feature-完成代码review之后, 作者需要对相关功能进行改进完善(评审人提出异议的情况, 作者确认问题是否真实存在)\n    评审完毕后feature特性开发完成, 合并到dev分支, 并删除对应的feature-分支.\n\n\n>注: 同一个feature在开发完成合并之后需要删除, 不允许重复使用, 新的功能特性新建新的功能分支开进行开发\n\n\n`hotfix 分支:`\n\n    主要用于修复线上bug, 从master分支切出hotfix分支, 修复问题后合并到master 和 dev\n    Sample: git flow hotfix start bugtest, 重要bug修复后需要发起评审\n\n    ➜  projectApi git:(dev) git flow hotfix start test\n    Switched to a new branch 'hotfix-test'\n\n    Summary of actions:\n    - A new branch 'hotfix-test' was created, based on 'master'\n    - You are now on branch 'hotfix-test'\n\n    Follow-up actions:\n    - Bump the version number now!\n    - Start committing your hot fixes\n    - When done, run:\n\n         git flow hotfix finish 'test'\n\n`dev 分支:`\n\n    开发分支, 在feature完成 或 bugfix 之后相关代码被合并到dev.\n    develop分支是保存当前最新开发成果的分支。通常这个分支上的代码也是可进行每日夜间发布的代码（Nightly build）。\n\n`master 分支:`\n\n    线上发布分支\n\n\n\n线上测试环境:\n\n\n    在保障dev 分支的代码质量后, 将dev作为线上测试环境的部署分支, 为了简化分支管理流程,在美妆git管理流程中, 暂时去掉了release分支的预发布管理.\n\n>注: release 分支说明:\n    release分支是为发布新的产品版本而设计的。在这个分支上的代码允许做小的缺陷修正、准备发布版本所需的各项说明信息\n    （版本号、发布时间、编译时间等等）。通过在release分支上进行这些工作可以让develop分支空闲出来以接受新的feature分支上\n    的代码提交，进入新的软件开发迭代周期。\n\n## 测试环境代码发布规范 ##\n\n目前主要针对projectApi，projectShop项目\n\n描述： 线上部署的projectApi测试环境统一使用名为在test 的分支进行发布。\n\n\n发布流程\n\n一、  当A同学开发完一个特性feature-aaa后。(current branch: feature-a)\n\nSample：\n\n    git checkout test\n    git pull origin test\n    git merge feature-a (合并远程feature修改使用 git pull origin feature-a)\n    git push origin test\n\n二、 当B同学开发完另一个特性feature-b后。同上。\n\n\n\n注：此时test分支同时包含A同学B同学修改特性的代码。其他分支禁止合并test分支。\n\nA同学提交到test测试通过后，将feature-a合并到dev, B同学测试通过后将特性feature-b合并到dev。\n\n因为分支上同时包含多个同学的特性代码，严禁直接将test合并到其他分支（包含别人修改的未经测试的特性代码）。\n\n\n\n解决问题：\n\n目前线上测试环境部署在dev分支，A和B同时需要测试时，会临时将测试部署修改成A或者B对应的特性分支，这样线上测试环境只有单一特性，\n\n无法满足多人测试。同时未经线上测试的feature合并到dev分支不安全。\n\n\n\n缺点：\n\na. 常规冲突可通过合并解决。但A同学B同学在同一个功能模块上做不同实验性代码修改时会产生问题，比如同一逻辑的不同实现。\n\nb. 因为此时线上测试环境包含多个特性修改，A开发完成，测试feature-a通过，将feature-a合并到dev，最终阶段性开发完成后，将dev合并到master。\n\n此时可能feature-a已经合到dev => master， feature-b还处于测试阶段，那么由于a特性的线上测试受到了b特性的影响，测试环境与最终的部署线上存异，从而因不一致性导致未发现的问题产生。\n\n\n\n\n## 参考\n\n- [基于git的源代码管理模型——git flow](http://www.ituring.com.cn/article/56870)\n- [用 Git Subtree 在多个 Git 项目间双向同步子项目，附简明使用手册](https://segmentfault.com/a/1190000003969060)\n","slug":"git-flow","published":1,"updated":"2017-09-20T16:52:29.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9cutiob000lds9lzv5teeg4","content":"<p>本文主要通过git flow管理分支。</p><h2 id=\"git-flow-模型\"><a href=\"#git-flow-模型\" class=\"headerlink\" title=\"git flow 模型\"></a>git flow 模型</h2><p><img src=\"http://static.cosmeapp.com/FqoiVHHk3A5XeVNnJrj3VuMybjSW?imageView2/2/w/611/h/815\" alt=\"image\"></p><blockquote><p>图片来自<a href=\"http://nvie.com/posts/a-successful-git-branching-model/\" target=\"_blank\" rel=\"external\">nvie的博文</a></p></blockquote><h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><pre><code>brew install git-flow\n</code></pre><h2 id=\"git-flow-辅助命令\"><a href=\"#git-flow-辅助命令\" class=\"headerlink\" title=\"git flow 辅助命令\"></a>git flow 辅助命令</h2><p>git flow 命令使用帮助:</p><pre><code>usage: git flow &lt;subcommand&gt;\n\nAvailable subcommands are:\n   init      Initialize a new git repo with support for the branching model.\n   feature   Manage your feature branches.\n   release   Manage your release branches.\n   hotfix    Manage your hotfix branches.\n   support   Manage your support branches.\n   version   Shows version information.\n</code></pre><p>命令Samples:</p><pre><code>1. 使用 git feature start meibox 开启meibox功能的开发.\n2. 使用 git feature publish meibox 将meibox分支提交到远端\n3. 使用 git feature finish meibox 完成meibox分支并将功能合并到dev分支\n\n功能开发完成并完成合并后删除远程分支\ngit push origin --delete feature-test\n</code></pre><h2 id=\"分支规范\"><a href=\"#分支规范\" class=\"headerlink\" title=\"分支规范\"></a>分支规范</h2><pre><code>master    ~ 主分支 (线上部署分支)\ndev       ~ 开发分支\nfeature-  ~ 特性分支\nhotfix-   ~ 修正生产代码中的缺陷\n</code></pre><p>为了更好的使用git flow管理, 已将相关项目的<code>git submodule</code> 替换为 <code>git subtree</code></p><h3 id=\"分支说明\"><a href=\"#分支说明\" class=\"headerlink\" title=\"分支说明\"></a>分支说明</h3><p><code>feature 分支:</code></p><p>统一使用简化的git flow 流程来进行项目, 采用统一的分支前缀, 并在管理流程中增加代码Review环节:</p><pre><code>在一个新特性开始时 使用git flow feature start 开启新的特性分支(保持feauter-的相同前缀)\n功能完成开发后, 使用coding的[合并请求]功能发起代码评审.\n</code></pre><p><img src=\"http://static.cosmeapp.com/FpdkhVkrh04GG8Ra_JJoTCRhyRZH?imageView2/2/w/400\" alt=\"code-review\"></p><pre><code>功能模块代码, 至少经过两个人的code review 才允许被合并.(并且每次提交之前养成自己主动review的习惯)\n\n在相应feature-完成代码review之后, 作者需要对相关功能进行改进完善(评审人提出异议的情况, 作者确认问题是否真实存在)\n评审完毕后feature特性开发完成, 合并到dev分支, 并删除对应的feature-分支.\n</code></pre><blockquote><p>注: 同一个feature在开发完成合并之后需要删除, 不允许重复使用, 新的功能特性新建新的功能分支开进行开发</p></blockquote><p><code>hotfix 分支:</code></p><pre><code>主要用于修复线上bug, 从master分支切出hotfix分支, 修复问题后合并到master 和 dev\nSample: git flow hotfix start bugtest, 重要bug修复后需要发起评审\n\n➜  projectApi git:(dev) git flow hotfix start test\nSwitched to a new branch &apos;hotfix-test&apos;\n\nSummary of actions:\n- A new branch &apos;hotfix-test&apos; was created, based on &apos;master&apos;\n- You are now on branch &apos;hotfix-test&apos;\n\nFollow-up actions:\n- Bump the version number now!\n- Start committing your hot fixes\n- When done, run:\n\n     git flow hotfix finish &apos;test&apos;\n</code></pre><p><code>dev 分支:</code></p><pre><code>开发分支, 在feature完成 或 bugfix 之后相关代码被合并到dev.\ndevelop分支是保存当前最新开发成果的分支。通常这个分支上的代码也是可进行每日夜间发布的代码（Nightly build）。\n</code></pre><p><code>master 分支:</code></p><pre><code>线上发布分支\n</code></pre><p>线上测试环境:</p><pre><code>在保障dev 分支的代码质量后, 将dev作为线上测试环境的部署分支, 为了简化分支管理流程,在美妆git管理流程中, 暂时去掉了release分支的预发布管理.\n</code></pre><blockquote><p>注: release 分支说明:<br>release分支是为发布新的产品版本而设计的。在这个分支上的代码允许做小的缺陷修正、准备发布版本所需的各项说明信息<br>（版本号、发布时间、编译时间等等）。通过在release分支上进行这些工作可以让develop分支空闲出来以接受新的feature分支上<br>的代码提交，进入新的软件开发迭代周期。</p></blockquote><h2 id=\"测试环境代码发布规范\"><a href=\"#测试环境代码发布规范\" class=\"headerlink\" title=\"测试环境代码发布规范\"></a>测试环境代码发布规范</h2><p>目前主要针对projectApi，projectShop项目</p><p>描述： 线上部署的projectApi测试环境统一使用名为在test 的分支进行发布。</p><p>发布流程</p><p>一、 当A同学开发完一个特性feature-aaa后。(current branch: feature-a)</p><p>Sample：</p><pre><code>git checkout test\ngit pull origin test\ngit merge feature-a (合并远程feature修改使用 git pull origin feature-a)\ngit push origin test\n</code></pre><p>二、 当B同学开发完另一个特性feature-b后。同上。</p><p>注：此时test分支同时包含A同学B同学修改特性的代码。其他分支禁止合并test分支。</p><p>A同学提交到test测试通过后，将feature-a合并到dev, B同学测试通过后将特性feature-b合并到dev。</p><p>因为分支上同时包含多个同学的特性代码，严禁直接将test合并到其他分支（包含别人修改的未经测试的特性代码）。</p><p>解决问题：</p><p>目前线上测试环境部署在dev分支，A和B同时需要测试时，会临时将测试部署修改成A或者B对应的特性分支，这样线上测试环境只有单一特性，</p><p>无法满足多人测试。同时未经线上测试的feature合并到dev分支不安全。</p><p>缺点：</p><p>a. 常规冲突可通过合并解决。但A同学B同学在同一个功能模块上做不同实验性代码修改时会产生问题，比如同一逻辑的不同实现。</p><p>b. 因为此时线上测试环境包含多个特性修改，A开发完成，测试feature-a通过，将feature-a合并到dev，最终阶段性开发完成后，将dev合并到master。</p><p>此时可能feature-a已经合到dev =&gt; master， feature-b还处于测试阶段，那么由于a特性的线上测试受到了b特性的影响，测试环境与最终的部署线上存异，从而因不一致性导致未发现的问题产生。</p><h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul><li><a href=\"http://www.ituring.com.cn/article/56870\" target=\"_blank\" rel=\"external\">基于git的源代码管理模型——git flow</a></li><li><a href=\"https://segmentfault.com/a/1190000003969060\" target=\"_blank\" rel=\"external\">用 Git Subtree 在多个 Git 项目间双向同步子项目，附简明使用手册</a></li></ul>","site":{"data":{}},"excerpt":"","more":"<p>本文主要通过git flow管理分支。</p><h2 id=\"git-flow-模型\"><a href=\"#git-flow-模型\" class=\"headerlink\" title=\"git flow 模型\"></a>git flow 模型</h2><p><img src=\"http://static.cosmeapp.com/FqoiVHHk3A5XeVNnJrj3VuMybjSW?imageView2/2/w/611/h/815\" alt=\"image\"></p><blockquote><p>图片来自<a href=\"http://nvie.com/posts/a-successful-git-branching-model/\" target=\"_blank\" rel=\"external\">nvie的博文</a></p></blockquote><h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><pre><code>brew install git-flow\n</code></pre><h2 id=\"git-flow-辅助命令\"><a href=\"#git-flow-辅助命令\" class=\"headerlink\" title=\"git flow 辅助命令\"></a>git flow 辅助命令</h2><p>git flow 命令使用帮助:</p><pre><code>usage: git flow &lt;subcommand&gt;\n\nAvailable subcommands are:\n   init      Initialize a new git repo with support for the branching model.\n   feature   Manage your feature branches.\n   release   Manage your release branches.\n   hotfix    Manage your hotfix branches.\n   support   Manage your support branches.\n   version   Shows version information.\n</code></pre><p>命令Samples:</p><pre><code>1. 使用 git feature start meibox 开启meibox功能的开发.\n2. 使用 git feature publish meibox 将meibox分支提交到远端\n3. 使用 git feature finish meibox 完成meibox分支并将功能合并到dev分支\n\n功能开发完成并完成合并后删除远程分支\ngit push origin --delete feature-test\n</code></pre><h2 id=\"分支规范\"><a href=\"#分支规范\" class=\"headerlink\" title=\"分支规范\"></a>分支规范</h2><pre><code>master    ~ 主分支 (线上部署分支)\ndev       ~ 开发分支\nfeature-  ~ 特性分支\nhotfix-   ~ 修正生产代码中的缺陷\n</code></pre><p>为了更好的使用git flow管理, 已将相关项目的<code>git submodule</code> 替换为 <code>git subtree</code></p><h3 id=\"分支说明\"><a href=\"#分支说明\" class=\"headerlink\" title=\"分支说明\"></a>分支说明</h3><p><code>feature 分支:</code></p><p>统一使用简化的git flow 流程来进行项目, 采用统一的分支前缀, 并在管理流程中增加代码Review环节:</p><pre><code>在一个新特性开始时 使用git flow feature start 开启新的特性分支(保持feauter-的相同前缀)\n功能完成开发后, 使用coding的[合并请求]功能发起代码评审.\n</code></pre><p><img src=\"http://static.cosmeapp.com/FpdkhVkrh04GG8Ra_JJoTCRhyRZH?imageView2/2/w/400\" alt=\"code-review\"></p><pre><code>功能模块代码, 至少经过两个人的code review 才允许被合并.(并且每次提交之前养成自己主动review的习惯)\n\n在相应feature-完成代码review之后, 作者需要对相关功能进行改进完善(评审人提出异议的情况, 作者确认问题是否真实存在)\n评审完毕后feature特性开发完成, 合并到dev分支, 并删除对应的feature-分支.\n</code></pre><blockquote><p>注: 同一个feature在开发完成合并之后需要删除, 不允许重复使用, 新的功能特性新建新的功能分支开进行开发</p></blockquote><p><code>hotfix 分支:</code></p><pre><code>主要用于修复线上bug, 从master分支切出hotfix分支, 修复问题后合并到master 和 dev\nSample: git flow hotfix start bugtest, 重要bug修复后需要发起评审\n\n➜  projectApi git:(dev) git flow hotfix start test\nSwitched to a new branch &apos;hotfix-test&apos;\n\nSummary of actions:\n- A new branch &apos;hotfix-test&apos; was created, based on &apos;master&apos;\n- You are now on branch &apos;hotfix-test&apos;\n\nFollow-up actions:\n- Bump the version number now!\n- Start committing your hot fixes\n- When done, run:\n\n     git flow hotfix finish &apos;test&apos;\n</code></pre><p><code>dev 分支:</code></p><pre><code>开发分支, 在feature完成 或 bugfix 之后相关代码被合并到dev.\ndevelop分支是保存当前最新开发成果的分支。通常这个分支上的代码也是可进行每日夜间发布的代码（Nightly build）。\n</code></pre><p><code>master 分支:</code></p><pre><code>线上发布分支\n</code></pre><p>线上测试环境:</p><pre><code>在保障dev 分支的代码质量后, 将dev作为线上测试环境的部署分支, 为了简化分支管理流程,在美妆git管理流程中, 暂时去掉了release分支的预发布管理.\n</code></pre><blockquote><p>注: release 分支说明:<br>release分支是为发布新的产品版本而设计的。在这个分支上的代码允许做小的缺陷修正、准备发布版本所需的各项说明信息<br>（版本号、发布时间、编译时间等等）。通过在release分支上进行这些工作可以让develop分支空闲出来以接受新的feature分支上<br>的代码提交，进入新的软件开发迭代周期。</p></blockquote><h2 id=\"测试环境代码发布规范\"><a href=\"#测试环境代码发布规范\" class=\"headerlink\" title=\"测试环境代码发布规范\"></a>测试环境代码发布规范</h2><p>目前主要针对projectApi，projectShop项目</p><p>描述： 线上部署的projectApi测试环境统一使用名为在test 的分支进行发布。</p><p>发布流程</p><p>一、 当A同学开发完一个特性feature-aaa后。(current branch: feature-a)</p><p>Sample：</p><pre><code>git checkout test\ngit pull origin test\ngit merge feature-a (合并远程feature修改使用 git pull origin feature-a)\ngit push origin test\n</code></pre><p>二、 当B同学开发完另一个特性feature-b后。同上。</p><p>注：此时test分支同时包含A同学B同学修改特性的代码。其他分支禁止合并test分支。</p><p>A同学提交到test测试通过后，将feature-a合并到dev, B同学测试通过后将特性feature-b合并到dev。</p><p>因为分支上同时包含多个同学的特性代码，严禁直接将test合并到其他分支（包含别人修改的未经测试的特性代码）。</p><p>解决问题：</p><p>目前线上测试环境部署在dev分支，A和B同时需要测试时，会临时将测试部署修改成A或者B对应的特性分支，这样线上测试环境只有单一特性，</p><p>无法满足多人测试。同时未经线上测试的feature合并到dev分支不安全。</p><p>缺点：</p><p>a. 常规冲突可通过合并解决。但A同学B同学在同一个功能模块上做不同实验性代码修改时会产生问题，比如同一逻辑的不同实现。</p><p>b. 因为此时线上测试环境包含多个特性修改，A开发完成，测试feature-a通过，将feature-a合并到dev，最终阶段性开发完成后，将dev合并到master。</p><p>此时可能feature-a已经合到dev =&gt; master， feature-b还处于测试阶段，那么由于a特性的线上测试受到了b特性的影响，测试环境与最终的部署线上存异，从而因不一致性导致未发现的问题产生。</p><h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul><li><a href=\"http://www.ituring.com.cn/article/56870\" target=\"_blank\" rel=\"external\">基于git的源代码管理模型——git flow</a></li><li><a href=\"https://segmentfault.com/a/1190000003969060\" target=\"_blank\" rel=\"external\">用 Git Subtree 在多个 Git 项目间双向同步子项目，附简明使用手册</a></li></ul>"},{"title":"移动端弹框","author":{"name":"马雪娜","link":null},"date":"2017-10-29T14:30:17.000Z","_content":"\n\n最近看了一篇文章，是关于移动端弹框的讲解，从中对弹框的定义有了更清楚的了解，以便于结合弹框本身的特点去使用，做出更好的产品。\n\n## 移动端弹框的分类\n依据交互成本可分为模态弹框和非模态弹框。\n\n## 什么是模态弹框？\n1. 移动端的模态弹框一般是指对话框，IOS是指警示框。当模态弹窗出现时，需要解决弹框中的任务，才能去做其他事情。\n2. MaterialDesign中对Dialogs的定义是：用于提示用户作一些决定，或者是完成某个任务时需要的一些其它额外的信息。Dialog可用于告知用户问题的具体信息以便他们做出重要的决定，或者是用于解释接下来的动作的重要性及后果 。\n3. 模态对话框内部的构成一般包括了：标题、内容、一个或多个选项，内容有时可以省略。![image](/images/mobile-dialog/1.png)\n\n## 什么是非模态弹框？\n定义：非模态弹窗在弹出时不会中断当前页面的其它功能。\n1. Snackbar：针对操作的轻量级反馈机制，出现在手机屏幕下方，在屏幕所有层的最上方，只能以文本的形式存在。可以在屏幕上滑动关闭，允许承载一个行为。（可交互）![image](/images/mobile-dialog/2.png)\n2. Toast：主要用于提示系统消息的胶囊状的提示框，只能以文本形式存在。开发者可以自定义的 Toast 和它在屏幕上的位置。并不包含操作也不能从屏幕上滑动关闭。（不可交互 ）![image](/images/mobile-dialog/3.png)\n3. HUD：iOS中的透明指示层，英文全称head up display，用于提供轻量的反馈，在页面居中位置，可以使用图标，有可变动信息，如iOS音量加减。（不可交互） ![image](/images/mobile-dialog/4.png)\n\n## 总结\n模态弹框更聚焦，非模态弹框更轻巧，要结合使用情景和意图去使用弹框，给用户更好的体验。","source":"_posts/mobile-dialog.md","raw":"---\ntitle: 移动端弹框\nauthor:\n  name: 马雪娜\n  link:\ndate: 2017-10-29 22:30:17\ntags:\n- 产品\n---\n\n\n最近看了一篇文章，是关于移动端弹框的讲解，从中对弹框的定义有了更清楚的了解，以便于结合弹框本身的特点去使用，做出更好的产品。\n\n## 移动端弹框的分类\n依据交互成本可分为模态弹框和非模态弹框。\n\n## 什么是模态弹框？\n1. 移动端的模态弹框一般是指对话框，IOS是指警示框。当模态弹窗出现时，需要解决弹框中的任务，才能去做其他事情。\n2. MaterialDesign中对Dialogs的定义是：用于提示用户作一些决定，或者是完成某个任务时需要的一些其它额外的信息。Dialog可用于告知用户问题的具体信息以便他们做出重要的决定，或者是用于解释接下来的动作的重要性及后果 。\n3. 模态对话框内部的构成一般包括了：标题、内容、一个或多个选项，内容有时可以省略。![image](/images/mobile-dialog/1.png)\n\n## 什么是非模态弹框？\n定义：非模态弹窗在弹出时不会中断当前页面的其它功能。\n1. Snackbar：针对操作的轻量级反馈机制，出现在手机屏幕下方，在屏幕所有层的最上方，只能以文本的形式存在。可以在屏幕上滑动关闭，允许承载一个行为。（可交互）![image](/images/mobile-dialog/2.png)\n2. Toast：主要用于提示系统消息的胶囊状的提示框，只能以文本形式存在。开发者可以自定义的 Toast 和它在屏幕上的位置。并不包含操作也不能从屏幕上滑动关闭。（不可交互 ）![image](/images/mobile-dialog/3.png)\n3. HUD：iOS中的透明指示层，英文全称head up display，用于提供轻量的反馈，在页面居中位置，可以使用图标，有可变动信息，如iOS音量加减。（不可交互） ![image](/images/mobile-dialog/4.png)\n\n## 总结\n模态弹框更聚焦，非模态弹框更轻巧，要结合使用情景和意图去使用弹框，给用户更好的体验。","slug":"mobile-dialog","published":1,"updated":"2017-10-29T14:33:08.140Z","_id":"cj9cutioc000nds9lp6btjj3v","comments":1,"layout":"post","photos":[],"link":"","content":"<p>最近看了一篇文章，是关于移动端弹框的讲解，从中对弹框的定义有了更清楚的了解，以便于结合弹框本身的特点去使用，做出更好的产品。</p><h2 id=\"移动端弹框的分类\"><a href=\"#移动端弹框的分类\" class=\"headerlink\" title=\"移动端弹框的分类\"></a>移动端弹框的分类</h2><p>依据交互成本可分为模态弹框和非模态弹框。</p><h2 id=\"什么是模态弹框？\"><a href=\"#什么是模态弹框？\" class=\"headerlink\" title=\"什么是模态弹框？\"></a>什么是模态弹框？</h2><ol><li>移动端的模态弹框一般是指对话框，IOS是指警示框。当模态弹窗出现时，需要解决弹框中的任务，才能去做其他事情。</li><li>MaterialDesign中对Dialogs的定义是：用于提示用户作一些决定，或者是完成某个任务时需要的一些其它额外的信息。Dialog可用于告知用户问题的具体信息以便他们做出重要的决定，或者是用于解释接下来的动作的重要性及后果 。</li><li>模态对话框内部的构成一般包括了：标题、内容、一个或多个选项，内容有时可以省略。<img src=\"/images/mobile-dialog/1.png\" alt=\"image\"></li></ol><h2 id=\"什么是非模态弹框？\"><a href=\"#什么是非模态弹框？\" class=\"headerlink\" title=\"什么是非模态弹框？\"></a>什么是非模态弹框？</h2><p>定义：非模态弹窗在弹出时不会中断当前页面的其它功能。</p><ol><li>Snackbar：针对操作的轻量级反馈机制，出现在手机屏幕下方，在屏幕所有层的最上方，只能以文本的形式存在。可以在屏幕上滑动关闭，允许承载一个行为。（可交互）<img src=\"/images/mobile-dialog/2.png\" alt=\"image\"></li><li>Toast：主要用于提示系统消息的胶囊状的提示框，只能以文本形式存在。开发者可以自定义的 Toast 和它在屏幕上的位置。并不包含操作也不能从屏幕上滑动关闭。（不可交互 ）<img src=\"/images/mobile-dialog/3.png\" alt=\"image\"></li><li>HUD：iOS中的透明指示层，英文全称head up display，用于提供轻量的反馈，在页面居中位置，可以使用图标，有可变动信息，如iOS音量加减。（不可交互） <img src=\"/images/mobile-dialog/4.png\" alt=\"image\"></li></ol><h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>模态弹框更聚焦，非模态弹框更轻巧，要结合使用情景和意图去使用弹框，给用户更好的体验。</p>","site":{"data":{}},"excerpt":"","more":"<p>最近看了一篇文章，是关于移动端弹框的讲解，从中对弹框的定义有了更清楚的了解，以便于结合弹框本身的特点去使用，做出更好的产品。</p><h2 id=\"移动端弹框的分类\"><a href=\"#移动端弹框的分类\" class=\"headerlink\" title=\"移动端弹框的分类\"></a>移动端弹框的分类</h2><p>依据交互成本可分为模态弹框和非模态弹框。</p><h2 id=\"什么是模态弹框？\"><a href=\"#什么是模态弹框？\" class=\"headerlink\" title=\"什么是模态弹框？\"></a>什么是模态弹框？</h2><ol><li>移动端的模态弹框一般是指对话框，IOS是指警示框。当模态弹窗出现时，需要解决弹框中的任务，才能去做其他事情。</li><li>MaterialDesign中对Dialogs的定义是：用于提示用户作一些决定，或者是完成某个任务时需要的一些其它额外的信息。Dialog可用于告知用户问题的具体信息以便他们做出重要的决定，或者是用于解释接下来的动作的重要性及后果 。</li><li>模态对话框内部的构成一般包括了：标题、内容、一个或多个选项，内容有时可以省略。<img src=\"/images/mobile-dialog/1.png\" alt=\"image\"></li></ol><h2 id=\"什么是非模态弹框？\"><a href=\"#什么是非模态弹框？\" class=\"headerlink\" title=\"什么是非模态弹框？\"></a>什么是非模态弹框？</h2><p>定义：非模态弹窗在弹出时不会中断当前页面的其它功能。</p><ol><li>Snackbar：针对操作的轻量级反馈机制，出现在手机屏幕下方，在屏幕所有层的最上方，只能以文本的形式存在。可以在屏幕上滑动关闭，允许承载一个行为。（可交互）<img src=\"/images/mobile-dialog/2.png\" alt=\"image\"></li><li>Toast：主要用于提示系统消息的胶囊状的提示框，只能以文本形式存在。开发者可以自定义的 Toast 和它在屏幕上的位置。并不包含操作也不能从屏幕上滑动关闭。（不可交互 ）<img src=\"/images/mobile-dialog/3.png\" alt=\"image\"></li><li>HUD：iOS中的透明指示层，英文全称head up display，用于提供轻量的反馈，在页面居中位置，可以使用图标，有可变动信息，如iOS音量加减。（不可交互） <img src=\"/images/mobile-dialog/4.png\" alt=\"image\"></li></ol><h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>模态弹框更聚焦，非模态弹框更轻巧，要结合使用情景和意图去使用弹框，给用户更好的体验。</p>"},{"title":"iOS开发-利用AVFoundation开发仿微信的拍摄功能","author":{"name":"李傲","link":null},"date":"2017-10-29T14:27:39.000Z","_content":"\n## iOS开发-利用AVFoundation开发仿微信的拍摄功能\n\n### AVFoundation概述\n\nAVFoundation是一个可以用来使用和创建基于时间的视听媒体的框架，它提供了一个能使用基于时间的视听数据的详细级别的Objective-C接口。\n\n你可以用它来：\n\n- 检查，创建，编辑或是重新编码媒体文件\n- 从设备中获取输入流\n- 在视频实时播放时操作和回放\n\nAVFoundation框架包含视频相关的APIs和音频相关的API。\n\n\n\n### 开发中要使用的相关的类\n\n- AVCaptureSession ：是AVFoundation的核心类,用于捕捉视频和音频,协调视频和音频的输入和输出流。\n- AVCaptureVideoPreviewLayer：一个核心动画层，当有视频被捕获时，就可以在这上面显示。他是CALayer的子类。\n- AVCaptureDevice：可以初始化一个设备，这个设备可以是视频或者音频。你可以使用这个设备配置一些硬件属性。它同时向AVCaptureSession提供输入数据\n- AVCaptureDeviceInput：设备输入\n- AVCaptureVideoDataOutput: 视频输出\n- AVCaptureAudioDataOutput：音频输出\n- AVCaptureStillImageOutput：图像输出\n\n\n\n### 项目相关需求\n\n​   同时提供拍照和录制视频功能。单击拍摄按钮为拍照功能，长按则直接录制视频。\n\n### code\n\n​   在vc(ViewController，一下ViewController均简称vc)中定义如下与AVFoundation相关的属性:\n\n```swift\n    //会话\n    private var session : AVCaptureSession?\n\n    //视频音频设备\n    private var videoCaptureDevice : AVCaptureDevice?\n    private var audioCaptureDevice : AVCaptureDevice?\n\n    //视频音频输入\n    private var videoDeviceInput : AVCaptureDeviceInput?\n    private var audioDeviceInput : AVCaptureDeviceInput?\n\n    //视频音频照片输出\n    private var videoOutput : AVCaptureVideoDataOutput?\n    private var audioOutput : AVCaptureAudioDataOutput?\n    private var imageOutput : AVCaptureStillImageOutput?\n\n    //用于视频缓存\n    private var mediaWriter : PBJMediaWriter?\n    private var videoPreviewLayer : AVCaptureVideoPreviewLayer?\n```\n\n并在代码中初始化\n\n初始化session:\n\n```swift\nsession = AVCaptureSession()\nsession?.sessionPreset = AVCaptureSessionPreset1280x720\n```\n\n初始化video相关设备，并与session绑定：\n\n```swift\n    //video\n    videoCaptureDevice = AVCaptureDevice.defaultDevice(withMediaType: AVMediaTypeVideo)\n    do {\n            videoDeviceInput = try AVCaptureDeviceInput.init(device: videoCaptureDevice!)\n        } catch {\n            print(\"initial videoDeviceInput error\")\n            return\n        }\n\n    //video input\n    if session!.canAddInput(videoDeviceInput!) {\n      //如果session支持该inputDevice，则添加到session中\n        session!.addInput(videoDeviceInput!)\n        videoPreviewLayer?.connection.videoOrientation = .portrait\n    }\n```\n\n以相同的逻辑初始化audio:\n\n```swift\n//audio\naudioCaptureDevice = AVCaptureDevice.defaultDevice(withMediaType: AVMediaTypeAudio)\n\ndo {\n    audioDeviceInput = try AVCaptureDeviceInput.init(device: audioCaptureDevice)\n} catch {\n    print(\"initial videoDeviceInput error\")\n}\n\n//audio input\nif session!.canAddInput(audioDeviceInput!) {\n    session!.addInput(audioDeviceInput!)\n}\n```\n\n该项目中同时又三个输出，即视频，音频和图片：其初始化方法如下：\n\n```swift\n//video output\nvideoOutput = AVCaptureVideoDataOutput()\nvideoOutput!.videoSettings = [kCVPixelBufferPixelFormatTypeKey as String : kCVPixelFormatType_420YpCbCr8BiPlanarFullRange]\nvideoOutput!.setSampleBufferDelegate(self, queue: queue)\nsession!.addOutput(videoOutput)\n\n//audio output\naudioOutput = AVCaptureAudioDataOutput()\naudioOutput!.setSampleBufferDelegate(self, queue: queue)\nsession!.addOutput(audioOutput)\n\n//photo output\nimageOutput = AVCaptureStillImageOutput()\nimageOutput!.outputSettings = [AVVideoCodecKey : AVVideoCodecJPEG]\nsession!.addOutput(imageOutput)\n\n```\n\n以上代码中，在设置setSampleBufferDelegate，加入了一个queue队列，这是一个串行队列，在vc中初始化如下：\n\n```swift\n//音频视频输出的串行队列\nlazy private var queue : DispatchQueue = {\n    let queue = DispatchQueue(label: \"ouputQueue\")\n    return queue\n}()\n```\n\n同时，这里使用了一个第三方库用于将拍照或者录制的数据写入硬盘中：\n\n```swift\n//视频缓存路径\nprivate let path : URL = {\nlet doc = FileManager.default.urls(for: .documentDirectory, in:.userDomainMask).last\nlet path = doc?.appendingPathComponent(\"recordVideo\").appendingPathExtension(\"mp4\")\nreturn path!\n}()\n\n//用于视频缓存\nprivate var mediaWriter : PBJMediaWriter?\n\n```\n\n在代码中设置若干标志位用于记录当前的拍摄状态，并记录录制时间：\n\n```swift\n//状态\nprivate var isRecording : Bool = false //录制状态\nprivate var isTakePhoto : Bool = false //拍照状态\nprivate var beginTime : TimeInterval? = nil //开始录制时间\nprivate var videoWritten : Bool = false //记录buffer是否是视\n```\n\n监听手势，当长按手势大于指定时间时，则判定为录制视频，否则，则是拍照：\n\n```swift\n//MARK: 手势响应\nfunc handleLongPress(_ gesture : UILongPressGestureRecognizer) {\n    if gesture.state == .began {\n        beginTime = Date().timeIntervalSince1970\n        _startVideo()\n    } else if gesture.state == .cancelled || gesture.state == .ended {\n        if Date().timeIntervalSince1970 - beginTime! < minRecordDuration {\n            _takePhoto()\n        } else {\n            _endVideo()\n        }\n    }\n}\n```\n\n最核心的就是监听AVCaptureVideoDataOutputSampleBufferDelegate和AVCaptureAudioDataOutputSampleBufferDelegate的回调方法，将数据存入指定的路径中：\n\n```swift\n//MARK: AVCaptureVideoDataOutputSampleBufferDelegate && AVCaptureAudioDataOutputSampleBufferDelegate\nfunc captureOutput(_ captureOutput: AVCaptureOutput!, didOutputSampleBuffer sampleBuffer: CMSampleBuffer!, from connection: AVCaptureConnection!) {\n        if !CMSampleBufferDataIsReady(sampleBuffer) {\n            return\n        }\n\n        // check\n        if !isRecording ||  mediaWriter == nil {\n            return\n        }\n\n        let isVideo = captureOutput == videoOutput\n\n        if !isVideo && !(mediaWriter!.isAudioReady)  {\n            //audio settings\n            _ = _setupAudioWithSampleBuffer(sampleBuffer: sampleBuffer)\n        }\n\n        if isVideo && !(mediaWriter!.isVideoReady) {\n            //video settings\n            _ = _setupVideoWithSampleBuffer(sampleBuffer: sampleBuffer)\n        }\n\n\n        let isReadyToRecord : Bool = mediaWriter!.isAudioReady && mediaWriter!.isVideoReady\n\n        if (!isReadyToRecord) {\n            //需要音频和视频同时准备好\n            return;\n        }\n\n        if isVideo {\n            mediaWriter?.write(sampleBuffer, withMediaTypeVideo: isVideo)\n            videoWritten = true\n\n        } else if !isVideo && videoWritten  {\n            mediaWriter?.write(sampleBuffer, withMediaTypeVideo: isVideo)\n        }\n    }\n```\n\n在开启系统设备后，videoOutput和audioOutput都会将数据出入该回调方法，即sampleBuffer。在音频和视频buffer同时准备好了之后，则将该buffer写入指定路径。拍照则使用另外一套逻辑。\n\n```swift\nfunc _takePhoto() {\n        isTakePhoto = true\n\n        let videoConnection = imageOutput?.connection(withMediaType: AVMediaTypeVideo);\n        videoConnection?.videoOrientation = .portrait\n\n        imageOutput?.captureStillImageAsynchronously(from: videoConnection!, completionHandler: { (buffer, error) in\n            if error == nil {\n                let imageData = AVCaptureStillImageOutput.jpegStillImageNSDataRepresentation(buffer)\n                var image = UIImage(data: imageData!)\n                image = image!.fixOrientation()\n                let vc = VisionPreviewViewController()\n                vc.photo = image\n                vc.delegate = self\n                self.navigationController?.pushViewController(vc, animated: false)\n            }\n\n        })\n    }\n```\n\n利用imageOutput异步获取imageData并转为image格式。\n\n\n## 总结\n\n利用AVFoundation开发拍摄功能的核心代码已经介绍大致如上，其中还是许多相关细节并没与在文中意义赘述，代码请参考：https://github.com/leoIsAllRight/SwiftDemo/tree/master/SwiftDemo的vision中的相关类。\n\n\n\n","source":"_posts/iOS-AVFoundation.md","raw":"---\ntitle: iOS开发-利用AVFoundation开发仿微信的拍摄功能\nauthor:\n  name: 李傲\n  link:\ndate: 2017-10-29 22:27:39\ntags:\n---\n\n## iOS开发-利用AVFoundation开发仿微信的拍摄功能\n\n### AVFoundation概述\n\nAVFoundation是一个可以用来使用和创建基于时间的视听媒体的框架，它提供了一个能使用基于时间的视听数据的详细级别的Objective-C接口。\n\n你可以用它来：\n\n- 检查，创建，编辑或是重新编码媒体文件\n- 从设备中获取输入流\n- 在视频实时播放时操作和回放\n\nAVFoundation框架包含视频相关的APIs和音频相关的API。\n\n\n\n### 开发中要使用的相关的类\n\n- AVCaptureSession ：是AVFoundation的核心类,用于捕捉视频和音频,协调视频和音频的输入和输出流。\n- AVCaptureVideoPreviewLayer：一个核心动画层，当有视频被捕获时，就可以在这上面显示。他是CALayer的子类。\n- AVCaptureDevice：可以初始化一个设备，这个设备可以是视频或者音频。你可以使用这个设备配置一些硬件属性。它同时向AVCaptureSession提供输入数据\n- AVCaptureDeviceInput：设备输入\n- AVCaptureVideoDataOutput: 视频输出\n- AVCaptureAudioDataOutput：音频输出\n- AVCaptureStillImageOutput：图像输出\n\n\n\n### 项目相关需求\n\n​   同时提供拍照和录制视频功能。单击拍摄按钮为拍照功能，长按则直接录制视频。\n\n### code\n\n​   在vc(ViewController，一下ViewController均简称vc)中定义如下与AVFoundation相关的属性:\n\n```swift\n    //会话\n    private var session : AVCaptureSession?\n\n    //视频音频设备\n    private var videoCaptureDevice : AVCaptureDevice?\n    private var audioCaptureDevice : AVCaptureDevice?\n\n    //视频音频输入\n    private var videoDeviceInput : AVCaptureDeviceInput?\n    private var audioDeviceInput : AVCaptureDeviceInput?\n\n    //视频音频照片输出\n    private var videoOutput : AVCaptureVideoDataOutput?\n    private var audioOutput : AVCaptureAudioDataOutput?\n    private var imageOutput : AVCaptureStillImageOutput?\n\n    //用于视频缓存\n    private var mediaWriter : PBJMediaWriter?\n    private var videoPreviewLayer : AVCaptureVideoPreviewLayer?\n```\n\n并在代码中初始化\n\n初始化session:\n\n```swift\nsession = AVCaptureSession()\nsession?.sessionPreset = AVCaptureSessionPreset1280x720\n```\n\n初始化video相关设备，并与session绑定：\n\n```swift\n    //video\n    videoCaptureDevice = AVCaptureDevice.defaultDevice(withMediaType: AVMediaTypeVideo)\n    do {\n            videoDeviceInput = try AVCaptureDeviceInput.init(device: videoCaptureDevice!)\n        } catch {\n            print(\"initial videoDeviceInput error\")\n            return\n        }\n\n    //video input\n    if session!.canAddInput(videoDeviceInput!) {\n      //如果session支持该inputDevice，则添加到session中\n        session!.addInput(videoDeviceInput!)\n        videoPreviewLayer?.connection.videoOrientation = .portrait\n    }\n```\n\n以相同的逻辑初始化audio:\n\n```swift\n//audio\naudioCaptureDevice = AVCaptureDevice.defaultDevice(withMediaType: AVMediaTypeAudio)\n\ndo {\n    audioDeviceInput = try AVCaptureDeviceInput.init(device: audioCaptureDevice)\n} catch {\n    print(\"initial videoDeviceInput error\")\n}\n\n//audio input\nif session!.canAddInput(audioDeviceInput!) {\n    session!.addInput(audioDeviceInput!)\n}\n```\n\n该项目中同时又三个输出，即视频，音频和图片：其初始化方法如下：\n\n```swift\n//video output\nvideoOutput = AVCaptureVideoDataOutput()\nvideoOutput!.videoSettings = [kCVPixelBufferPixelFormatTypeKey as String : kCVPixelFormatType_420YpCbCr8BiPlanarFullRange]\nvideoOutput!.setSampleBufferDelegate(self, queue: queue)\nsession!.addOutput(videoOutput)\n\n//audio output\naudioOutput = AVCaptureAudioDataOutput()\naudioOutput!.setSampleBufferDelegate(self, queue: queue)\nsession!.addOutput(audioOutput)\n\n//photo output\nimageOutput = AVCaptureStillImageOutput()\nimageOutput!.outputSettings = [AVVideoCodecKey : AVVideoCodecJPEG]\nsession!.addOutput(imageOutput)\n\n```\n\n以上代码中，在设置setSampleBufferDelegate，加入了一个queue队列，这是一个串行队列，在vc中初始化如下：\n\n```swift\n//音频视频输出的串行队列\nlazy private var queue : DispatchQueue = {\n    let queue = DispatchQueue(label: \"ouputQueue\")\n    return queue\n}()\n```\n\n同时，这里使用了一个第三方库用于将拍照或者录制的数据写入硬盘中：\n\n```swift\n//视频缓存路径\nprivate let path : URL = {\nlet doc = FileManager.default.urls(for: .documentDirectory, in:.userDomainMask).last\nlet path = doc?.appendingPathComponent(\"recordVideo\").appendingPathExtension(\"mp4\")\nreturn path!\n}()\n\n//用于视频缓存\nprivate var mediaWriter : PBJMediaWriter?\n\n```\n\n在代码中设置若干标志位用于记录当前的拍摄状态，并记录录制时间：\n\n```swift\n//状态\nprivate var isRecording : Bool = false //录制状态\nprivate var isTakePhoto : Bool = false //拍照状态\nprivate var beginTime : TimeInterval? = nil //开始录制时间\nprivate var videoWritten : Bool = false //记录buffer是否是视\n```\n\n监听手势，当长按手势大于指定时间时，则判定为录制视频，否则，则是拍照：\n\n```swift\n//MARK: 手势响应\nfunc handleLongPress(_ gesture : UILongPressGestureRecognizer) {\n    if gesture.state == .began {\n        beginTime = Date().timeIntervalSince1970\n        _startVideo()\n    } else if gesture.state == .cancelled || gesture.state == .ended {\n        if Date().timeIntervalSince1970 - beginTime! < minRecordDuration {\n            _takePhoto()\n        } else {\n            _endVideo()\n        }\n    }\n}\n```\n\n最核心的就是监听AVCaptureVideoDataOutputSampleBufferDelegate和AVCaptureAudioDataOutputSampleBufferDelegate的回调方法，将数据存入指定的路径中：\n\n```swift\n//MARK: AVCaptureVideoDataOutputSampleBufferDelegate && AVCaptureAudioDataOutputSampleBufferDelegate\nfunc captureOutput(_ captureOutput: AVCaptureOutput!, didOutputSampleBuffer sampleBuffer: CMSampleBuffer!, from connection: AVCaptureConnection!) {\n        if !CMSampleBufferDataIsReady(sampleBuffer) {\n            return\n        }\n\n        // check\n        if !isRecording ||  mediaWriter == nil {\n            return\n        }\n\n        let isVideo = captureOutput == videoOutput\n\n        if !isVideo && !(mediaWriter!.isAudioReady)  {\n            //audio settings\n            _ = _setupAudioWithSampleBuffer(sampleBuffer: sampleBuffer)\n        }\n\n        if isVideo && !(mediaWriter!.isVideoReady) {\n            //video settings\n            _ = _setupVideoWithSampleBuffer(sampleBuffer: sampleBuffer)\n        }\n\n\n        let isReadyToRecord : Bool = mediaWriter!.isAudioReady && mediaWriter!.isVideoReady\n\n        if (!isReadyToRecord) {\n            //需要音频和视频同时准备好\n            return;\n        }\n\n        if isVideo {\n            mediaWriter?.write(sampleBuffer, withMediaTypeVideo: isVideo)\n            videoWritten = true\n\n        } else if !isVideo && videoWritten  {\n            mediaWriter?.write(sampleBuffer, withMediaTypeVideo: isVideo)\n        }\n    }\n```\n\n在开启系统设备后，videoOutput和audioOutput都会将数据出入该回调方法，即sampleBuffer。在音频和视频buffer同时准备好了之后，则将该buffer写入指定路径。拍照则使用另外一套逻辑。\n\n```swift\nfunc _takePhoto() {\n        isTakePhoto = true\n\n        let videoConnection = imageOutput?.connection(withMediaType: AVMediaTypeVideo);\n        videoConnection?.videoOrientation = .portrait\n\n        imageOutput?.captureStillImageAsynchronously(from: videoConnection!, completionHandler: { (buffer, error) in\n            if error == nil {\n                let imageData = AVCaptureStillImageOutput.jpegStillImageNSDataRepresentation(buffer)\n                var image = UIImage(data: imageData!)\n                image = image!.fixOrientation()\n                let vc = VisionPreviewViewController()\n                vc.photo = image\n                vc.delegate = self\n                self.navigationController?.pushViewController(vc, animated: false)\n            }\n\n        })\n    }\n```\n\n利用imageOutput异步获取imageData并转为image格式。\n\n\n## 总结\n\n利用AVFoundation开发拍摄功能的核心代码已经介绍大致如上，其中还是许多相关细节并没与在文中意义赘述，代码请参考：https://github.com/leoIsAllRight/SwiftDemo/tree/master/SwiftDemo的vision中的相关类。\n\n\n\n","slug":"iOS-AVFoundation","published":1,"updated":"2017-10-29T14:28:48.490Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9cutiod000pds9lkdo2tfry","content":"<h2 id=\"iOS开发-利用AVFoundation开发仿微信的拍摄功能\"><a href=\"#iOS开发-利用AVFoundation开发仿微信的拍摄功能\" class=\"headerlink\" title=\"iOS开发-利用AVFoundation开发仿微信的拍摄功能\"></a>iOS开发-利用AVFoundation开发仿微信的拍摄功能</h2><h3 id=\"AVFoundation概述\"><a href=\"#AVFoundation概述\" class=\"headerlink\" title=\"AVFoundation概述\"></a>AVFoundation概述</h3><p>AVFoundation是一个可以用来使用和创建基于时间的视听媒体的框架，它提供了一个能使用基于时间的视听数据的详细级别的Objective-C接口。</p><p>你可以用它来：</p><ul><li>检查，创建，编辑或是重新编码媒体文件</li><li>从设备中获取输入流</li><li>在视频实时播放时操作和回放</li></ul><p>AVFoundation框架包含视频相关的APIs和音频相关的API。</p><h3 id=\"开发中要使用的相关的类\"><a href=\"#开发中要使用的相关的类\" class=\"headerlink\" title=\"开发中要使用的相关的类\"></a>开发中要使用的相关的类</h3><ul><li>AVCaptureSession ：是AVFoundation的核心类,用于捕捉视频和音频,协调视频和音频的输入和输出流。</li><li>AVCaptureVideoPreviewLayer：一个核心动画层，当有视频被捕获时，就可以在这上面显示。他是CALayer的子类。</li><li>AVCaptureDevice：可以初始化一个设备，这个设备可以是视频或者音频。你可以使用这个设备配置一些硬件属性。它同时向AVCaptureSession提供输入数据</li><li>AVCaptureDeviceInput：设备输入</li><li>AVCaptureVideoDataOutput: 视频输出</li><li>AVCaptureAudioDataOutput：音频输出</li><li>AVCaptureStillImageOutput：图像输出</li></ul><h3 id=\"项目相关需求\"><a href=\"#项目相关需求\" class=\"headerlink\" title=\"项目相关需求\"></a>项目相关需求</h3><p>​ 同时提供拍照和录制视频功能。单击拍摄按钮为拍照功能，长按则直接录制视频。</p><h3 id=\"code\"><a href=\"#code\" class=\"headerlink\" title=\"code\"></a>code</h3><p>​ 在vc(ViewController，一下ViewController均简称vc)中定义如下与AVFoundation相关的属性:</p><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//会话</span></div><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">var</span> session : <span class=\"type\">AVCaptureSession</span>?</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//视频音频设备</span></div><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">var</span> videoCaptureDevice : <span class=\"type\">AVCaptureDevice</span>?</div><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">var</span> audioCaptureDevice : <span class=\"type\">AVCaptureDevice</span>?</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//视频音频输入</span></div><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">var</span> videoDeviceInput : <span class=\"type\">AVCaptureDeviceInput</span>?</div><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">var</span> audioDeviceInput : <span class=\"type\">AVCaptureDeviceInput</span>?</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//视频音频照片输出</span></div><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">var</span> videoOutput : <span class=\"type\">AVCaptureVideoDataOutput</span>?</div><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">var</span> audioOutput : <span class=\"type\">AVCaptureAudioDataOutput</span>?</div><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">var</span> imageOutput : <span class=\"type\">AVCaptureStillImageOutput</span>?</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//用于视频缓存</span></div><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">var</span> mediaWriter : <span class=\"type\">PBJMediaWriter</span>?</div><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">var</span> videoPreviewLayer : <span class=\"type\">AVCaptureVideoPreviewLayer</span>?</div></pre></td></tr></table></figure><p>并在代码中初始化</p><p>初始化session:</p><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">session = <span class=\"type\">AVCaptureSession</span>()</div><div class=\"line\">session?.sessionPreset = <span class=\"type\">AVCaptureSessionPreset1280x720</span></div></pre></td></tr></table></figure><p>初始化video相关设备，并与session绑定：</p><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//video</span></div><div class=\"line\">videoCaptureDevice = <span class=\"type\">AVCaptureDevice</span>.defaultDevice(withMediaType: <span class=\"type\">AVMediaTypeVideo</span>)</div><div class=\"line\"><span class=\"keyword\">do</span> &#123;</div><div class=\"line\">        videoDeviceInput = <span class=\"keyword\">try</span> <span class=\"type\">AVCaptureDeviceInput</span>.<span class=\"keyword\">init</span>(device: videoCaptureDevice!)</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> &#123;</div><div class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"initial videoDeviceInput error\"</span>)</div><div class=\"line\">        <span class=\"keyword\">return</span></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//video input</span></div><div class=\"line\"><span class=\"keyword\">if</span> session!.canAddInput(videoDeviceInput!) &#123;</div><div class=\"line\">  <span class=\"comment\">//如果session支持该inputDevice，则添加到session中</span></div><div class=\"line\">    session!.addInput(videoDeviceInput!)</div><div class=\"line\">    videoPreviewLayer?.connection.videoOrientation = .portrait</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure><p>以相同的逻辑初始化audio:</p><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//audio</span></div><div class=\"line\">audioCaptureDevice = <span class=\"type\">AVCaptureDevice</span>.defaultDevice(withMediaType: <span class=\"type\">AVMediaTypeAudio</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">do</span> &#123;</div><div class=\"line\">    audioDeviceInput = <span class=\"keyword\">try</span> <span class=\"type\">AVCaptureDeviceInput</span>.<span class=\"keyword\">init</span>(device: audioCaptureDevice)</div><div class=\"line\">&#125; <span class=\"keyword\">catch</span> &#123;</div><div class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"initial videoDeviceInput error\"</span>)</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//audio input</span></div><div class=\"line\"><span class=\"keyword\">if</span> session!.canAddInput(audioDeviceInput!) &#123;</div><div class=\"line\">    session!.addInput(audioDeviceInput!)</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure><p>该项目中同时又三个输出，即视频，音频和图片：其初始化方法如下：</p><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//video output</span></div><div class=\"line\">videoOutput = <span class=\"type\">AVCaptureVideoDataOutput</span>()</div><div class=\"line\">videoOutput!.videoSettings = [kCVPixelBufferPixelFormatTypeKey <span class=\"keyword\">as</span> <span class=\"type\">String</span> : kCVPixelFormatType_420YpCbCr8BiPlanarFullRange]</div><div class=\"line\">videoOutput!.setSampleBufferDelegate(<span class=\"keyword\">self</span>, queue: queue)</div><div class=\"line\">session!.addOutput(videoOutput)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//audio output</span></div><div class=\"line\">audioOutput = <span class=\"type\">AVCaptureAudioDataOutput</span>()</div><div class=\"line\">audioOutput!.setSampleBufferDelegate(<span class=\"keyword\">self</span>, queue: queue)</div><div class=\"line\">session!.addOutput(audioOutput)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//photo output</span></div><div class=\"line\">imageOutput = <span class=\"type\">AVCaptureStillImageOutput</span>()</div><div class=\"line\">imageOutput!.outputSettings = [<span class=\"type\">AVVideoCodecKey</span> : <span class=\"type\">AVVideoCodecJPEG</span>]</div><div class=\"line\">session!.addOutput(imageOutput)</div></pre></td></tr></table></figure><p>以上代码中，在设置setSampleBufferDelegate，加入了一个queue队列，这是一个串行队列，在vc中初始化如下：</p><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//音频视频输出的串行队列</span></div><div class=\"line\"><span class=\"built_in\">lazy</span> <span class=\"keyword\">private</span> <span class=\"keyword\">var</span> queue : <span class=\"type\">DispatchQueue</span> = &#123;</div><div class=\"line\">    <span class=\"keyword\">let</span> queue = <span class=\"type\">DispatchQueue</span>(label: <span class=\"string\">\"ouputQueue\"</span>)</div><div class=\"line\">    <span class=\"keyword\">return</span> queue</div><div class=\"line\">&#125;()</div></pre></td></tr></table></figure><p>同时，这里使用了一个第三方库用于将拍照或者录制的数据写入硬盘中：</p><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//视频缓存路径</span></div><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">let</span> path : <span class=\"type\">URL</span> = &#123;</div><div class=\"line\"><span class=\"keyword\">let</span> doc = <span class=\"type\">FileManager</span>.<span class=\"keyword\">default</span>.urls(<span class=\"keyword\">for</span>: .documentDirectory, <span class=\"keyword\">in</span>:.userDomainMask).last</div><div class=\"line\"><span class=\"keyword\">let</span> path = doc?.appendingPathComponent(<span class=\"string\">\"recordVideo\"</span>).appendingPathExtension(<span class=\"string\">\"mp4\"</span>)</div><div class=\"line\"><span class=\"keyword\">return</span> path!</div><div class=\"line\">&#125;()</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//用于视频缓存</span></div><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">var</span> mediaWriter : <span class=\"type\">PBJMediaWriter</span>?</div></pre></td></tr></table></figure><p>在代码中设置若干标志位用于记录当前的拍摄状态，并记录录制时间：</p><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//状态</span></div><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">var</span> isRecording : <span class=\"type\">Bool</span> = <span class=\"literal\">false</span> <span class=\"comment\">//录制状态</span></div><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">var</span> isTakePhoto : <span class=\"type\">Bool</span> = <span class=\"literal\">false</span> <span class=\"comment\">//拍照状态</span></div><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">var</span> beginTime : <span class=\"type\">TimeInterval</span>? = <span class=\"literal\">nil</span> <span class=\"comment\">//开始录制时间</span></div><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">var</span> videoWritten : <span class=\"type\">Bool</span> = <span class=\"literal\">false</span> <span class=\"comment\">//记录buffer是否是视</span></div></pre></td></tr></table></figure><p>监听手势，当长按手势大于指定时间时，则判定为录制视频，否则，则是拍照：</p><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//MARK: 手势响应</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">handleLongPress</span><span class=\"params\">(<span class=\"number\">_</span> gesture : UILongPressGestureRecognizer)</span></span> &#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> gesture.state == .began &#123;</div><div class=\"line\">        beginTime = <span class=\"type\">Date</span>().timeIntervalSince1970</div><div class=\"line\">        _startVideo()</div><div class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> gesture.state == .cancelled || gesture.state == .ended &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> <span class=\"type\">Date</span>().timeIntervalSince1970 - beginTime! &lt; minRecordDuration &#123;</div><div class=\"line\">            _takePhoto()</div><div class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">            _endVideo()</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure><p>最核心的就是监听AVCaptureVideoDataOutputSampleBufferDelegate和AVCaptureAudioDataOutputSampleBufferDelegate的回调方法，将数据存入指定的路径中：</p><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//MARK: AVCaptureVideoDataOutputSampleBufferDelegate &amp;&amp; AVCaptureAudioDataOutputSampleBufferDelegate</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">captureOutput</span><span class=\"params\">(<span class=\"number\">_</span> captureOutput: AVCaptureOutput!, didOutputSampleBuffer sampleBuffer: CMSampleBuffer!, from connection: AVCaptureConnection!)</span></span> &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> !<span class=\"type\">CMSampleBufferDataIsReady</span>(sampleBuffer) &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span></div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">// check</span></div><div class=\"line\">        <span class=\"keyword\">if</span> !isRecording ||  mediaWriter == <span class=\"literal\">nil</span> &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span></div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">let</span> isVideo = captureOutput == videoOutput</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">if</span> !isVideo &amp;&amp; !(mediaWriter!.isAudioReady)  &#123;</div><div class=\"line\">            <span class=\"comment\">//audio settings</span></div><div class=\"line\">            <span class=\"number\">_</span> = _setupAudioWithSampleBuffer(sampleBuffer: sampleBuffer)</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">if</span> isVideo &amp;&amp; !(mediaWriter!.isVideoReady) &#123;</div><div class=\"line\">            <span class=\"comment\">//video settings</span></div><div class=\"line\">            <span class=\"number\">_</span> = _setupVideoWithSampleBuffer(sampleBuffer: sampleBuffer)</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">let</span> isReadyToRecord : <span class=\"type\">Bool</span> = mediaWriter!.isAudioReady &amp;&amp; mediaWriter!.isVideoReady</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">if</span> (!isReadyToRecord) &#123;</div><div class=\"line\">            <span class=\"comment\">//需要音频和视频同时准备好</span></div><div class=\"line\">            <span class=\"keyword\">return</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">if</span> isVideo &#123;</div><div class=\"line\">            mediaWriter?.write(sampleBuffer, withMediaTypeVideo: isVideo)</div><div class=\"line\">            videoWritten = <span class=\"literal\">true</span></div><div class=\"line\"></div><div class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> !isVideo &amp;&amp; videoWritten  &#123;</div><div class=\"line\">            mediaWriter?.write(sampleBuffer, withMediaTypeVideo: isVideo)</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure><p>在开启系统设备后，videoOutput和audioOutput都会将数据出入该回调方法，即sampleBuffer。在音频和视频buffer同时准备好了之后，则将该buffer写入指定路径。拍照则使用另外一套逻辑。</p><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">_takePhoto</span><span class=\"params\">()</span></span> &#123;</div><div class=\"line\">        isTakePhoto = <span class=\"literal\">true</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">let</span> videoConnection = imageOutput?.connection(withMediaType: <span class=\"type\">AVMediaTypeVideo</span>);</div><div class=\"line\">        videoConnection?.videoOrientation = .portrait</div><div class=\"line\"></div><div class=\"line\">        imageOutput?.captureStillImageAsynchronously(from: videoConnection!, completionHandler: &#123; (buffer, error) <span class=\"keyword\">in</span></div><div class=\"line\">            <span class=\"keyword\">if</span> error == <span class=\"literal\">nil</span> &#123;</div><div class=\"line\">                <span class=\"keyword\">let</span> imageData = <span class=\"type\">AVCaptureStillImageOutput</span>.jpegStillImageNSDataRepresentation(buffer)</div><div class=\"line\">                <span class=\"keyword\">var</span> image = <span class=\"type\">UIImage</span>(data: imageData!)</div><div class=\"line\">                image = image!.fixOrientation()</div><div class=\"line\">                <span class=\"keyword\">let</span> vc = <span class=\"type\">VisionPreviewViewController</span>()</div><div class=\"line\">                vc.photo = image</div><div class=\"line\">                vc.delegate = <span class=\"keyword\">self</span></div><div class=\"line\">                <span class=\"keyword\">self</span>.navigationController?.pushViewController(vc, animated: <span class=\"literal\">false</span>)</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">        &#125;)</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure><p>利用imageOutput异步获取imageData并转为image格式。</p><h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>利用AVFoundation开发拍摄功能的核心代码已经介绍大致如上，其中还是许多相关细节并没与在文中意义赘述，代码请参考：<a href=\"https://github.com/leoIsAllRight/SwiftDemo/tree/master/SwiftDemo的vision中的相关类。\" target=\"_blank\" rel=\"external\">https://github.com/leoIsAllRight/SwiftDemo/tree/master/SwiftDemo的vision中的相关类。</a></p>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"iOS开发-利用AVFoundation开发仿微信的拍摄功能\"><a href=\"#iOS开发-利用AVFoundation开发仿微信的拍摄功能\" class=\"headerlink\" title=\"iOS开发-利用AVFoundation开发仿微信的拍摄功能\"></a>iOS开发-利用AVFoundation开发仿微信的拍摄功能</h2><h3 id=\"AVFoundation概述\"><a href=\"#AVFoundation概述\" class=\"headerlink\" title=\"AVFoundation概述\"></a>AVFoundation概述</h3><p>AVFoundation是一个可以用来使用和创建基于时间的视听媒体的框架，它提供了一个能使用基于时间的视听数据的详细级别的Objective-C接口。</p><p>你可以用它来：</p><ul><li>检查，创建，编辑或是重新编码媒体文件</li><li>从设备中获取输入流</li><li>在视频实时播放时操作和回放</li></ul><p>AVFoundation框架包含视频相关的APIs和音频相关的API。</p><h3 id=\"开发中要使用的相关的类\"><a href=\"#开发中要使用的相关的类\" class=\"headerlink\" title=\"开发中要使用的相关的类\"></a>开发中要使用的相关的类</h3><ul><li>AVCaptureSession ：是AVFoundation的核心类,用于捕捉视频和音频,协调视频和音频的输入和输出流。</li><li>AVCaptureVideoPreviewLayer：一个核心动画层，当有视频被捕获时，就可以在这上面显示。他是CALayer的子类。</li><li>AVCaptureDevice：可以初始化一个设备，这个设备可以是视频或者音频。你可以使用这个设备配置一些硬件属性。它同时向AVCaptureSession提供输入数据</li><li>AVCaptureDeviceInput：设备输入</li><li>AVCaptureVideoDataOutput: 视频输出</li><li>AVCaptureAudioDataOutput：音频输出</li><li>AVCaptureStillImageOutput：图像输出</li></ul><h3 id=\"项目相关需求\"><a href=\"#项目相关需求\" class=\"headerlink\" title=\"项目相关需求\"></a>项目相关需求</h3><p>​ 同时提供拍照和录制视频功能。单击拍摄按钮为拍照功能，长按则直接录制视频。</p><h3 id=\"code\"><a href=\"#code\" class=\"headerlink\" title=\"code\"></a>code</h3><p>​ 在vc(ViewController，一下ViewController均简称vc)中定义如下与AVFoundation相关的属性:</p><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//会话</span></div><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">var</span> session : <span class=\"type\">AVCaptureSession</span>?</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//视频音频设备</span></div><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">var</span> videoCaptureDevice : <span class=\"type\">AVCaptureDevice</span>?</div><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">var</span> audioCaptureDevice : <span class=\"type\">AVCaptureDevice</span>?</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//视频音频输入</span></div><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">var</span> videoDeviceInput : <span class=\"type\">AVCaptureDeviceInput</span>?</div><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">var</span> audioDeviceInput : <span class=\"type\">AVCaptureDeviceInput</span>?</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//视频音频照片输出</span></div><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">var</span> videoOutput : <span class=\"type\">AVCaptureVideoDataOutput</span>?</div><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">var</span> audioOutput : <span class=\"type\">AVCaptureAudioDataOutput</span>?</div><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">var</span> imageOutput : <span class=\"type\">AVCaptureStillImageOutput</span>?</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//用于视频缓存</span></div><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">var</span> mediaWriter : <span class=\"type\">PBJMediaWriter</span>?</div><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">var</span> videoPreviewLayer : <span class=\"type\">AVCaptureVideoPreviewLayer</span>?</div></pre></td></tr></table></figure><p>并在代码中初始化</p><p>初始化session:</p><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">session = <span class=\"type\">AVCaptureSession</span>()</div><div class=\"line\">session?.sessionPreset = <span class=\"type\">AVCaptureSessionPreset1280x720</span></div></pre></td></tr></table></figure><p>初始化video相关设备，并与session绑定：</p><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//video</span></div><div class=\"line\">videoCaptureDevice = <span class=\"type\">AVCaptureDevice</span>.defaultDevice(withMediaType: <span class=\"type\">AVMediaTypeVideo</span>)</div><div class=\"line\"><span class=\"keyword\">do</span> &#123;</div><div class=\"line\">        videoDeviceInput = <span class=\"keyword\">try</span> <span class=\"type\">AVCaptureDeviceInput</span>.<span class=\"keyword\">init</span>(device: videoCaptureDevice!)</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> &#123;</div><div class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"initial videoDeviceInput error\"</span>)</div><div class=\"line\">        <span class=\"keyword\">return</span></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//video input</span></div><div class=\"line\"><span class=\"keyword\">if</span> session!.canAddInput(videoDeviceInput!) &#123;</div><div class=\"line\">  <span class=\"comment\">//如果session支持该inputDevice，则添加到session中</span></div><div class=\"line\">    session!.addInput(videoDeviceInput!)</div><div class=\"line\">    videoPreviewLayer?.connection.videoOrientation = .portrait</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure><p>以相同的逻辑初始化audio:</p><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//audio</span></div><div class=\"line\">audioCaptureDevice = <span class=\"type\">AVCaptureDevice</span>.defaultDevice(withMediaType: <span class=\"type\">AVMediaTypeAudio</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">do</span> &#123;</div><div class=\"line\">    audioDeviceInput = <span class=\"keyword\">try</span> <span class=\"type\">AVCaptureDeviceInput</span>.<span class=\"keyword\">init</span>(device: audioCaptureDevice)</div><div class=\"line\">&#125; <span class=\"keyword\">catch</span> &#123;</div><div class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"initial videoDeviceInput error\"</span>)</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//audio input</span></div><div class=\"line\"><span class=\"keyword\">if</span> session!.canAddInput(audioDeviceInput!) &#123;</div><div class=\"line\">    session!.addInput(audioDeviceInput!)</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure><p>该项目中同时又三个输出，即视频，音频和图片：其初始化方法如下：</p><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//video output</span></div><div class=\"line\">videoOutput = <span class=\"type\">AVCaptureVideoDataOutput</span>()</div><div class=\"line\">videoOutput!.videoSettings = [kCVPixelBufferPixelFormatTypeKey <span class=\"keyword\">as</span> <span class=\"type\">String</span> : kCVPixelFormatType_420YpCbCr8BiPlanarFullRange]</div><div class=\"line\">videoOutput!.setSampleBufferDelegate(<span class=\"keyword\">self</span>, queue: queue)</div><div class=\"line\">session!.addOutput(videoOutput)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//audio output</span></div><div class=\"line\">audioOutput = <span class=\"type\">AVCaptureAudioDataOutput</span>()</div><div class=\"line\">audioOutput!.setSampleBufferDelegate(<span class=\"keyword\">self</span>, queue: queue)</div><div class=\"line\">session!.addOutput(audioOutput)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//photo output</span></div><div class=\"line\">imageOutput = <span class=\"type\">AVCaptureStillImageOutput</span>()</div><div class=\"line\">imageOutput!.outputSettings = [<span class=\"type\">AVVideoCodecKey</span> : <span class=\"type\">AVVideoCodecJPEG</span>]</div><div class=\"line\">session!.addOutput(imageOutput)</div></pre></td></tr></table></figure><p>以上代码中，在设置setSampleBufferDelegate，加入了一个queue队列，这是一个串行队列，在vc中初始化如下：</p><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//音频视频输出的串行队列</span></div><div class=\"line\"><span class=\"built_in\">lazy</span> <span class=\"keyword\">private</span> <span class=\"keyword\">var</span> queue : <span class=\"type\">DispatchQueue</span> = &#123;</div><div class=\"line\">    <span class=\"keyword\">let</span> queue = <span class=\"type\">DispatchQueue</span>(label: <span class=\"string\">\"ouputQueue\"</span>)</div><div class=\"line\">    <span class=\"keyword\">return</span> queue</div><div class=\"line\">&#125;()</div></pre></td></tr></table></figure><p>同时，这里使用了一个第三方库用于将拍照或者录制的数据写入硬盘中：</p><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//视频缓存路径</span></div><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">let</span> path : <span class=\"type\">URL</span> = &#123;</div><div class=\"line\"><span class=\"keyword\">let</span> doc = <span class=\"type\">FileManager</span>.<span class=\"keyword\">default</span>.urls(<span class=\"keyword\">for</span>: .documentDirectory, <span class=\"keyword\">in</span>:.userDomainMask).last</div><div class=\"line\"><span class=\"keyword\">let</span> path = doc?.appendingPathComponent(<span class=\"string\">\"recordVideo\"</span>).appendingPathExtension(<span class=\"string\">\"mp4\"</span>)</div><div class=\"line\"><span class=\"keyword\">return</span> path!</div><div class=\"line\">&#125;()</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//用于视频缓存</span></div><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">var</span> mediaWriter : <span class=\"type\">PBJMediaWriter</span>?</div></pre></td></tr></table></figure><p>在代码中设置若干标志位用于记录当前的拍摄状态，并记录录制时间：</p><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//状态</span></div><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">var</span> isRecording : <span class=\"type\">Bool</span> = <span class=\"literal\">false</span> <span class=\"comment\">//录制状态</span></div><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">var</span> isTakePhoto : <span class=\"type\">Bool</span> = <span class=\"literal\">false</span> <span class=\"comment\">//拍照状态</span></div><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">var</span> beginTime : <span class=\"type\">TimeInterval</span>? = <span class=\"literal\">nil</span> <span class=\"comment\">//开始录制时间</span></div><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">var</span> videoWritten : <span class=\"type\">Bool</span> = <span class=\"literal\">false</span> <span class=\"comment\">//记录buffer是否是视</span></div></pre></td></tr></table></figure><p>监听手势，当长按手势大于指定时间时，则判定为录制视频，否则，则是拍照：</p><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//MARK: 手势响应</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">handleLongPress</span><span class=\"params\">(<span class=\"number\">_</span> gesture : UILongPressGestureRecognizer)</span></span> &#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> gesture.state == .began &#123;</div><div class=\"line\">        beginTime = <span class=\"type\">Date</span>().timeIntervalSince1970</div><div class=\"line\">        _startVideo()</div><div class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> gesture.state == .cancelled || gesture.state == .ended &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> <span class=\"type\">Date</span>().timeIntervalSince1970 - beginTime! &lt; minRecordDuration &#123;</div><div class=\"line\">            _takePhoto()</div><div class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">            _endVideo()</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure><p>最核心的就是监听AVCaptureVideoDataOutputSampleBufferDelegate和AVCaptureAudioDataOutputSampleBufferDelegate的回调方法，将数据存入指定的路径中：</p><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//MARK: AVCaptureVideoDataOutputSampleBufferDelegate &amp;&amp; AVCaptureAudioDataOutputSampleBufferDelegate</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">captureOutput</span><span class=\"params\">(<span class=\"number\">_</span> captureOutput: AVCaptureOutput!, didOutputSampleBuffer sampleBuffer: CMSampleBuffer!, from connection: AVCaptureConnection!)</span></span> &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> !<span class=\"type\">CMSampleBufferDataIsReady</span>(sampleBuffer) &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span></div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">// check</span></div><div class=\"line\">        <span class=\"keyword\">if</span> !isRecording ||  mediaWriter == <span class=\"literal\">nil</span> &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span></div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">let</span> isVideo = captureOutput == videoOutput</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">if</span> !isVideo &amp;&amp; !(mediaWriter!.isAudioReady)  &#123;</div><div class=\"line\">            <span class=\"comment\">//audio settings</span></div><div class=\"line\">            <span class=\"number\">_</span> = _setupAudioWithSampleBuffer(sampleBuffer: sampleBuffer)</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">if</span> isVideo &amp;&amp; !(mediaWriter!.isVideoReady) &#123;</div><div class=\"line\">            <span class=\"comment\">//video settings</span></div><div class=\"line\">            <span class=\"number\">_</span> = _setupVideoWithSampleBuffer(sampleBuffer: sampleBuffer)</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">let</span> isReadyToRecord : <span class=\"type\">Bool</span> = mediaWriter!.isAudioReady &amp;&amp; mediaWriter!.isVideoReady</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">if</span> (!isReadyToRecord) &#123;</div><div class=\"line\">            <span class=\"comment\">//需要音频和视频同时准备好</span></div><div class=\"line\">            <span class=\"keyword\">return</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">if</span> isVideo &#123;</div><div class=\"line\">            mediaWriter?.write(sampleBuffer, withMediaTypeVideo: isVideo)</div><div class=\"line\">            videoWritten = <span class=\"literal\">true</span></div><div class=\"line\"></div><div class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> !isVideo &amp;&amp; videoWritten  &#123;</div><div class=\"line\">            mediaWriter?.write(sampleBuffer, withMediaTypeVideo: isVideo)</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure><p>在开启系统设备后，videoOutput和audioOutput都会将数据出入该回调方法，即sampleBuffer。在音频和视频buffer同时准备好了之后，则将该buffer写入指定路径。拍照则使用另外一套逻辑。</p><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">_takePhoto</span><span class=\"params\">()</span></span> &#123;</div><div class=\"line\">        isTakePhoto = <span class=\"literal\">true</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">let</span> videoConnection = imageOutput?.connection(withMediaType: <span class=\"type\">AVMediaTypeVideo</span>);</div><div class=\"line\">        videoConnection?.videoOrientation = .portrait</div><div class=\"line\"></div><div class=\"line\">        imageOutput?.captureStillImageAsynchronously(from: videoConnection!, completionHandler: &#123; (buffer, error) <span class=\"keyword\">in</span></div><div class=\"line\">            <span class=\"keyword\">if</span> error == <span class=\"literal\">nil</span> &#123;</div><div class=\"line\">                <span class=\"keyword\">let</span> imageData = <span class=\"type\">AVCaptureStillImageOutput</span>.jpegStillImageNSDataRepresentation(buffer)</div><div class=\"line\">                <span class=\"keyword\">var</span> image = <span class=\"type\">UIImage</span>(data: imageData!)</div><div class=\"line\">                image = image!.fixOrientation()</div><div class=\"line\">                <span class=\"keyword\">let</span> vc = <span class=\"type\">VisionPreviewViewController</span>()</div><div class=\"line\">                vc.photo = image</div><div class=\"line\">                vc.delegate = <span class=\"keyword\">self</span></div><div class=\"line\">                <span class=\"keyword\">self</span>.navigationController?.pushViewController(vc, animated: <span class=\"literal\">false</span>)</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">        &#125;)</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure><p>利用imageOutput异步获取imageData并转为image格式。</p><h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>利用AVFoundation开发拍摄功能的核心代码已经介绍大致如上，其中还是许多相关细节并没与在文中意义赘述，代码请参考：<a href=\"https://github.com/leoIsAllRight/SwiftDemo/tree/master/SwiftDemo的vision中的相关类。\" target=\"_blank\" rel=\"external\">https://github.com/leoIsAllRight/SwiftDemo/tree/master/SwiftDemo的vision中的相关类。</a></p>"},{"title":"资源导航整理","date":"2017-09-19T16:52:35.000Z","author":{"name":"悔惜晟","link":"http://huixisheng.github.io"},"_content":"\n\n## 导航 ##\n- [站酷 (ZCOOL) - 设计师互动平台](http://www.zcool.com.cn/)\n- [优设-UISDC: 优秀网页设计联盟-SDC-网页设计师交流平台-听讲座，聊设计，找素材，尽在优设网](http://www.uisdc.com/)\n- [E设计平台-网页设计，设计交流，界面设计，酷站欣赏](http://www.uehtml.com/)\n\n\n## 高清图片资源 ##\n\n- https://pixabay.com/\n- http://www.gratisography.com/\n- https://picjumbo.com/\n- https://unsplash.com/\n- http://publicdomainarchive.com/\n- https://marketplace.500px.com\n","source":"_posts/source-nav.md","raw":"---\ntitle: 资源导航整理\ndate: 2017-09-20 00:52:35\nauthor:\n  name: 悔惜晟\n  link: http://huixisheng.github.io\ntags:\n- 资源\n---\n\n\n## 导航 ##\n- [站酷 (ZCOOL) - 设计师互动平台](http://www.zcool.com.cn/)\n- [优设-UISDC: 优秀网页设计联盟-SDC-网页设计师交流平台-听讲座，聊设计，找素材，尽在优设网](http://www.uisdc.com/)\n- [E设计平台-网页设计，设计交流，界面设计，酷站欣赏](http://www.uehtml.com/)\n\n\n## 高清图片资源 ##\n\n- https://pixabay.com/\n- http://www.gratisography.com/\n- https://picjumbo.com/\n- https://unsplash.com/\n- http://publicdomainarchive.com/\n- https://marketplace.500px.com\n","slug":"source-nav","published":1,"updated":"2017-09-20T16:52:12.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9cutioe000rds9l7oktl428","content":"<h2 id=\"导航\"><a href=\"#导航\" class=\"headerlink\" title=\"导航\"></a>导航</h2><ul><li><a href=\"http://www.zcool.com.cn/\" target=\"_blank\" rel=\"external\">站酷 (ZCOOL) - 设计师互动平台</a></li><li><a href=\"http://www.uisdc.com/\" target=\"_blank\" rel=\"external\">优设-UISDC: 优秀网页设计联盟-SDC-网页设计师交流平台-听讲座，聊设计，找素材，尽在优设网</a></li><li><a href=\"http://www.uehtml.com/\" target=\"_blank\" rel=\"external\">E设计平台-网页设计，设计交流，界面设计，酷站欣赏</a></li></ul><h2 id=\"高清图片资源\"><a href=\"#高清图片资源\" class=\"headerlink\" title=\"高清图片资源\"></a>高清图片资源</h2><ul><li><a href=\"https://pixabay.com/\" target=\"_blank\" rel=\"external\">https://pixabay.com/</a></li><li><a href=\"http://www.gratisography.com/\" target=\"_blank\" rel=\"external\">http://www.gratisography.com/</a></li><li><a href=\"https://picjumbo.com/\" target=\"_blank\" rel=\"external\">https://picjumbo.com/</a></li><li><a href=\"https://unsplash.com/\" target=\"_blank\" rel=\"external\">https://unsplash.com/</a></li><li><a href=\"http://publicdomainarchive.com/\" target=\"_blank\" rel=\"external\">http://publicdomainarchive.com/</a></li><li><a href=\"https://marketplace.500px.com\" target=\"_blank\" rel=\"external\">https://marketplace.500px.com</a></li></ul>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"导航\"><a href=\"#导航\" class=\"headerlink\" title=\"导航\"></a>导航</h2><ul><li><a href=\"http://www.zcool.com.cn/\" target=\"_blank\" rel=\"external\">站酷 (ZCOOL) - 设计师互动平台</a></li><li><a href=\"http://www.uisdc.com/\" target=\"_blank\" rel=\"external\">优设-UISDC: 优秀网页设计联盟-SDC-网页设计师交流平台-听讲座，聊设计，找素材，尽在优设网</a></li><li><a href=\"http://www.uehtml.com/\" target=\"_blank\" rel=\"external\">E设计平台-网页设计，设计交流，界面设计，酷站欣赏</a></li></ul><h2 id=\"高清图片资源\"><a href=\"#高清图片资源\" class=\"headerlink\" title=\"高清图片资源\"></a>高清图片资源</h2><ul><li><a href=\"https://pixabay.com/\" target=\"_blank\" rel=\"external\">https://pixabay.com/</a></li><li><a href=\"http://www.gratisography.com/\" target=\"_blank\" rel=\"external\">http://www.gratisography.com/</a></li><li><a href=\"https://picjumbo.com/\" target=\"_blank\" rel=\"external\">https://picjumbo.com/</a></li><li><a href=\"https://unsplash.com/\" target=\"_blank\" rel=\"external\">https://unsplash.com/</a></li><li><a href=\"http://publicdomainarchive.com/\" target=\"_blank\" rel=\"external\">http://publicdomainarchive.com/</a></li><li><a href=\"https://marketplace.500px.com\" target=\"_blank\" rel=\"external\">https://marketplace.500px.com</a></li></ul>"},{"title":"软件测试基础整理","date":"2017-10-26T16:00:00.000Z","author":{"name":"family"},"_content":"\napp测试做了一年，既然要写博客，开篇就来整理一下软件测试的基础知识，回顾巩固一下。本篇博客有借鉴也有自己的想法，希望可以多交流交流\n\n## 什么是软件测试 \n\n  对我来说，最好记，最合理的解释是：`软件测试是一种实际输出与预期输出之间的审核或者比较过程，使用人工操作或软件自动运行的方式`（百度百科的定义）。为什么这么说呢，因为`bug描述有4要素：前提条件，操作步骤，预期结果，当前结果`，也对应了测试用例中的要素点，举个例子，这样描述bug显得条理清楚，有木有？\n>  bug描述：\n> 前提：删除的评论在热门评论中\n> 操作：所有评论页面，点击‘删除’按钮\n> 预期结果：热门评论和最新评论中的评论都被删除\n> 当前结果：仅最新评论中的被删除\n\n## 软件测试的目的\n  就我的理解，软件测试的目的是：1.测试开发的功能是否符合需求，因为需求文档就是你测试的标准，不符合的就是bug；2.确认软件的质量\n常规解释：测试的目的是为了发现尽可能多的bug，成功的测试在于发现了迄今尚未发现的bug，保证软件的质量；\n功能测试完成后，以用户的身份来运行app，看功能是否符合使用规范，使用起来是否方便，用户使用app无非就是图个实用或者interesting，可以将自己的使用心得告诉产品经理，作为参考。\n\n## 软件测试的过程\n\n总结起来，也是4个步骤：需求评审--设计用例--用例测试--bug提交及验证\n- 需求评审：因为我不需要参加需求讨论，所以这一步对我来说就是“啃”需求文档，需求了解的越深，测试时考虑的会更多更全面；不同公司会有不同的规定，但殊途同归，这一步的目的都是读懂需求，知道你的测试标准；\n- 设计用例：根据需求分析，利用等价类划分法等方法设计用例，尽可能的覆盖可能发生的情况；\n- 用例测试：根据测试用例测试已开发的功能；\n- bug提交及验证：上边已经说了，bug描述有4个要素点:前提条件，操作步骤，预期结果，当前结果，提交的bug让开发能看懂就算是成功了；验证bug后记得修改bug状态，修改好了就关闭，仍有bug就重新打开并修改bug描述。\n\n## 测试用例二三事！\n\n### 1.bug管理工具\n\n刚开始使用的平台是我们后台自主开发的QC平台，因为要升级，目前使用的是蒲公英的tracup平台\n界面如下：\n\n![tracup](/images/test_pic/tracup.jpeg)\n要素点已在上图标注,不管是什么平台，要素点都是一样的：项目名称、问题类型（一般为bug）、主题、bug描述、优先级、版本号、指派人\n\n### 2.测试用例编写规范 \n\n刚开始编写测试用例时，只有一个模板，怎么写只能靠自己摸索，推荐几篇短小但是切合实际工作的\n[手机app测试记录一](http://blog.csdn.net/xiaofuruo/article/details/41750161)\n[输入框常见bug](http://www.jianshu.com/p/86f2f22cbe99?utm_campaign=hugo&utm_medium=reader_share&utm_content=note&utm_source=weixin-friends)\n[测试用例规范](http://www.cnblogs.com/m317/p/6274093.html)\n\n以下是摘抄的与我的测试过程相关的\n\n1. 初始化测试用例\n   进入功能模块（页面）后，某些空间会初始化填入数据，生成一个用例确保所有的初始数据正确。\n\n![1](/images/test_pic/1.jpeg)\n\n2. 边界的测试用例\n   每个数据项，生成一个边界用例（含最大／最小两个边界值）\n   字符串数据以字符串长度为计量单位\n   布尔值数据的所有取值都需测试\n   多个复选框一组时，需测同时被选中及都不被选中\n   下拉菜单、列表框、单选按钮组为最大、最小的2个取值\n3. 空值的测试用例\n   对于每个必填数据项，（不提供空值的除外）都生成一个用例，则预期结果提示该数据项为空。\n\n![23](/images/test_pic/23.jpeg)\n\n4. 格式错误的测试用例\n   对于输入框数据项，都生成一个用例，预期结果提示该数据项格式错误\n   日期／数字／字符串输入框\n   Email、邮编、用户名等带格式要求\n5. 溢出的测试用例\n   对于输入框数据项，都生成一个取值范围外的测试用例，预期结果提示该数据项超出范围\n   日期输入框：需添加上边界日期小于下边界日期的用例\n   数字输入框：如‘金额’一般为正整数，填入一个负数\n   字符串输入框：超出规定长度的字符串\n6. 关联的测试用例\n   对于相互关联的两个或多个数据项，生成一个用例，确保当一个数据项改变时，其它数据项的变化正确。\n7. 唯一值的测试用例\n   某些业务的数据字段要求是唯一的，生成一个或两个用例（新建，编辑），使得输入数据与原有数据在该字段重复，预期结果为返回该数据已存在的提示\n\n![7](/images/test_pic/7.jpeg)\n\n8. 权限不足的测试用例\n   对于功能模块，生成一个用例，以没有权限的用户身份访问，预期结果为提示权限不足\n9. 角色全新的测试用例\n   业务功能流程涉及一到多个角色，对于每个角色，都生成一个用例，预期结果为用户以这个角色登录时，他仅能执行权限允许的操作。\n\n### 测试用例设计方法 \n\n黑盒测试常用设计方法：等价类划分法、边界值分析法、错误猜测法、因果图法\n\n#### 等价类划分法\n\n>等价类划分法是把所有可能输入的数据，即程序的输入域划分为若干部分（子集），然后从每个子集中选取少数具有代表性的数据作为测试用例\n- 等价类分为：有效等价类和无效等价类\n- 有效等价类：指对程序的规格说明来说是合理的、有意义的输入数据的集合\n- 无效等价类：指对程序的规格说明来说是不合理的或无意义的输入数据的集合。无效等价类可能有1个或多个\n\n转化为测试用例：\n在确立了等价类后，可建立等价类表，列出所有划分出的等价类输入条件：有效等价类、无效等价类，然后从划分出的等价类中按一下三个原则设计测试用例：\n1. 为每个等价类规定一个唯一编号；\n2. 设计一个新的测试用例，使其`尽可能多地覆盖`尚未被覆盖的有效等价类，重复这一步，直到所有的有效等价类都被覆盖为止；\n3. 设计一个新的测试用例，使其`仅覆盖一个`尚未被覆盖的无效等价类，重复这一步，直到所有的无效等价类都被覆盖为止。\n\n例如：输入密码的测试用例\n在我们的app中，密码个数规定要输入6-16位，则可以列出一个不等式：6<=x<=16\n有效等价类为：[6，16]\n无效等价类为：[0，6），（16，无穷）\n等价类判断出来后就是选择代表性的数据来写测试用例，通常代表性的数据与边界值有关，选取正好等于，刚刚大于或刚刚小于边界的值作为测试数据。\n最后选择的数据为：0，5，6，17\n则测试用例为：密码为0/5/6/17位数的测试\n\n\n#### 边界值分析法\n\n>边界值分析法就是`对输入或输出边界值进行测试`的一种黑盒测试方法。该方法通常作为等价类划分法的补充，这种情况下，其测试用例来自等价类的边界\n\n学习边界值的时候顺便了解一下[什么是上点，内点，离点](http://yzylion.blog.163.com/blog/static/89406994200892784325898/)\n\n#### 因果图法\n\n>因果图法适合`输入域较多而输入域之间又存在互相影响的关系`。\n>因果图法就是找出输入因子以及其间的影响关系，确定每组输入因子所应输出的结果，画出`因果图`，转换成`判定表`，然后生成测试用例的一个测试方法\n\n因果关系：恒等、与或非逻辑关系，\n因之间的约束关系：逻辑异、逻辑或、唯一关系、限制关系、要求关系，具体可以参考这篇文章：[实例介绍因果图法](http://blog.sina.com.cn/s/blog_560ddb8501000a9c.html)\n\n\n#### 错误推测法 ###\n>错误推测法是`基于经验和直觉`推测程序中所有可能存在的各种错误，从而有针对性的设计测试用例的方法\n\n所以使用错误推测法的前提就是经验的积累！\n\n#### 测试方法实例\n\n一个功能的测试用例大多会涉及多个方法，例如：我们app的密码登录\n\n![登录](/images/test_pic/%E7%99%BB%E5%BD%95.jpeg)\n\n首先要了解登录相关需求，在这只显示一下填写规则，从规则中总结输入条件\n![填写规则](/images/test_pic/%E5%A1%AB%E5%86%99%E8%A7%84%E5%88%99.jpeg)\n\n输入不同的手机号和密码，点击登录，会有不同的toast显示，所以结果有很多，先确定一下手机号和密码的关系：手机号格式正确后才会对密码做判断，所以联系如下图：\n![联系](/images/test_pic/%E8%81%94%E7%B3%BB.jpeg)\n\n大关系确定后就要扣小细节了，根据边界值法和等价类分界法，手机号和密码分别设计测试用例可以分为以下几种情况：\n\n![代表数据](/images/test_pic/%E4%BB%A3%E8%A1%A8%E6%95%B0%E6%8D%AE.jpeg)\n\n接下来就是设计用例的总结，根据手机号密码联系图，\n第一列可设计1个测试用例，\n第三列仅看手机号就可以，0个手机号可归到第一个测试用例，所以这一列可以设置3个测试用例\n第四列就有点复杂了，不过因为判断密码的前提是手机号有效，所以范围又缩小了，这一块可以做个判定表，然后删除冗余的，这个也不难，所以我就不做了，最后的测试用例如下：\n\n![测试用例](/images/test_pic/%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B.jpeg)\n\n基础知识就回顾到这，希望大家可以多多交流，如果有说的不对的地方，尽情回复！","source":"_posts/software-test-basis.md","raw":"---\ntitle: 软件测试基础整理\ndate: 2017-10-27\nauthor:\n  name: family\ntags:\n- 测试\n---\n\napp测试做了一年，既然要写博客，开篇就来整理一下软件测试的基础知识，回顾巩固一下。本篇博客有借鉴也有自己的想法，希望可以多交流交流\n\n## 什么是软件测试 \n\n  对我来说，最好记，最合理的解释是：`软件测试是一种实际输出与预期输出之间的审核或者比较过程，使用人工操作或软件自动运行的方式`（百度百科的定义）。为什么这么说呢，因为`bug描述有4要素：前提条件，操作步骤，预期结果，当前结果`，也对应了测试用例中的要素点，举个例子，这样描述bug显得条理清楚，有木有？\n>  bug描述：\n> 前提：删除的评论在热门评论中\n> 操作：所有评论页面，点击‘删除’按钮\n> 预期结果：热门评论和最新评论中的评论都被删除\n> 当前结果：仅最新评论中的被删除\n\n## 软件测试的目的\n  就我的理解，软件测试的目的是：1.测试开发的功能是否符合需求，因为需求文档就是你测试的标准，不符合的就是bug；2.确认软件的质量\n常规解释：测试的目的是为了发现尽可能多的bug，成功的测试在于发现了迄今尚未发现的bug，保证软件的质量；\n功能测试完成后，以用户的身份来运行app，看功能是否符合使用规范，使用起来是否方便，用户使用app无非就是图个实用或者interesting，可以将自己的使用心得告诉产品经理，作为参考。\n\n## 软件测试的过程\n\n总结起来，也是4个步骤：需求评审--设计用例--用例测试--bug提交及验证\n- 需求评审：因为我不需要参加需求讨论，所以这一步对我来说就是“啃”需求文档，需求了解的越深，测试时考虑的会更多更全面；不同公司会有不同的规定，但殊途同归，这一步的目的都是读懂需求，知道你的测试标准；\n- 设计用例：根据需求分析，利用等价类划分法等方法设计用例，尽可能的覆盖可能发生的情况；\n- 用例测试：根据测试用例测试已开发的功能；\n- bug提交及验证：上边已经说了，bug描述有4个要素点:前提条件，操作步骤，预期结果，当前结果，提交的bug让开发能看懂就算是成功了；验证bug后记得修改bug状态，修改好了就关闭，仍有bug就重新打开并修改bug描述。\n\n## 测试用例二三事！\n\n### 1.bug管理工具\n\n刚开始使用的平台是我们后台自主开发的QC平台，因为要升级，目前使用的是蒲公英的tracup平台\n界面如下：\n\n![tracup](/images/test_pic/tracup.jpeg)\n要素点已在上图标注,不管是什么平台，要素点都是一样的：项目名称、问题类型（一般为bug）、主题、bug描述、优先级、版本号、指派人\n\n### 2.测试用例编写规范 \n\n刚开始编写测试用例时，只有一个模板，怎么写只能靠自己摸索，推荐几篇短小但是切合实际工作的\n[手机app测试记录一](http://blog.csdn.net/xiaofuruo/article/details/41750161)\n[输入框常见bug](http://www.jianshu.com/p/86f2f22cbe99?utm_campaign=hugo&utm_medium=reader_share&utm_content=note&utm_source=weixin-friends)\n[测试用例规范](http://www.cnblogs.com/m317/p/6274093.html)\n\n以下是摘抄的与我的测试过程相关的\n\n1. 初始化测试用例\n   进入功能模块（页面）后，某些空间会初始化填入数据，生成一个用例确保所有的初始数据正确。\n\n![1](/images/test_pic/1.jpeg)\n\n2. 边界的测试用例\n   每个数据项，生成一个边界用例（含最大／最小两个边界值）\n   字符串数据以字符串长度为计量单位\n   布尔值数据的所有取值都需测试\n   多个复选框一组时，需测同时被选中及都不被选中\n   下拉菜单、列表框、单选按钮组为最大、最小的2个取值\n3. 空值的测试用例\n   对于每个必填数据项，（不提供空值的除外）都生成一个用例，则预期结果提示该数据项为空。\n\n![23](/images/test_pic/23.jpeg)\n\n4. 格式错误的测试用例\n   对于输入框数据项，都生成一个用例，预期结果提示该数据项格式错误\n   日期／数字／字符串输入框\n   Email、邮编、用户名等带格式要求\n5. 溢出的测试用例\n   对于输入框数据项，都生成一个取值范围外的测试用例，预期结果提示该数据项超出范围\n   日期输入框：需添加上边界日期小于下边界日期的用例\n   数字输入框：如‘金额’一般为正整数，填入一个负数\n   字符串输入框：超出规定长度的字符串\n6. 关联的测试用例\n   对于相互关联的两个或多个数据项，生成一个用例，确保当一个数据项改变时，其它数据项的变化正确。\n7. 唯一值的测试用例\n   某些业务的数据字段要求是唯一的，生成一个或两个用例（新建，编辑），使得输入数据与原有数据在该字段重复，预期结果为返回该数据已存在的提示\n\n![7](/images/test_pic/7.jpeg)\n\n8. 权限不足的测试用例\n   对于功能模块，生成一个用例，以没有权限的用户身份访问，预期结果为提示权限不足\n9. 角色全新的测试用例\n   业务功能流程涉及一到多个角色，对于每个角色，都生成一个用例，预期结果为用户以这个角色登录时，他仅能执行权限允许的操作。\n\n### 测试用例设计方法 \n\n黑盒测试常用设计方法：等价类划分法、边界值分析法、错误猜测法、因果图法\n\n#### 等价类划分法\n\n>等价类划分法是把所有可能输入的数据，即程序的输入域划分为若干部分（子集），然后从每个子集中选取少数具有代表性的数据作为测试用例\n- 等价类分为：有效等价类和无效等价类\n- 有效等价类：指对程序的规格说明来说是合理的、有意义的输入数据的集合\n- 无效等价类：指对程序的规格说明来说是不合理的或无意义的输入数据的集合。无效等价类可能有1个或多个\n\n转化为测试用例：\n在确立了等价类后，可建立等价类表，列出所有划分出的等价类输入条件：有效等价类、无效等价类，然后从划分出的等价类中按一下三个原则设计测试用例：\n1. 为每个等价类规定一个唯一编号；\n2. 设计一个新的测试用例，使其`尽可能多地覆盖`尚未被覆盖的有效等价类，重复这一步，直到所有的有效等价类都被覆盖为止；\n3. 设计一个新的测试用例，使其`仅覆盖一个`尚未被覆盖的无效等价类，重复这一步，直到所有的无效等价类都被覆盖为止。\n\n例如：输入密码的测试用例\n在我们的app中，密码个数规定要输入6-16位，则可以列出一个不等式：6<=x<=16\n有效等价类为：[6，16]\n无效等价类为：[0，6），（16，无穷）\n等价类判断出来后就是选择代表性的数据来写测试用例，通常代表性的数据与边界值有关，选取正好等于，刚刚大于或刚刚小于边界的值作为测试数据。\n最后选择的数据为：0，5，6，17\n则测试用例为：密码为0/5/6/17位数的测试\n\n\n#### 边界值分析法\n\n>边界值分析法就是`对输入或输出边界值进行测试`的一种黑盒测试方法。该方法通常作为等价类划分法的补充，这种情况下，其测试用例来自等价类的边界\n\n学习边界值的时候顺便了解一下[什么是上点，内点，离点](http://yzylion.blog.163.com/blog/static/89406994200892784325898/)\n\n#### 因果图法\n\n>因果图法适合`输入域较多而输入域之间又存在互相影响的关系`。\n>因果图法就是找出输入因子以及其间的影响关系，确定每组输入因子所应输出的结果，画出`因果图`，转换成`判定表`，然后生成测试用例的一个测试方法\n\n因果关系：恒等、与或非逻辑关系，\n因之间的约束关系：逻辑异、逻辑或、唯一关系、限制关系、要求关系，具体可以参考这篇文章：[实例介绍因果图法](http://blog.sina.com.cn/s/blog_560ddb8501000a9c.html)\n\n\n#### 错误推测法 ###\n>错误推测法是`基于经验和直觉`推测程序中所有可能存在的各种错误，从而有针对性的设计测试用例的方法\n\n所以使用错误推测法的前提就是经验的积累！\n\n#### 测试方法实例\n\n一个功能的测试用例大多会涉及多个方法，例如：我们app的密码登录\n\n![登录](/images/test_pic/%E7%99%BB%E5%BD%95.jpeg)\n\n首先要了解登录相关需求，在这只显示一下填写规则，从规则中总结输入条件\n![填写规则](/images/test_pic/%E5%A1%AB%E5%86%99%E8%A7%84%E5%88%99.jpeg)\n\n输入不同的手机号和密码，点击登录，会有不同的toast显示，所以结果有很多，先确定一下手机号和密码的关系：手机号格式正确后才会对密码做判断，所以联系如下图：\n![联系](/images/test_pic/%E8%81%94%E7%B3%BB.jpeg)\n\n大关系确定后就要扣小细节了，根据边界值法和等价类分界法，手机号和密码分别设计测试用例可以分为以下几种情况：\n\n![代表数据](/images/test_pic/%E4%BB%A3%E8%A1%A8%E6%95%B0%E6%8D%AE.jpeg)\n\n接下来就是设计用例的总结，根据手机号密码联系图，\n第一列可设计1个测试用例，\n第三列仅看手机号就可以，0个手机号可归到第一个测试用例，所以这一列可以设置3个测试用例\n第四列就有点复杂了，不过因为判断密码的前提是手机号有效，所以范围又缩小了，这一块可以做个判定表，然后删除冗余的，这个也不难，所以我就不做了，最后的测试用例如下：\n\n![测试用例](/images/test_pic/%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B.jpeg)\n\n基础知识就回顾到这，希望大家可以多多交流，如果有说的不对的地方，尽情回复！","slug":"software-test-basis","published":1,"updated":"2017-10-27T07:58:02.830Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9cutiog000tds9lugm8o17f","content":"<p>app测试做了一年，既然要写博客，开篇就来整理一下软件测试的基础知识，回顾巩固一下。本篇博客有借鉴也有自己的想法，希望可以多交流交流</p><h2 id=\"什么是软件测试\"><a href=\"#什么是软件测试\" class=\"headerlink\" title=\"什么是软件测试\"></a>什么是软件测试</h2><p>对我来说，最好记，最合理的解释是：<code>软件测试是一种实际输出与预期输出之间的审核或者比较过程，使用人工操作或软件自动运行的方式</code>（百度百科的定义）。为什么这么说呢，因为<code>bug描述有4要素：前提条件，操作步骤，预期结果，当前结果</code>，也对应了测试用例中的要素点，举个例子，这样描述bug显得条理清楚，有木有？</p><blockquote><p>bug描述：<br>前提：删除的评论在热门评论中<br>操作：所有评论页面，点击‘删除’按钮<br>预期结果：热门评论和最新评论中的评论都被删除<br>当前结果：仅最新评论中的被删除</p></blockquote><h2 id=\"软件测试的目的\"><a href=\"#软件测试的目的\" class=\"headerlink\" title=\"软件测试的目的\"></a>软件测试的目的</h2><p>就我的理解，软件测试的目的是：1.测试开发的功能是否符合需求，因为需求文档就是你测试的标准，不符合的就是bug；2.确认软件的质量<br>常规解释：测试的目的是为了发现尽可能多的bug，成功的测试在于发现了迄今尚未发现的bug，保证软件的质量；<br>功能测试完成后，以用户的身份来运行app，看功能是否符合使用规范，使用起来是否方便，用户使用app无非就是图个实用或者interesting，可以将自己的使用心得告诉产品经理，作为参考。</p><h2 id=\"软件测试的过程\"><a href=\"#软件测试的过程\" class=\"headerlink\" title=\"软件测试的过程\"></a>软件测试的过程</h2><p>总结起来，也是4个步骤：需求评审–设计用例–用例测试–bug提交及验证</p><ul><li>需求评审：因为我不需要参加需求讨论，所以这一步对我来说就是“啃”需求文档，需求了解的越深，测试时考虑的会更多更全面；不同公司会有不同的规定，但殊途同归，这一步的目的都是读懂需求，知道你的测试标准；</li><li>设计用例：根据需求分析，利用等价类划分法等方法设计用例，尽可能的覆盖可能发生的情况；</li><li>用例测试：根据测试用例测试已开发的功能；</li><li>bug提交及验证：上边已经说了，bug描述有4个要素点:前提条件，操作步骤，预期结果，当前结果，提交的bug让开发能看懂就算是成功了；验证bug后记得修改bug状态，修改好了就关闭，仍有bug就重新打开并修改bug描述。</li></ul><h2 id=\"测试用例二三事！\"><a href=\"#测试用例二三事！\" class=\"headerlink\" title=\"测试用例二三事！\"></a>测试用例二三事！</h2><h3 id=\"1-bug管理工具\"><a href=\"#1-bug管理工具\" class=\"headerlink\" title=\"1.bug管理工具\"></a>1.bug管理工具</h3><p>刚开始使用的平台是我们后台自主开发的QC平台，因为要升级，目前使用的是蒲公英的tracup平台<br>界面如下：</p><p><img src=\"/images/test_pic/tracup.jpeg\" alt=\"tracup\"><br>要素点已在上图标注,不管是什么平台，要素点都是一样的：项目名称、问题类型（一般为bug）、主题、bug描述、优先级、版本号、指派人</p><h3 id=\"2-测试用例编写规范\"><a href=\"#2-测试用例编写规范\" class=\"headerlink\" title=\"2.测试用例编写规范\"></a>2.测试用例编写规范</h3><p>刚开始编写测试用例时，只有一个模板，怎么写只能靠自己摸索，推荐几篇短小但是切合实际工作的<br><a href=\"http://blog.csdn.net/xiaofuruo/article/details/41750161\" target=\"_blank\" rel=\"external\">手机app测试记录一</a><br><a href=\"http://www.jianshu.com/p/86f2f22cbe99?utm_campaign=hugo&amp;utm_medium=reader_share&amp;utm_content=note&amp;utm_source=weixin-friends\" target=\"_blank\" rel=\"external\">输入框常见bug</a><br><a href=\"http://www.cnblogs.com/m317/p/6274093.html\" target=\"_blank\" rel=\"external\">测试用例规范</a></p><p>以下是摘抄的与我的测试过程相关的</p><ol><li>初始化测试用例<br>进入功能模块（页面）后，某些空间会初始化填入数据，生成一个用例确保所有的初始数据正确。</li></ol><p><img src=\"/images/test_pic/1.jpeg\" alt=\"1\"></p><ol><li>边界的测试用例<br>每个数据项，生成一个边界用例（含最大／最小两个边界值）<br>字符串数据以字符串长度为计量单位<br>布尔值数据的所有取值都需测试<br>多个复选框一组时，需测同时被选中及都不被选中<br>下拉菜单、列表框、单选按钮组为最大、最小的2个取值</li><li>空值的测试用例<br>对于每个必填数据项，（不提供空值的除外）都生成一个用例，则预期结果提示该数据项为空。</li></ol><p><img src=\"/images/test_pic/23.jpeg\" alt=\"23\"></p><ol><li>格式错误的测试用例<br>对于输入框数据项，都生成一个用例，预期结果提示该数据项格式错误<br>日期／数字／字符串输入框<br>Email、邮编、用户名等带格式要求</li><li>溢出的测试用例<br>对于输入框数据项，都生成一个取值范围外的测试用例，预期结果提示该数据项超出范围<br>日期输入框：需添加上边界日期小于下边界日期的用例<br>数字输入框：如‘金额’一般为正整数，填入一个负数<br>字符串输入框：超出规定长度的字符串</li><li>关联的测试用例<br>对于相互关联的两个或多个数据项，生成一个用例，确保当一个数据项改变时，其它数据项的变化正确。</li><li>唯一值的测试用例<br>某些业务的数据字段要求是唯一的，生成一个或两个用例（新建，编辑），使得输入数据与原有数据在该字段重复，预期结果为返回该数据已存在的提示</li></ol><p><img src=\"/images/test_pic/7.jpeg\" alt=\"7\"></p><ol><li>权限不足的测试用例<br>对于功能模块，生成一个用例，以没有权限的用户身份访问，预期结果为提示权限不足</li><li>角色全新的测试用例<br>业务功能流程涉及一到多个角色，对于每个角色，都生成一个用例，预期结果为用户以这个角色登录时，他仅能执行权限允许的操作。</li></ol><h3 id=\"测试用例设计方法\"><a href=\"#测试用例设计方法\" class=\"headerlink\" title=\"测试用例设计方法\"></a>测试用例设计方法</h3><p>黑盒测试常用设计方法：等价类划分法、边界值分析法、错误猜测法、因果图法</p><h4 id=\"等价类划分法\"><a href=\"#等价类划分法\" class=\"headerlink\" title=\"等价类划分法\"></a>等价类划分法</h4><blockquote><p>等价类划分法是把所有可能输入的数据，即程序的输入域划分为若干部分（子集），然后从每个子集中选取少数具有代表性的数据作为测试用例</p><ul><li>等价类分为：有效等价类和无效等价类</li><li>有效等价类：指对程序的规格说明来说是合理的、有意义的输入数据的集合</li><li>无效等价类：指对程序的规格说明来说是不合理的或无意义的输入数据的集合。无效等价类可能有1个或多个</li></ul></blockquote><p>转化为测试用例：<br>在确立了等价类后，可建立等价类表，列出所有划分出的等价类输入条件：有效等价类、无效等价类，然后从划分出的等价类中按一下三个原则设计测试用例：</p><ol><li>为每个等价类规定一个唯一编号；</li><li>设计一个新的测试用例，使其<code>尽可能多地覆盖</code>尚未被覆盖的有效等价类，重复这一步，直到所有的有效等价类都被覆盖为止；</li><li>设计一个新的测试用例，使其<code>仅覆盖一个</code>尚未被覆盖的无效等价类，重复这一步，直到所有的无效等价类都被覆盖为止。</li></ol><p>例如：输入密码的测试用例<br>在我们的app中，密码个数规定要输入6-16位，则可以列出一个不等式：6&lt;=x&lt;=16<br>有效等价类为：[6，16]<br>无效等价类为：[0，6），（16，无穷）<br>等价类判断出来后就是选择代表性的数据来写测试用例，通常代表性的数据与边界值有关，选取正好等于，刚刚大于或刚刚小于边界的值作为测试数据。<br>最后选择的数据为：0，5，6，17<br>则测试用例为：密码为0/5/6/17位数的测试</p><h4 id=\"边界值分析法\"><a href=\"#边界值分析法\" class=\"headerlink\" title=\"边界值分析法\"></a>边界值分析法</h4><blockquote><p>边界值分析法就是<code>对输入或输出边界值进行测试</code>的一种黑盒测试方法。该方法通常作为等价类划分法的补充，这种情况下，其测试用例来自等价类的边界</p></blockquote><p>学习边界值的时候顺便了解一下<a href=\"http://yzylion.blog.163.com/blog/static/89406994200892784325898/\" target=\"_blank\" rel=\"external\">什么是上点，内点，离点</a></p><h4 id=\"因果图法\"><a href=\"#因果图法\" class=\"headerlink\" title=\"因果图法\"></a>因果图法</h4><blockquote><p>因果图法适合<code>输入域较多而输入域之间又存在互相影响的关系</code>。<br>因果图法就是找出输入因子以及其间的影响关系，确定每组输入因子所应输出的结果，画出<code>因果图</code>，转换成<code>判定表</code>，然后生成测试用例的一个测试方法</p></blockquote><p>因果关系：恒等、与或非逻辑关系，<br>因之间的约束关系：逻辑异、逻辑或、唯一关系、限制关系、要求关系，具体可以参考这篇文章：<a href=\"http://blog.sina.com.cn/s/blog_560ddb8501000a9c.html\" target=\"_blank\" rel=\"external\">实例介绍因果图法</a></p><h4 id=\"错误推测法\"><a href=\"#错误推测法\" class=\"headerlink\" title=\"错误推测法\"></a>错误推测法</h4><blockquote><p>错误推测法是<code>基于经验和直觉</code>推测程序中所有可能存在的各种错误，从而有针对性的设计测试用例的方法</p></blockquote><p>所以使用错误推测法的前提就是经验的积累！</p><h4 id=\"测试方法实例\"><a href=\"#测试方法实例\" class=\"headerlink\" title=\"测试方法实例\"></a>测试方法实例</h4><p>一个功能的测试用例大多会涉及多个方法，例如：我们app的密码登录</p><p><img src=\"/images/test_pic/%E7%99%BB%E5%BD%95.jpeg\" alt=\"登录\"></p><p>首先要了解登录相关需求，在这只显示一下填写规则，从规则中总结输入条件<br><img src=\"/images/test_pic/%E5%A1%AB%E5%86%99%E8%A7%84%E5%88%99.jpeg\" alt=\"填写规则\"></p><p>输入不同的手机号和密码，点击登录，会有不同的toast显示，所以结果有很多，先确定一下手机号和密码的关系：手机号格式正确后才会对密码做判断，所以联系如下图：<br><img src=\"/images/test_pic/%E8%81%94%E7%B3%BB.jpeg\" alt=\"联系\"></p><p>大关系确定后就要扣小细节了，根据边界值法和等价类分界法，手机号和密码分别设计测试用例可以分为以下几种情况：</p><p><img src=\"/images/test_pic/%E4%BB%A3%E8%A1%A8%E6%95%B0%E6%8D%AE.jpeg\" alt=\"代表数据\"></p><p>接下来就是设计用例的总结，根据手机号密码联系图，<br>第一列可设计1个测试用例，<br>第三列仅看手机号就可以，0个手机号可归到第一个测试用例，所以这一列可以设置3个测试用例<br>第四列就有点复杂了，不过因为判断密码的前提是手机号有效，所以范围又缩小了，这一块可以做个判定表，然后删除冗余的，这个也不难，所以我就不做了，最后的测试用例如下：</p><p><img src=\"/images/test_pic/%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B.jpeg\" alt=\"测试用例\"></p><p>基础知识就回顾到这，希望大家可以多多交流，如果有说的不对的地方，尽情回复！</p>","site":{"data":{}},"excerpt":"","more":"<p>app测试做了一年，既然要写博客，开篇就来整理一下软件测试的基础知识，回顾巩固一下。本篇博客有借鉴也有自己的想法，希望可以多交流交流</p><h2 id=\"什么是软件测试\"><a href=\"#什么是软件测试\" class=\"headerlink\" title=\"什么是软件测试\"></a>什么是软件测试</h2><p>对我来说，最好记，最合理的解释是：<code>软件测试是一种实际输出与预期输出之间的审核或者比较过程，使用人工操作或软件自动运行的方式</code>（百度百科的定义）。为什么这么说呢，因为<code>bug描述有4要素：前提条件，操作步骤，预期结果，当前结果</code>，也对应了测试用例中的要素点，举个例子，这样描述bug显得条理清楚，有木有？</p><blockquote><p>bug描述：<br>前提：删除的评论在热门评论中<br>操作：所有评论页面，点击‘删除’按钮<br>预期结果：热门评论和最新评论中的评论都被删除<br>当前结果：仅最新评论中的被删除</p></blockquote><h2 id=\"软件测试的目的\"><a href=\"#软件测试的目的\" class=\"headerlink\" title=\"软件测试的目的\"></a>软件测试的目的</h2><p>就我的理解，软件测试的目的是：1.测试开发的功能是否符合需求，因为需求文档就是你测试的标准，不符合的就是bug；2.确认软件的质量<br>常规解释：测试的目的是为了发现尽可能多的bug，成功的测试在于发现了迄今尚未发现的bug，保证软件的质量；<br>功能测试完成后，以用户的身份来运行app，看功能是否符合使用规范，使用起来是否方便，用户使用app无非就是图个实用或者interesting，可以将自己的使用心得告诉产品经理，作为参考。</p><h2 id=\"软件测试的过程\"><a href=\"#软件测试的过程\" class=\"headerlink\" title=\"软件测试的过程\"></a>软件测试的过程</h2><p>总结起来，也是4个步骤：需求评审–设计用例–用例测试–bug提交及验证</p><ul><li>需求评审：因为我不需要参加需求讨论，所以这一步对我来说就是“啃”需求文档，需求了解的越深，测试时考虑的会更多更全面；不同公司会有不同的规定，但殊途同归，这一步的目的都是读懂需求，知道你的测试标准；</li><li>设计用例：根据需求分析，利用等价类划分法等方法设计用例，尽可能的覆盖可能发生的情况；</li><li>用例测试：根据测试用例测试已开发的功能；</li><li>bug提交及验证：上边已经说了，bug描述有4个要素点:前提条件，操作步骤，预期结果，当前结果，提交的bug让开发能看懂就算是成功了；验证bug后记得修改bug状态，修改好了就关闭，仍有bug就重新打开并修改bug描述。</li></ul><h2 id=\"测试用例二三事！\"><a href=\"#测试用例二三事！\" class=\"headerlink\" title=\"测试用例二三事！\"></a>测试用例二三事！</h2><h3 id=\"1-bug管理工具\"><a href=\"#1-bug管理工具\" class=\"headerlink\" title=\"1.bug管理工具\"></a>1.bug管理工具</h3><p>刚开始使用的平台是我们后台自主开发的QC平台，因为要升级，目前使用的是蒲公英的tracup平台<br>界面如下：</p><p><img src=\"/images/test_pic/tracup.jpeg\" alt=\"tracup\"><br>要素点已在上图标注,不管是什么平台，要素点都是一样的：项目名称、问题类型（一般为bug）、主题、bug描述、优先级、版本号、指派人</p><h3 id=\"2-测试用例编写规范\"><a href=\"#2-测试用例编写规范\" class=\"headerlink\" title=\"2.测试用例编写规范\"></a>2.测试用例编写规范</h3><p>刚开始编写测试用例时，只有一个模板，怎么写只能靠自己摸索，推荐几篇短小但是切合实际工作的<br><a href=\"http://blog.csdn.net/xiaofuruo/article/details/41750161\" target=\"_blank\" rel=\"external\">手机app测试记录一</a><br><a href=\"http://www.jianshu.com/p/86f2f22cbe99?utm_campaign=hugo&amp;utm_medium=reader_share&amp;utm_content=note&amp;utm_source=weixin-friends\" target=\"_blank\" rel=\"external\">输入框常见bug</a><br><a href=\"http://www.cnblogs.com/m317/p/6274093.html\" target=\"_blank\" rel=\"external\">测试用例规范</a></p><p>以下是摘抄的与我的测试过程相关的</p><ol><li>初始化测试用例<br>进入功能模块（页面）后，某些空间会初始化填入数据，生成一个用例确保所有的初始数据正确。</li></ol><p><img src=\"/images/test_pic/1.jpeg\" alt=\"1\"></p><ol><li>边界的测试用例<br>每个数据项，生成一个边界用例（含最大／最小两个边界值）<br>字符串数据以字符串长度为计量单位<br>布尔值数据的所有取值都需测试<br>多个复选框一组时，需测同时被选中及都不被选中<br>下拉菜单、列表框、单选按钮组为最大、最小的2个取值</li><li>空值的测试用例<br>对于每个必填数据项，（不提供空值的除外）都生成一个用例，则预期结果提示该数据项为空。</li></ol><p><img src=\"/images/test_pic/23.jpeg\" alt=\"23\"></p><ol><li>格式错误的测试用例<br>对于输入框数据项，都生成一个用例，预期结果提示该数据项格式错误<br>日期／数字／字符串输入框<br>Email、邮编、用户名等带格式要求</li><li>溢出的测试用例<br>对于输入框数据项，都生成一个取值范围外的测试用例，预期结果提示该数据项超出范围<br>日期输入框：需添加上边界日期小于下边界日期的用例<br>数字输入框：如‘金额’一般为正整数，填入一个负数<br>字符串输入框：超出规定长度的字符串</li><li>关联的测试用例<br>对于相互关联的两个或多个数据项，生成一个用例，确保当一个数据项改变时，其它数据项的变化正确。</li><li>唯一值的测试用例<br>某些业务的数据字段要求是唯一的，生成一个或两个用例（新建，编辑），使得输入数据与原有数据在该字段重复，预期结果为返回该数据已存在的提示</li></ol><p><img src=\"/images/test_pic/7.jpeg\" alt=\"7\"></p><ol><li>权限不足的测试用例<br>对于功能模块，生成一个用例，以没有权限的用户身份访问，预期结果为提示权限不足</li><li>角色全新的测试用例<br>业务功能流程涉及一到多个角色，对于每个角色，都生成一个用例，预期结果为用户以这个角色登录时，他仅能执行权限允许的操作。</li></ol><h3 id=\"测试用例设计方法\"><a href=\"#测试用例设计方法\" class=\"headerlink\" title=\"测试用例设计方法\"></a>测试用例设计方法</h3><p>黑盒测试常用设计方法：等价类划分法、边界值分析法、错误猜测法、因果图法</p><h4 id=\"等价类划分法\"><a href=\"#等价类划分法\" class=\"headerlink\" title=\"等价类划分法\"></a>等价类划分法</h4><blockquote><p>等价类划分法是把所有可能输入的数据，即程序的输入域划分为若干部分（子集），然后从每个子集中选取少数具有代表性的数据作为测试用例</p><ul><li>等价类分为：有效等价类和无效等价类</li><li>有效等价类：指对程序的规格说明来说是合理的、有意义的输入数据的集合</li><li>无效等价类：指对程序的规格说明来说是不合理的或无意义的输入数据的集合。无效等价类可能有1个或多个</li></ul></blockquote><p>转化为测试用例：<br>在确立了等价类后，可建立等价类表，列出所有划分出的等价类输入条件：有效等价类、无效等价类，然后从划分出的等价类中按一下三个原则设计测试用例：</p><ol><li>为每个等价类规定一个唯一编号；</li><li>设计一个新的测试用例，使其<code>尽可能多地覆盖</code>尚未被覆盖的有效等价类，重复这一步，直到所有的有效等价类都被覆盖为止；</li><li>设计一个新的测试用例，使其<code>仅覆盖一个</code>尚未被覆盖的无效等价类，重复这一步，直到所有的无效等价类都被覆盖为止。</li></ol><p>例如：输入密码的测试用例<br>在我们的app中，密码个数规定要输入6-16位，则可以列出一个不等式：6&lt;=x&lt;=16<br>有效等价类为：[6，16]<br>无效等价类为：[0，6），（16，无穷）<br>等价类判断出来后就是选择代表性的数据来写测试用例，通常代表性的数据与边界值有关，选取正好等于，刚刚大于或刚刚小于边界的值作为测试数据。<br>最后选择的数据为：0，5，6，17<br>则测试用例为：密码为0/5/6/17位数的测试</p><h4 id=\"边界值分析法\"><a href=\"#边界值分析法\" class=\"headerlink\" title=\"边界值分析法\"></a>边界值分析法</h4><blockquote><p>边界值分析法就是<code>对输入或输出边界值进行测试</code>的一种黑盒测试方法。该方法通常作为等价类划分法的补充，这种情况下，其测试用例来自等价类的边界</p></blockquote><p>学习边界值的时候顺便了解一下<a href=\"http://yzylion.blog.163.com/blog/static/89406994200892784325898/\" target=\"_blank\" rel=\"external\">什么是上点，内点，离点</a></p><h4 id=\"因果图法\"><a href=\"#因果图法\" class=\"headerlink\" title=\"因果图法\"></a>因果图法</h4><blockquote><p>因果图法适合<code>输入域较多而输入域之间又存在互相影响的关系</code>。<br>因果图法就是找出输入因子以及其间的影响关系，确定每组输入因子所应输出的结果，画出<code>因果图</code>，转换成<code>判定表</code>，然后生成测试用例的一个测试方法</p></blockquote><p>因果关系：恒等、与或非逻辑关系，<br>因之间的约束关系：逻辑异、逻辑或、唯一关系、限制关系、要求关系，具体可以参考这篇文章：<a href=\"http://blog.sina.com.cn/s/blog_560ddb8501000a9c.html\" target=\"_blank\" rel=\"external\">实例介绍因果图法</a></p><h4 id=\"错误推测法\"><a href=\"#错误推测法\" class=\"headerlink\" title=\"错误推测法\"></a>错误推测法</h4><blockquote><p>错误推测法是<code>基于经验和直觉</code>推测程序中所有可能存在的各种错误，从而有针对性的设计测试用例的方法</p></blockquote><p>所以使用错误推测法的前提就是经验的积累！</p><h4 id=\"测试方法实例\"><a href=\"#测试方法实例\" class=\"headerlink\" title=\"测试方法实例\"></a>测试方法实例</h4><p>一个功能的测试用例大多会涉及多个方法，例如：我们app的密码登录</p><p><img src=\"/images/test_pic/%E7%99%BB%E5%BD%95.jpeg\" alt=\"登录\"></p><p>首先要了解登录相关需求，在这只显示一下填写规则，从规则中总结输入条件<br><img src=\"/images/test_pic/%E5%A1%AB%E5%86%99%E8%A7%84%E5%88%99.jpeg\" alt=\"填写规则\"></p><p>输入不同的手机号和密码，点击登录，会有不同的toast显示，所以结果有很多，先确定一下手机号和密码的关系：手机号格式正确后才会对密码做判断，所以联系如下图：<br><img src=\"/images/test_pic/%E8%81%94%E7%B3%BB.jpeg\" alt=\"联系\"></p><p>大关系确定后就要扣小细节了，根据边界值法和等价类分界法，手机号和密码分别设计测试用例可以分为以下几种情况：</p><p><img src=\"/images/test_pic/%E4%BB%A3%E8%A1%A8%E6%95%B0%E6%8D%AE.jpeg\" alt=\"代表数据\"></p><p>接下来就是设计用例的总结，根据手机号密码联系图，<br>第一列可设计1个测试用例，<br>第三列仅看手机号就可以，0个手机号可归到第一个测试用例，所以这一列可以设置3个测试用例<br>第四列就有点复杂了，不过因为判断密码的前提是手机号有效，所以范围又缩小了，这一块可以做个判定表，然后删除冗余的，这个也不难，所以我就不做了，最后的测试用例如下：</p><p><img src=\"/images/test_pic/%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B.jpeg\" alt=\"测试用例\"></p><p>基础知识就回顾到这，希望大家可以多多交流，如果有说的不对的地方，尽情回复！</p>"},{"title":"Travis CI 系列：自动化部署博客","date":"2017-09-18T02:11:19.000Z","author":{"name":"Stephen","link":"https://blog.stephencode.com"},"_content":"\n先引出今天的主角：Travis CI （撒花 ~ 撒花 ~）\n\n> Travis CI 是在软件开发领域中的一个在线的，分布式的持续集成服务，用来构建及测试在GitHub托管的代码。\n\n![travis ci](https://cdn.stephencode.com/article/travis/travis.jpg)\n\n最近变得更懒了，觉得每次本地提交代码到 GitHub 上后还要去服务器上拉取文件，完成所谓的部署工作有点麻烦。所以想要让这样的一个过程自动化，那么也就有了今天的这番折腾了~\n\n其实我的部署之路也是从石器时代逐步到蒸汽时代再到电气时代的。。。\n\n最开始，通过 FTP 传文件的方式，在每一次对本地文件进行修改并在本地环境测试通过后，通过 FTP 传输到远程服务器，然后在线上看看有没有问题（这里可能有人会问，为什么不中间搞个测试服务器？我一个个人博客网站搞那么多步骤不是得搞死自己么，好吧，其实是我懒。。。），这里有一个很要命的问题，有时候可能一下子改了很多文件，然后等到测试完成要上传的时候。。。嗯，忘记都改了哪些文件了，那怎么办啊，还是有办法的，把整个项目都上传一遍（那时候还没用上 Git 呢，别跟我扯 Git 这一套，我不听我不听我不听）。\n\n之后，将自己的博客放上了“基友交流网” —— GitHub，然后用上了偶像 Linus 又一具有世界级影响力的版本控制软件，从此再也不用记住自己改了哪些文件了。测试完 push 一下，登录远程服务器 pull 一下，就搞定了。\n\n年纪大起来了，不想每次 push 上去后还要登录自己的服务器 pull 一下，懒病再次发挥了至关重要的作用，它迫使我接入 Travis CI 持续集成。。。\n\n然后，嗯，上了 Travis 这条“贼船” ~\n\n对于 GitHub 的集成 Travis 做得很好，与 Jenkis 不同，Travis 不需要自己在服务器部署服务，并且是高度集成 GitHub 的，所以对于开源项目还是非常友好的。\n\n开始这次磕磕绊绊的集成之旅~\n\n## 注册配置 Travis\n\n万事开头难，不，每次注册都是最容易的，更何况还是使用 GitHub 第三方授权登录呢~\n\n注册成功，登录，然后添加自己的 GitHub 上的 repo\n\n![add repo](https://cdn.stephencode.com/article/travis/add-repo.jpg)\n\n选择其中一个或多个你需要集成的项目，开启 build，也就是点击叉叉变成勾勾的过程。\n\n假设现在已经对某个项目开启了 Travis，那么先去看看 Settings 里默认开启的那几项，根据自己实际需求进行设置，没什么特殊需求默认的设置就可以了。\n\n接下来的步骤很清楚，官方也有配图说明：\n\n![build step](https://cdn.stephencode.com/article/travis/buil-step.png)\n\n### 添加 .travis.yml\n\n说白了接下来的事情都是如何去写这个配置文件，因为 Travis 全是根据这个配置文件去执行相应动作的。\n\n根据你的语言不同，配置也会有较大差异，因为我的博客使用 PHP 的流行框架 Laravel 写的，所以这里也拿它作为例子，官方给出的最精简的 PHP 配置文件是：\n\n```YML\nlanguage: php\n\nphp:\n  - 7.1.9\n  - nightly\n```\n\n### 触发构建\n\n接下来如上面所说的第三步，将这个 `.travis.yml` 文件提交到 GitHub，那么 Travis 就会自动触发构建任务。\n\n我就知道第一次不会这么简单的，失败了。。。\n\n报错原因是执行 `phpunit` 时提示：\n\n```\nPHP Warning:  require(/home/travis/build/stephencode/super-admin/bootstrap/../vendor/autoload.php): failed to open stream: No such file or directory in /home/travis/build/stephencode/super-admin/bootstrap/autoload.php on line 17\n```\n\n一看是自己项目的 composer 依赖包的 `autoload.php` 文件没找到，那应该是没有执行 `composer up` 之类的操作，结合网上找的资料，比较好的解决方式是在 `install` 层添加一行：\n\n```\ninstall:\n  - composer install --prefer-dist --optimize-autoloader --quiet\n```\n\n这样就不会报上面这个错了，然后会报接下来的一个错。。。\n\n```\n1) Tests\\Feature\\RouteTest::testBasicTest\nRuntimeException: No application encryption key has been specified.\n```\n\n其实这个是我在 Laravel 里面的 `phpunit.xml` 没有配置好的缘故。将 `<env name=\"APP_KEY\" value=\"base64:xxxxxx=\"/>` 补上就好，在 `<php></php>` 标签里，这个 key 你自己去生成。\n\n在经过五六次 build failed 之后，总算天不负我了。\n\n![build failed](https://cdn.stephencode.com/article/travis/build-failed.png)\n\n## 自动部署到远程服务器\n\n现在已经可以自动构建了，那么接下来的一步就是部署到远程服务器。Travis 提供 `after_success` 来实现这步骤。\n\n等等，我们要部署到远程服务器，那么势必需要让 Travis 登录到远程服务，那么登录密码怎么处理才能保证安全？这是首先要解决的问题，明文肯定是不行的。\n\n### 加密登录密码\n\n那看来先得解决这个问题，Travis Docs 里也帮我考虑到了这个避不开的问题的解决方案（[Encrypting Files](https://docs.travis-ci.com/user/encrypting-files/)）\n\n我们一起来实践一下：\n\n首先通过 Ruby 的 gem 安装 travis\n\n```\ngem install travis\n```\n\n哎，重试了几次发现敲完这段 shell 如同石沉大海一般，屁都不放一个。。。就算开了代理还是纹丝不动，没办法只能换镜像了。\n\n```\n$ gem sources -l\n\n*** CURRENT SOURCES ***\n\nhttps://rubygems.org/\n```\n\n查看一下当前的镜像，这货（rubygems）国内出奇的难以访问，网上一搜国内的镜像源，[Ruby China](http://gems.ruby-china.org/) 的应该很显眼吧~\n\n```\n$ gem update --system\n$ gem sources --add https://gems.ruby-china.org/\n```\n\n然后再查看一下 gem 镜像，确保只有 Ruby China 的 gem 源。\n\n好了，现在可以愉快的安装 travis 了\n\n```\n$ sudo gem install travis\n```\n\n接下来让我们先在命令行中登录 Travis\n\n```\n$ travis login\n\nWe need your GitHub login to identify you.\nThis information will not be sent to Travis CI, only to api.github.com.\nThe password will not be displayed.\n\nTry running with --github-token or --auto if you don't want to enter your password anyway.\n\nUsername: xxx@xxx.xxx\nPassword for xxx@xxx.xxx: ***\nSuccessfully logged in as demo!\n```\n\n会要求你输入 GitHub 的账号密码，这个是走 GitHub 的服务，所以不用担心密码泄露。\n\n将目录切换到项目根目录下，也就是 `.travis.yml` 目录下。因为我们需要让 travis 远程登录自己的服务器，所以需要将本地保存着的 SSH 私钥进行加密处理（默认你也是通过 SSH 免密登录的模式哦，不清楚可以参考我这一篇 [《SSH 系列：免密登录远程服务器》](https://blog.stephencode.com/p/ssh_login_no_pwd.html)）。\n\n```\n$ travis encrypt-file ~/.ssh/id_rsa --add\n\nDetected repository as xxx/xxx, is this correct? |yes| yes\nencrypting ~/.ssh/id_rsa for xxx/xxx\nstoring result as id_rsa.enc\nstoring secure env variables for decryption\n\nMake sure to add id_rsa.enc to the git repository.\nMake sure not to add ~/.ssh/id_rsa to the git repository.\nCommit all changes to your .travis.yml.\n```\n\n这个时候去看一下当前目录下的 `.travis.yml`，会多出几行\n\n```\nbefore_install:\n  - openssl aes-256-cbc -K $encrypted_d89376f3278d_key -iv $encrypted_d89376f3278d_iv\n  -in id_rsa.enc -out ~\\/.ssh/id_rsa -d\n```\n\n为保证权限正常，多加一行设置权限的 shell\n\n```\nbefore_install:\n  - openssl aes-256-cbc -K $encrypted_d89376f3278d_key -iv $encrypted_d89376f3278d_iv\n    -in id_rsa.enc -out ~/.ssh/id_rsa -d\n  - chmod 600 ~/.ssh/id_rsa\n```\n\n还有一点可能会用上，因为 travis 第一次登录远程服务器会出现 SSH 主机验证，这边会有一个主机信任问题。官方给出的方案是添加 addons 配置：\n\n```\naddons:\n  ssh_known_hosts: your-ip\n```\n\n到这里，travis 就能够免密登录自己的远程服务器啦~\n\n## 自动部署\n\n既然已经可以免密登录服务器了，那么写一个部署脚本，在登录时执行该脚本就可以了，一切就是这么顺其自然就好~\n\n### 写部署脚本\n\n我写 Shell 脚本的水平很有限，这边也就给出一个最精简的 Demo 可以参考一下：\n\n```bash\n#!/bin/bash\ncd /path/to/your-project\ngit pull origin master\necho 'travis build done!'\n```\n\n### 执行部署脚本\n\n在 `.travis.yml` 配置文件中写下这么两行：\n\n```\nafter_success:\n  - ssh your-user@your-ip \"./your-shell-script\"\n```\n\n记得将其中的 `your-user`、`your-ip`、`your-shell-script` 都替换成自己的哦！\n\n## 高大上标志\n\n辛苦奋斗了一天，总是希望别人看到自己的劳动成果的，除了写这篇文章意外还能做点什么呢？那自然是给自己的这个项目在 GitHub 上的 README.md 中显示一个高大上的 `build:passing` 标志，就像这样：\n\n![build tag](https://cdn.stephencode.com/article/travis/build-tag.png)\n\n## 总结\n\n这次过程中基本都是从不会到会的一个学习过程，从中了解到不少新东西，也发现一些自己的短板，比如写 shell 脚本。。。\n\n最后，贴出我自己的 `.travis.yml`，里面有关涉及个人隐私的部分我会注释并说明：\n\n```yml\nlanguage: php\n\nphp:\n  - 7.1.9\n  - nightly\n\nenv:\n  - APP_DEBUG=false\n\nbefore_install:\n  - openssl aes-256-cbc -K $encrypted_d89376f3278d_key -iv $encrypted_d89376f3278d_iv\n    -in id_rsa.enc -out ~/.ssh/id_rsa -d\n  - chmod 600 ~/.ssh/id_rsa\n\ninstall:\n  - composer install --prefer-dist --optimize-autoloader --quiet\n\nnotifications:\n  email:\n    recipients:\n    - stephenfxl@gmail.com\n    on_success: always\n    on_failure: always\n\nscript:\n  - phpunit -c phpunit.xml --coverage-text\n\nafter_success:\n  - ssh xxx@xxxx.xxxx.xxxx.xxxx \"./travis_build\" # 请替换成自己的登录IP和登录用户\n\naddons:\n  ssh_known_hosts: xxxx.xxxx.xxxx.xxxx # 请替换成自己的服务器IP\n\n```\n\n本文参考链接：\n\n- [使用Travis进行持续集成](https://www.liaoxuefeng.com/article/0014631488240837e3633d3d180476cb684ba7c10fda6f6000)\n- [Jekyll + Travis CI 自动化部署博客](https://mritd.me/2017/02/25/jekyll-blog-+-travis-ci-auto-deploy/)","source":"_posts/travis-ci-auto-build.md","raw":"---\ntitle: Travis CI 系列：自动化部署博客\ndate: 2017-09-18 10:11:19\nauthor:\n  name: Stephen\n  link: https://blog.stephencode.com\ntags:\n- CI\n---\n\n先引出今天的主角：Travis CI （撒花 ~ 撒花 ~）\n\n> Travis CI 是在软件开发领域中的一个在线的，分布式的持续集成服务，用来构建及测试在GitHub托管的代码。\n\n![travis ci](https://cdn.stephencode.com/article/travis/travis.jpg)\n\n最近变得更懒了，觉得每次本地提交代码到 GitHub 上后还要去服务器上拉取文件，完成所谓的部署工作有点麻烦。所以想要让这样的一个过程自动化，那么也就有了今天的这番折腾了~\n\n其实我的部署之路也是从石器时代逐步到蒸汽时代再到电气时代的。。。\n\n最开始，通过 FTP 传文件的方式，在每一次对本地文件进行修改并在本地环境测试通过后，通过 FTP 传输到远程服务器，然后在线上看看有没有问题（这里可能有人会问，为什么不中间搞个测试服务器？我一个个人博客网站搞那么多步骤不是得搞死自己么，好吧，其实是我懒。。。），这里有一个很要命的问题，有时候可能一下子改了很多文件，然后等到测试完成要上传的时候。。。嗯，忘记都改了哪些文件了，那怎么办啊，还是有办法的，把整个项目都上传一遍（那时候还没用上 Git 呢，别跟我扯 Git 这一套，我不听我不听我不听）。\n\n之后，将自己的博客放上了“基友交流网” —— GitHub，然后用上了偶像 Linus 又一具有世界级影响力的版本控制软件，从此再也不用记住自己改了哪些文件了。测试完 push 一下，登录远程服务器 pull 一下，就搞定了。\n\n年纪大起来了，不想每次 push 上去后还要登录自己的服务器 pull 一下，懒病再次发挥了至关重要的作用，它迫使我接入 Travis CI 持续集成。。。\n\n然后，嗯，上了 Travis 这条“贼船” ~\n\n对于 GitHub 的集成 Travis 做得很好，与 Jenkis 不同，Travis 不需要自己在服务器部署服务，并且是高度集成 GitHub 的，所以对于开源项目还是非常友好的。\n\n开始这次磕磕绊绊的集成之旅~\n\n## 注册配置 Travis\n\n万事开头难，不，每次注册都是最容易的，更何况还是使用 GitHub 第三方授权登录呢~\n\n注册成功，登录，然后添加自己的 GitHub 上的 repo\n\n![add repo](https://cdn.stephencode.com/article/travis/add-repo.jpg)\n\n选择其中一个或多个你需要集成的项目，开启 build，也就是点击叉叉变成勾勾的过程。\n\n假设现在已经对某个项目开启了 Travis，那么先去看看 Settings 里默认开启的那几项，根据自己实际需求进行设置，没什么特殊需求默认的设置就可以了。\n\n接下来的步骤很清楚，官方也有配图说明：\n\n![build step](https://cdn.stephencode.com/article/travis/buil-step.png)\n\n### 添加 .travis.yml\n\n说白了接下来的事情都是如何去写这个配置文件，因为 Travis 全是根据这个配置文件去执行相应动作的。\n\n根据你的语言不同，配置也会有较大差异，因为我的博客使用 PHP 的流行框架 Laravel 写的，所以这里也拿它作为例子，官方给出的最精简的 PHP 配置文件是：\n\n```YML\nlanguage: php\n\nphp:\n  - 7.1.9\n  - nightly\n```\n\n### 触发构建\n\n接下来如上面所说的第三步，将这个 `.travis.yml` 文件提交到 GitHub，那么 Travis 就会自动触发构建任务。\n\n我就知道第一次不会这么简单的，失败了。。。\n\n报错原因是执行 `phpunit` 时提示：\n\n```\nPHP Warning:  require(/home/travis/build/stephencode/super-admin/bootstrap/../vendor/autoload.php): failed to open stream: No such file or directory in /home/travis/build/stephencode/super-admin/bootstrap/autoload.php on line 17\n```\n\n一看是自己项目的 composer 依赖包的 `autoload.php` 文件没找到，那应该是没有执行 `composer up` 之类的操作，结合网上找的资料，比较好的解决方式是在 `install` 层添加一行：\n\n```\ninstall:\n  - composer install --prefer-dist --optimize-autoloader --quiet\n```\n\n这样就不会报上面这个错了，然后会报接下来的一个错。。。\n\n```\n1) Tests\\Feature\\RouteTest::testBasicTest\nRuntimeException: No application encryption key has been specified.\n```\n\n其实这个是我在 Laravel 里面的 `phpunit.xml` 没有配置好的缘故。将 `<env name=\"APP_KEY\" value=\"base64:xxxxxx=\"/>` 补上就好，在 `<php></php>` 标签里，这个 key 你自己去生成。\n\n在经过五六次 build failed 之后，总算天不负我了。\n\n![build failed](https://cdn.stephencode.com/article/travis/build-failed.png)\n\n## 自动部署到远程服务器\n\n现在已经可以自动构建了，那么接下来的一步就是部署到远程服务器。Travis 提供 `after_success` 来实现这步骤。\n\n等等，我们要部署到远程服务器，那么势必需要让 Travis 登录到远程服务，那么登录密码怎么处理才能保证安全？这是首先要解决的问题，明文肯定是不行的。\n\n### 加密登录密码\n\n那看来先得解决这个问题，Travis Docs 里也帮我考虑到了这个避不开的问题的解决方案（[Encrypting Files](https://docs.travis-ci.com/user/encrypting-files/)）\n\n我们一起来实践一下：\n\n首先通过 Ruby 的 gem 安装 travis\n\n```\ngem install travis\n```\n\n哎，重试了几次发现敲完这段 shell 如同石沉大海一般，屁都不放一个。。。就算开了代理还是纹丝不动，没办法只能换镜像了。\n\n```\n$ gem sources -l\n\n*** CURRENT SOURCES ***\n\nhttps://rubygems.org/\n```\n\n查看一下当前的镜像，这货（rubygems）国内出奇的难以访问，网上一搜国内的镜像源，[Ruby China](http://gems.ruby-china.org/) 的应该很显眼吧~\n\n```\n$ gem update --system\n$ gem sources --add https://gems.ruby-china.org/\n```\n\n然后再查看一下 gem 镜像，确保只有 Ruby China 的 gem 源。\n\n好了，现在可以愉快的安装 travis 了\n\n```\n$ sudo gem install travis\n```\n\n接下来让我们先在命令行中登录 Travis\n\n```\n$ travis login\n\nWe need your GitHub login to identify you.\nThis information will not be sent to Travis CI, only to api.github.com.\nThe password will not be displayed.\n\nTry running with --github-token or --auto if you don't want to enter your password anyway.\n\nUsername: xxx@xxx.xxx\nPassword for xxx@xxx.xxx: ***\nSuccessfully logged in as demo!\n```\n\n会要求你输入 GitHub 的账号密码，这个是走 GitHub 的服务，所以不用担心密码泄露。\n\n将目录切换到项目根目录下，也就是 `.travis.yml` 目录下。因为我们需要让 travis 远程登录自己的服务器，所以需要将本地保存着的 SSH 私钥进行加密处理（默认你也是通过 SSH 免密登录的模式哦，不清楚可以参考我这一篇 [《SSH 系列：免密登录远程服务器》](https://blog.stephencode.com/p/ssh_login_no_pwd.html)）。\n\n```\n$ travis encrypt-file ~/.ssh/id_rsa --add\n\nDetected repository as xxx/xxx, is this correct? |yes| yes\nencrypting ~/.ssh/id_rsa for xxx/xxx\nstoring result as id_rsa.enc\nstoring secure env variables for decryption\n\nMake sure to add id_rsa.enc to the git repository.\nMake sure not to add ~/.ssh/id_rsa to the git repository.\nCommit all changes to your .travis.yml.\n```\n\n这个时候去看一下当前目录下的 `.travis.yml`，会多出几行\n\n```\nbefore_install:\n  - openssl aes-256-cbc -K $encrypted_d89376f3278d_key -iv $encrypted_d89376f3278d_iv\n  -in id_rsa.enc -out ~\\/.ssh/id_rsa -d\n```\n\n为保证权限正常，多加一行设置权限的 shell\n\n```\nbefore_install:\n  - openssl aes-256-cbc -K $encrypted_d89376f3278d_key -iv $encrypted_d89376f3278d_iv\n    -in id_rsa.enc -out ~/.ssh/id_rsa -d\n  - chmod 600 ~/.ssh/id_rsa\n```\n\n还有一点可能会用上，因为 travis 第一次登录远程服务器会出现 SSH 主机验证，这边会有一个主机信任问题。官方给出的方案是添加 addons 配置：\n\n```\naddons:\n  ssh_known_hosts: your-ip\n```\n\n到这里，travis 就能够免密登录自己的远程服务器啦~\n\n## 自动部署\n\n既然已经可以免密登录服务器了，那么写一个部署脚本，在登录时执行该脚本就可以了，一切就是这么顺其自然就好~\n\n### 写部署脚本\n\n我写 Shell 脚本的水平很有限，这边也就给出一个最精简的 Demo 可以参考一下：\n\n```bash\n#!/bin/bash\ncd /path/to/your-project\ngit pull origin master\necho 'travis build done!'\n```\n\n### 执行部署脚本\n\n在 `.travis.yml` 配置文件中写下这么两行：\n\n```\nafter_success:\n  - ssh your-user@your-ip \"./your-shell-script\"\n```\n\n记得将其中的 `your-user`、`your-ip`、`your-shell-script` 都替换成自己的哦！\n\n## 高大上标志\n\n辛苦奋斗了一天，总是希望别人看到自己的劳动成果的，除了写这篇文章意外还能做点什么呢？那自然是给自己的这个项目在 GitHub 上的 README.md 中显示一个高大上的 `build:passing` 标志，就像这样：\n\n![build tag](https://cdn.stephencode.com/article/travis/build-tag.png)\n\n## 总结\n\n这次过程中基本都是从不会到会的一个学习过程，从中了解到不少新东西，也发现一些自己的短板，比如写 shell 脚本。。。\n\n最后，贴出我自己的 `.travis.yml`，里面有关涉及个人隐私的部分我会注释并说明：\n\n```yml\nlanguage: php\n\nphp:\n  - 7.1.9\n  - nightly\n\nenv:\n  - APP_DEBUG=false\n\nbefore_install:\n  - openssl aes-256-cbc -K $encrypted_d89376f3278d_key -iv $encrypted_d89376f3278d_iv\n    -in id_rsa.enc -out ~/.ssh/id_rsa -d\n  - chmod 600 ~/.ssh/id_rsa\n\ninstall:\n  - composer install --prefer-dist --optimize-autoloader --quiet\n\nnotifications:\n  email:\n    recipients:\n    - stephenfxl@gmail.com\n    on_success: always\n    on_failure: always\n\nscript:\n  - phpunit -c phpunit.xml --coverage-text\n\nafter_success:\n  - ssh xxx@xxxx.xxxx.xxxx.xxxx \"./travis_build\" # 请替换成自己的登录IP和登录用户\n\naddons:\n  ssh_known_hosts: xxxx.xxxx.xxxx.xxxx # 请替换成自己的服务器IP\n\n```\n\n本文参考链接：\n\n- [使用Travis进行持续集成](https://www.liaoxuefeng.com/article/0014631488240837e3633d3d180476cb684ba7c10fda6f6000)\n- [Jekyll + Travis CI 自动化部署博客](https://mritd.me/2017/02/25/jekyll-blog-+-travis-ci-auto-deploy/)","slug":"travis-ci-auto-build","published":1,"updated":"2017-09-18T02:44:26.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9cutioh000uds9l3hlklzkm","content":"<p>先引出今天的主角：Travis CI （撒花 ~ 撒花 ~）</p><blockquote><p>Travis CI 是在软件开发领域中的一个在线的，分布式的持续集成服务，用来构建及测试在GitHub托管的代码。</p></blockquote><p><img src=\"https://cdn.stephencode.com/article/travis/travis.jpg\" alt=\"travis ci\"></p><p>最近变得更懒了，觉得每次本地提交代码到 GitHub 上后还要去服务器上拉取文件，完成所谓的部署工作有点麻烦。所以想要让这样的一个过程自动化，那么也就有了今天的这番折腾了~</p><p>其实我的部署之路也是从石器时代逐步到蒸汽时代再到电气时代的。。。</p><p>最开始，通过 FTP 传文件的方式，在每一次对本地文件进行修改并在本地环境测试通过后，通过 FTP 传输到远程服务器，然后在线上看看有没有问题（这里可能有人会问，为什么不中间搞个测试服务器？我一个个人博客网站搞那么多步骤不是得搞死自己么，好吧，其实是我懒。。。），这里有一个很要命的问题，有时候可能一下子改了很多文件，然后等到测试完成要上传的时候。。。嗯，忘记都改了哪些文件了，那怎么办啊，还是有办法的，把整个项目都上传一遍（那时候还没用上 Git 呢，别跟我扯 Git 这一套，我不听我不听我不听）。</p><p>之后，将自己的博客放上了“基友交流网” —— GitHub，然后用上了偶像 Linus 又一具有世界级影响力的版本控制软件，从此再也不用记住自己改了哪些文件了。测试完 push 一下，登录远程服务器 pull 一下，就搞定了。</p><p>年纪大起来了，不想每次 push 上去后还要登录自己的服务器 pull 一下，懒病再次发挥了至关重要的作用，它迫使我接入 Travis CI 持续集成。。。</p><p>然后，嗯，上了 Travis 这条“贼船” ~</p><p>对于 GitHub 的集成 Travis 做得很好，与 Jenkis 不同，Travis 不需要自己在服务器部署服务，并且是高度集成 GitHub 的，所以对于开源项目还是非常友好的。</p><p>开始这次磕磕绊绊的集成之旅~</p><h2 id=\"注册配置-Travis\"><a href=\"#注册配置-Travis\" class=\"headerlink\" title=\"注册配置 Travis\"></a>注册配置 Travis</h2><p>万事开头难，不，每次注册都是最容易的，更何况还是使用 GitHub 第三方授权登录呢~</p><p>注册成功，登录，然后添加自己的 GitHub 上的 repo</p><p><img src=\"https://cdn.stephencode.com/article/travis/add-repo.jpg\" alt=\"add repo\"></p><p>选择其中一个或多个你需要集成的项目，开启 build，也就是点击叉叉变成勾勾的过程。</p><p>假设现在已经对某个项目开启了 Travis，那么先去看看 Settings 里默认开启的那几项，根据自己实际需求进行设置，没什么特殊需求默认的设置就可以了。</p><p>接下来的步骤很清楚，官方也有配图说明：</p><p><img src=\"https://cdn.stephencode.com/article/travis/buil-step.png\" alt=\"build step\"></p><h3 id=\"添加-travis-yml\"><a href=\"#添加-travis-yml\" class=\"headerlink\" title=\"添加 .travis.yml\"></a>添加 .travis.yml</h3><p>说白了接下来的事情都是如何去写这个配置文件，因为 Travis 全是根据这个配置文件去执行相应动作的。</p><p>根据你的语言不同，配置也会有较大差异，因为我的博客使用 PHP 的流行框架 Laravel 写的，所以这里也拿它作为例子，官方给出的最精简的 PHP 配置文件是：</p><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">language:</span> <span class=\"string\">php</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"attr\">php:</span></div><div class=\"line\"><span class=\"bullet\">  -</span> <span class=\"number\">7.1</span><span class=\"number\">.9</span></div><div class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">nightly</span></div></pre></td></tr></table></figure><h3 id=\"触发构建\"><a href=\"#触发构建\" class=\"headerlink\" title=\"触发构建\"></a>触发构建</h3><p>接下来如上面所说的第三步，将这个 <code>.travis.yml</code> 文件提交到 GitHub，那么 Travis 就会自动触发构建任务。</p><p>我就知道第一次不会这么简单的，失败了。。。</p><p>报错原因是执行 <code>phpunit</code> 时提示：</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">PHP Warning:  require(/home/travis/build/stephencode/super-admin/bootstrap/../vendor/autoload.php): failed to open stream: No such file or directory in /home/travis/build/stephencode/super-admin/bootstrap/autoload.php on line 17</div></pre></td></tr></table></figure><p>一看是自己项目的 composer 依赖包的 <code>autoload.php</code> 文件没找到，那应该是没有执行 <code>composer up</code> 之类的操作，结合网上找的资料，比较好的解决方式是在 <code>install</code> 层添加一行：</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">install:</div><div class=\"line\">  - composer install --prefer-dist --optimize-autoloader --quiet</div></pre></td></tr></table></figure><p>这样就不会报上面这个错了，然后会报接下来的一个错。。。</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">1) Tests\\Feature\\RouteTest::testBasicTest</div><div class=\"line\">RuntimeException: No application encryption key has been specified.</div></pre></td></tr></table></figure><p>其实这个是我在 Laravel 里面的 <code>phpunit.xml</code> 没有配置好的缘故。将 <code>&lt;env name=&quot;APP_KEY&quot; value=&quot;base64:xxxxxx=&quot;/&gt;</code> 补上就好，在 <code>&lt;php&gt;&lt;/php&gt;</code> 标签里，这个 key 你自己去生成。</p><p>在经过五六次 build failed 之后，总算天不负我了。</p><p><img src=\"https://cdn.stephencode.com/article/travis/build-failed.png\" alt=\"build failed\"></p><h2 id=\"自动部署到远程服务器\"><a href=\"#自动部署到远程服务器\" class=\"headerlink\" title=\"自动部署到远程服务器\"></a>自动部署到远程服务器</h2><p>现在已经可以自动构建了，那么接下来的一步就是部署到远程服务器。Travis 提供 <code>after_success</code> 来实现这步骤。</p><p>等等，我们要部署到远程服务器，那么势必需要让 Travis 登录到远程服务，那么登录密码怎么处理才能保证安全？这是首先要解决的问题，明文肯定是不行的。</p><h3 id=\"加密登录密码\"><a href=\"#加密登录密码\" class=\"headerlink\" title=\"加密登录密码\"></a>加密登录密码</h3><p>那看来先得解决这个问题，Travis Docs 里也帮我考虑到了这个避不开的问题的解决方案（<a href=\"https://docs.travis-ci.com/user/encrypting-files/\" target=\"_blank\" rel=\"external\">Encrypting Files</a>）</p><p>我们一起来实践一下：</p><p>首先通过 Ruby 的 gem 安装 travis</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">gem install travis</div></pre></td></tr></table></figure><p>哎，重试了几次发现敲完这段 shell 如同石沉大海一般，屁都不放一个。。。就算开了代理还是纹丝不动，没办法只能换镜像了。</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ gem sources -l</div><div class=\"line\"></div><div class=\"line\">*** CURRENT SOURCES ***</div><div class=\"line\"></div><div class=\"line\">https://rubygems.org/</div></pre></td></tr></table></figure><p>查看一下当前的镜像，这货（rubygems）国内出奇的难以访问，网上一搜国内的镜像源，<a href=\"http://gems.ruby-china.org/\" target=\"_blank\" rel=\"external\">Ruby China</a> 的应该很显眼吧~</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ gem update --system</div><div class=\"line\">$ gem sources --add https://gems.ruby-china.org/</div></pre></td></tr></table></figure><p>然后再查看一下 gem 镜像，确保只有 Ruby China 的 gem 源。</p><p>好了，现在可以愉快的安装 travis 了</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo gem install travis</div></pre></td></tr></table></figure><p>接下来让我们先在命令行中登录 Travis</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ travis login</div><div class=\"line\"></div><div class=\"line\">We need your GitHub login to identify you.</div><div class=\"line\">This information will not be sent to Travis CI, only to api.github.com.</div><div class=\"line\">The password will not be displayed.</div><div class=\"line\"></div><div class=\"line\">Try running with --github-token or --auto if you don&apos;t want to enter your password anyway.</div><div class=\"line\"></div><div class=\"line\">Username: xxx@xxx.xxx</div><div class=\"line\">Password for xxx@xxx.xxx: ***</div><div class=\"line\">Successfully logged in as demo!</div></pre></td></tr></table></figure><p>会要求你输入 GitHub 的账号密码，这个是走 GitHub 的服务，所以不用担心密码泄露。</p><p>将目录切换到项目根目录下，也就是 <code>.travis.yml</code> 目录下。因为我们需要让 travis 远程登录自己的服务器，所以需要将本地保存着的 SSH 私钥进行加密处理（默认你也是通过 SSH 免密登录的模式哦，不清楚可以参考我这一篇 <a href=\"https://blog.stephencode.com/p/ssh_login_no_pwd.html\" target=\"_blank\" rel=\"external\">《SSH 系列：免密登录远程服务器》</a>）。</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ travis encrypt-file ~/.ssh/id_rsa --add</div><div class=\"line\"></div><div class=\"line\">Detected repository as xxx/xxx, is this correct? |yes| yes</div><div class=\"line\">encrypting ~/.ssh/id_rsa for xxx/xxx</div><div class=\"line\">storing result as id_rsa.enc</div><div class=\"line\">storing secure env variables for decryption</div><div class=\"line\"></div><div class=\"line\">Make sure to add id_rsa.enc to the git repository.</div><div class=\"line\">Make sure not to add ~/.ssh/id_rsa to the git repository.</div><div class=\"line\">Commit all changes to your .travis.yml.</div></pre></td></tr></table></figure><p>这个时候去看一下当前目录下的 <code>.travis.yml</code>，会多出几行</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">before_install:</div><div class=\"line\">  - openssl aes-256-cbc -K $encrypted_d89376f3278d_key -iv $encrypted_d89376f3278d_iv</div><div class=\"line\">  -in id_rsa.enc -out ~\\/.ssh/id_rsa -d</div></pre></td></tr></table></figure><p>为保证权限正常，多加一行设置权限的 shell</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">before_install:</div><div class=\"line\">  - openssl aes-256-cbc -K $encrypted_d89376f3278d_key -iv $encrypted_d89376f3278d_iv</div><div class=\"line\">    -in id_rsa.enc -out ~/.ssh/id_rsa -d</div><div class=\"line\">  - chmod 600 ~/.ssh/id_rsa</div></pre></td></tr></table></figure><p>还有一点可能会用上，因为 travis 第一次登录远程服务器会出现 SSH 主机验证，这边会有一个主机信任问题。官方给出的方案是添加 addons 配置：</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">addons:</div><div class=\"line\">  ssh_known_hosts: your-ip</div></pre></td></tr></table></figure><p>到这里，travis 就能够免密登录自己的远程服务器啦~</p><h2 id=\"自动部署\"><a href=\"#自动部署\" class=\"headerlink\" title=\"自动部署\"></a>自动部署</h2><p>既然已经可以免密登录服务器了，那么写一个部署脚本，在登录时执行该脚本就可以了，一切就是这么顺其自然就好~</p><h3 id=\"写部署脚本\"><a href=\"#写部署脚本\" class=\"headerlink\" title=\"写部署脚本\"></a>写部署脚本</h3><p>我写 Shell 脚本的水平很有限，这边也就给出一个最精简的 Demo 可以参考一下：</p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#!/bin/bash</span></div><div class=\"line\"><span class=\"built_in\">cd</span> /path/to/your-project</div><div class=\"line\">git pull origin master</div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">'travis build done!'</span></div></pre></td></tr></table></figure><h3 id=\"执行部署脚本\"><a href=\"#执行部署脚本\" class=\"headerlink\" title=\"执行部署脚本\"></a>执行部署脚本</h3><p>在 <code>.travis.yml</code> 配置文件中写下这么两行：</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">after_success:</div><div class=\"line\">  - ssh your-user@your-ip &quot;./your-shell-script&quot;</div></pre></td></tr></table></figure><p>记得将其中的 <code>your-user</code>、<code>your-ip</code>、<code>your-shell-script</code> 都替换成自己的哦！</p><h2 id=\"高大上标志\"><a href=\"#高大上标志\" class=\"headerlink\" title=\"高大上标志\"></a>高大上标志</h2><p>辛苦奋斗了一天，总是希望别人看到自己的劳动成果的，除了写这篇文章意外还能做点什么呢？那自然是给自己的这个项目在 GitHub 上的 README.md 中显示一个高大上的 <code>build:passing</code> 标志，就像这样：</p><p><img src=\"https://cdn.stephencode.com/article/travis/build-tag.png\" alt=\"build tag\"></p><h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>这次过程中基本都是从不会到会的一个学习过程，从中了解到不少新东西，也发现一些自己的短板，比如写 shell 脚本。。。</p><p>最后，贴出我自己的 <code>.travis.yml</code>，里面有关涉及个人隐私的部分我会注释并说明：</p><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">language:</span> <span class=\"string\">php</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"attr\">php:</span></div><div class=\"line\"><span class=\"bullet\">  -</span> <span class=\"number\">7.1</span><span class=\"number\">.9</span></div><div class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">nightly</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"attr\">env:</span></div><div class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">APP_DEBUG=false</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"attr\">before_install:</span></div><div class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">openssl</span> <span class=\"string\">aes-256-cbc</span> <span class=\"bullet\">-K</span> <span class=\"string\">$encrypted_d89376f3278d_key</span> <span class=\"bullet\">-iv</span> <span class=\"string\">$encrypted_d89376f3278d_iv</span></div><div class=\"line\"><span class=\"bullet\">    -</span><span class=\"string\">in</span> <span class=\"string\">id_rsa.enc</span> <span class=\"bullet\">-out</span> <span class=\"string\">~/.ssh/id_rsa</span> <span class=\"bullet\">-d</span></div><div class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">chmod</span> <span class=\"number\">600</span> <span class=\"string\">~/.ssh/id_rsa</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"attr\">install:</span></div><div class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">composer</span> <span class=\"string\">install</span> <span class=\"bullet\">--prefer-dist</span> <span class=\"bullet\">--optimize-autoloader</span> <span class=\"bullet\">--quiet</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"attr\">notifications:</span></div><div class=\"line\"><span class=\"attr\">  email:</span></div><div class=\"line\"><span class=\"attr\">    recipients:</span></div><div class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">stephenfxl@gmail.com</span></div><div class=\"line\"><span class=\"attr\">    on_success:</span> <span class=\"string\">always</span></div><div class=\"line\"><span class=\"attr\">    on_failure:</span> <span class=\"string\">always</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"attr\">script:</span></div><div class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">phpunit</span> <span class=\"bullet\">-c</span> <span class=\"string\">phpunit.xml</span> <span class=\"bullet\">--coverage-text</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"attr\">after_success:</span></div><div class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">ssh</span> <span class=\"string\">xxx@xxxx.xxxx.xxxx.xxxx</span> <span class=\"string\">\"./travis_build\"</span> <span class=\"comment\"># 请替换成自己的登录IP和登录用户</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"attr\">addons:</span></div><div class=\"line\"><span class=\"attr\">  ssh_known_hosts:</span> <span class=\"string\">xxxx.xxxx.xxxx.xxxx</span> <span class=\"comment\"># 请替换成自己的服务器IP</span></div></pre></td></tr></table></figure><p>本文参考链接：</p><ul><li><a href=\"https://www.liaoxuefeng.com/article/0014631488240837e3633d3d180476cb684ba7c10fda6f6000\" target=\"_blank\" rel=\"external\">使用Travis进行持续集成</a></li><li><a href=\"https://mritd.me/2017/02/25/jekyll-blog-+-travis-ci-auto-deploy/\" target=\"_blank\" rel=\"external\">Jekyll + Travis CI 自动化部署博客</a></li></ul>","site":{"data":{}},"excerpt":"","more":"<p>先引出今天的主角：Travis CI （撒花 ~ 撒花 ~）</p><blockquote><p>Travis CI 是在软件开发领域中的一个在线的，分布式的持续集成服务，用来构建及测试在GitHub托管的代码。</p></blockquote><p><img src=\"https://cdn.stephencode.com/article/travis/travis.jpg\" alt=\"travis ci\"></p><p>最近变得更懒了，觉得每次本地提交代码到 GitHub 上后还要去服务器上拉取文件，完成所谓的部署工作有点麻烦。所以想要让这样的一个过程自动化，那么也就有了今天的这番折腾了~</p><p>其实我的部署之路也是从石器时代逐步到蒸汽时代再到电气时代的。。。</p><p>最开始，通过 FTP 传文件的方式，在每一次对本地文件进行修改并在本地环境测试通过后，通过 FTP 传输到远程服务器，然后在线上看看有没有问题（这里可能有人会问，为什么不中间搞个测试服务器？我一个个人博客网站搞那么多步骤不是得搞死自己么，好吧，其实是我懒。。。），这里有一个很要命的问题，有时候可能一下子改了很多文件，然后等到测试完成要上传的时候。。。嗯，忘记都改了哪些文件了，那怎么办啊，还是有办法的，把整个项目都上传一遍（那时候还没用上 Git 呢，别跟我扯 Git 这一套，我不听我不听我不听）。</p><p>之后，将自己的博客放上了“基友交流网” —— GitHub，然后用上了偶像 Linus 又一具有世界级影响力的版本控制软件，从此再也不用记住自己改了哪些文件了。测试完 push 一下，登录远程服务器 pull 一下，就搞定了。</p><p>年纪大起来了，不想每次 push 上去后还要登录自己的服务器 pull 一下，懒病再次发挥了至关重要的作用，它迫使我接入 Travis CI 持续集成。。。</p><p>然后，嗯，上了 Travis 这条“贼船” ~</p><p>对于 GitHub 的集成 Travis 做得很好，与 Jenkis 不同，Travis 不需要自己在服务器部署服务，并且是高度集成 GitHub 的，所以对于开源项目还是非常友好的。</p><p>开始这次磕磕绊绊的集成之旅~</p><h2 id=\"注册配置-Travis\"><a href=\"#注册配置-Travis\" class=\"headerlink\" title=\"注册配置 Travis\"></a>注册配置 Travis</h2><p>万事开头难，不，每次注册都是最容易的，更何况还是使用 GitHub 第三方授权登录呢~</p><p>注册成功，登录，然后添加自己的 GitHub 上的 repo</p><p><img src=\"https://cdn.stephencode.com/article/travis/add-repo.jpg\" alt=\"add repo\"></p><p>选择其中一个或多个你需要集成的项目，开启 build，也就是点击叉叉变成勾勾的过程。</p><p>假设现在已经对某个项目开启了 Travis，那么先去看看 Settings 里默认开启的那几项，根据自己实际需求进行设置，没什么特殊需求默认的设置就可以了。</p><p>接下来的步骤很清楚，官方也有配图说明：</p><p><img src=\"https://cdn.stephencode.com/article/travis/buil-step.png\" alt=\"build step\"></p><h3 id=\"添加-travis-yml\"><a href=\"#添加-travis-yml\" class=\"headerlink\" title=\"添加 .travis.yml\"></a>添加 .travis.yml</h3><p>说白了接下来的事情都是如何去写这个配置文件，因为 Travis 全是根据这个配置文件去执行相应动作的。</p><p>根据你的语言不同，配置也会有较大差异，因为我的博客使用 PHP 的流行框架 Laravel 写的，所以这里也拿它作为例子，官方给出的最精简的 PHP 配置文件是：</p><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">language:</span> <span class=\"string\">php</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"attr\">php:</span></div><div class=\"line\"><span class=\"bullet\">  -</span> <span class=\"number\">7.1</span><span class=\"number\">.9</span></div><div class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">nightly</span></div></pre></td></tr></table></figure><h3 id=\"触发构建\"><a href=\"#触发构建\" class=\"headerlink\" title=\"触发构建\"></a>触发构建</h3><p>接下来如上面所说的第三步，将这个 <code>.travis.yml</code> 文件提交到 GitHub，那么 Travis 就会自动触发构建任务。</p><p>我就知道第一次不会这么简单的，失败了。。。</p><p>报错原因是执行 <code>phpunit</code> 时提示：</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">PHP Warning:  require(/home/travis/build/stephencode/super-admin/bootstrap/../vendor/autoload.php): failed to open stream: No such file or directory in /home/travis/build/stephencode/super-admin/bootstrap/autoload.php on line 17</div></pre></td></tr></table></figure><p>一看是自己项目的 composer 依赖包的 <code>autoload.php</code> 文件没找到，那应该是没有执行 <code>composer up</code> 之类的操作，结合网上找的资料，比较好的解决方式是在 <code>install</code> 层添加一行：</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">install:</div><div class=\"line\">  - composer install --prefer-dist --optimize-autoloader --quiet</div></pre></td></tr></table></figure><p>这样就不会报上面这个错了，然后会报接下来的一个错。。。</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">1) Tests\\Feature\\RouteTest::testBasicTest</div><div class=\"line\">RuntimeException: No application encryption key has been specified.</div></pre></td></tr></table></figure><p>其实这个是我在 Laravel 里面的 <code>phpunit.xml</code> 没有配置好的缘故。将 <code>&lt;env name=&quot;APP_KEY&quot; value=&quot;base64:xxxxxx=&quot;/&gt;</code> 补上就好，在 <code>&lt;php&gt;&lt;/php&gt;</code> 标签里，这个 key 你自己去生成。</p><p>在经过五六次 build failed 之后，总算天不负我了。</p><p><img src=\"https://cdn.stephencode.com/article/travis/build-failed.png\" alt=\"build failed\"></p><h2 id=\"自动部署到远程服务器\"><a href=\"#自动部署到远程服务器\" class=\"headerlink\" title=\"自动部署到远程服务器\"></a>自动部署到远程服务器</h2><p>现在已经可以自动构建了，那么接下来的一步就是部署到远程服务器。Travis 提供 <code>after_success</code> 来实现这步骤。</p><p>等等，我们要部署到远程服务器，那么势必需要让 Travis 登录到远程服务，那么登录密码怎么处理才能保证安全？这是首先要解决的问题，明文肯定是不行的。</p><h3 id=\"加密登录密码\"><a href=\"#加密登录密码\" class=\"headerlink\" title=\"加密登录密码\"></a>加密登录密码</h3><p>那看来先得解决这个问题，Travis Docs 里也帮我考虑到了这个避不开的问题的解决方案（<a href=\"https://docs.travis-ci.com/user/encrypting-files/\" target=\"_blank\" rel=\"external\">Encrypting Files</a>）</p><p>我们一起来实践一下：</p><p>首先通过 Ruby 的 gem 安装 travis</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">gem install travis</div></pre></td></tr></table></figure><p>哎，重试了几次发现敲完这段 shell 如同石沉大海一般，屁都不放一个。。。就算开了代理还是纹丝不动，没办法只能换镜像了。</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ gem sources -l</div><div class=\"line\"></div><div class=\"line\">*** CURRENT SOURCES ***</div><div class=\"line\"></div><div class=\"line\">https://rubygems.org/</div></pre></td></tr></table></figure><p>查看一下当前的镜像，这货（rubygems）国内出奇的难以访问，网上一搜国内的镜像源，<a href=\"http://gems.ruby-china.org/\" target=\"_blank\" rel=\"external\">Ruby China</a> 的应该很显眼吧~</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ gem update --system</div><div class=\"line\">$ gem sources --add https://gems.ruby-china.org/</div></pre></td></tr></table></figure><p>然后再查看一下 gem 镜像，确保只有 Ruby China 的 gem 源。</p><p>好了，现在可以愉快的安装 travis 了</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo gem install travis</div></pre></td></tr></table></figure><p>接下来让我们先在命令行中登录 Travis</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ travis login</div><div class=\"line\"></div><div class=\"line\">We need your GitHub login to identify you.</div><div class=\"line\">This information will not be sent to Travis CI, only to api.github.com.</div><div class=\"line\">The password will not be displayed.</div><div class=\"line\"></div><div class=\"line\">Try running with --github-token or --auto if you don&apos;t want to enter your password anyway.</div><div class=\"line\"></div><div class=\"line\">Username: xxx@xxx.xxx</div><div class=\"line\">Password for xxx@xxx.xxx: ***</div><div class=\"line\">Successfully logged in as demo!</div></pre></td></tr></table></figure><p>会要求你输入 GitHub 的账号密码，这个是走 GitHub 的服务，所以不用担心密码泄露。</p><p>将目录切换到项目根目录下，也就是 <code>.travis.yml</code> 目录下。因为我们需要让 travis 远程登录自己的服务器，所以需要将本地保存着的 SSH 私钥进行加密处理（默认你也是通过 SSH 免密登录的模式哦，不清楚可以参考我这一篇 <a href=\"https://blog.stephencode.com/p/ssh_login_no_pwd.html\" target=\"_blank\" rel=\"external\">《SSH 系列：免密登录远程服务器》</a>）。</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ travis encrypt-file ~/.ssh/id_rsa --add</div><div class=\"line\"></div><div class=\"line\">Detected repository as xxx/xxx, is this correct? |yes| yes</div><div class=\"line\">encrypting ~/.ssh/id_rsa for xxx/xxx</div><div class=\"line\">storing result as id_rsa.enc</div><div class=\"line\">storing secure env variables for decryption</div><div class=\"line\"></div><div class=\"line\">Make sure to add id_rsa.enc to the git repository.</div><div class=\"line\">Make sure not to add ~/.ssh/id_rsa to the git repository.</div><div class=\"line\">Commit all changes to your .travis.yml.</div></pre></td></tr></table></figure><p>这个时候去看一下当前目录下的 <code>.travis.yml</code>，会多出几行</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">before_install:</div><div class=\"line\">  - openssl aes-256-cbc -K $encrypted_d89376f3278d_key -iv $encrypted_d89376f3278d_iv</div><div class=\"line\">  -in id_rsa.enc -out ~\\/.ssh/id_rsa -d</div></pre></td></tr></table></figure><p>为保证权限正常，多加一行设置权限的 shell</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">before_install:</div><div class=\"line\">  - openssl aes-256-cbc -K $encrypted_d89376f3278d_key -iv $encrypted_d89376f3278d_iv</div><div class=\"line\">    -in id_rsa.enc -out ~/.ssh/id_rsa -d</div><div class=\"line\">  - chmod 600 ~/.ssh/id_rsa</div></pre></td></tr></table></figure><p>还有一点可能会用上，因为 travis 第一次登录远程服务器会出现 SSH 主机验证，这边会有一个主机信任问题。官方给出的方案是添加 addons 配置：</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">addons:</div><div class=\"line\">  ssh_known_hosts: your-ip</div></pre></td></tr></table></figure><p>到这里，travis 就能够免密登录自己的远程服务器啦~</p><h2 id=\"自动部署\"><a href=\"#自动部署\" class=\"headerlink\" title=\"自动部署\"></a>自动部署</h2><p>既然已经可以免密登录服务器了，那么写一个部署脚本，在登录时执行该脚本就可以了，一切就是这么顺其自然就好~</p><h3 id=\"写部署脚本\"><a href=\"#写部署脚本\" class=\"headerlink\" title=\"写部署脚本\"></a>写部署脚本</h3><p>我写 Shell 脚本的水平很有限，这边也就给出一个最精简的 Demo 可以参考一下：</p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#!/bin/bash</span></div><div class=\"line\"><span class=\"built_in\">cd</span> /path/to/your-project</div><div class=\"line\">git pull origin master</div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">'travis build done!'</span></div></pre></td></tr></table></figure><h3 id=\"执行部署脚本\"><a href=\"#执行部署脚本\" class=\"headerlink\" title=\"执行部署脚本\"></a>执行部署脚本</h3><p>在 <code>.travis.yml</code> 配置文件中写下这么两行：</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">after_success:</div><div class=\"line\">  - ssh your-user@your-ip &quot;./your-shell-script&quot;</div></pre></td></tr></table></figure><p>记得将其中的 <code>your-user</code>、<code>your-ip</code>、<code>your-shell-script</code> 都替换成自己的哦！</p><h2 id=\"高大上标志\"><a href=\"#高大上标志\" class=\"headerlink\" title=\"高大上标志\"></a>高大上标志</h2><p>辛苦奋斗了一天，总是希望别人看到自己的劳动成果的，除了写这篇文章意外还能做点什么呢？那自然是给自己的这个项目在 GitHub 上的 README.md 中显示一个高大上的 <code>build:passing</code> 标志，就像这样：</p><p><img src=\"https://cdn.stephencode.com/article/travis/build-tag.png\" alt=\"build tag\"></p><h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>这次过程中基本都是从不会到会的一个学习过程，从中了解到不少新东西，也发现一些自己的短板，比如写 shell 脚本。。。</p><p>最后，贴出我自己的 <code>.travis.yml</code>，里面有关涉及个人隐私的部分我会注释并说明：</p><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">language:</span> <span class=\"string\">php</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"attr\">php:</span></div><div class=\"line\"><span class=\"bullet\">  -</span> <span class=\"number\">7.1</span><span class=\"number\">.9</span></div><div class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">nightly</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"attr\">env:</span></div><div class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">APP_DEBUG=false</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"attr\">before_install:</span></div><div class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">openssl</span> <span class=\"string\">aes-256-cbc</span> <span class=\"bullet\">-K</span> <span class=\"string\">$encrypted_d89376f3278d_key</span> <span class=\"bullet\">-iv</span> <span class=\"string\">$encrypted_d89376f3278d_iv</span></div><div class=\"line\"><span class=\"bullet\">    -</span><span class=\"string\">in</span> <span class=\"string\">id_rsa.enc</span> <span class=\"bullet\">-out</span> <span class=\"string\">~/.ssh/id_rsa</span> <span class=\"bullet\">-d</span></div><div class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">chmod</span> <span class=\"number\">600</span> <span class=\"string\">~/.ssh/id_rsa</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"attr\">install:</span></div><div class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">composer</span> <span class=\"string\">install</span> <span class=\"bullet\">--prefer-dist</span> <span class=\"bullet\">--optimize-autoloader</span> <span class=\"bullet\">--quiet</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"attr\">notifications:</span></div><div class=\"line\"><span class=\"attr\">  email:</span></div><div class=\"line\"><span class=\"attr\">    recipients:</span></div><div class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">stephenfxl@gmail.com</span></div><div class=\"line\"><span class=\"attr\">    on_success:</span> <span class=\"string\">always</span></div><div class=\"line\"><span class=\"attr\">    on_failure:</span> <span class=\"string\">always</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"attr\">script:</span></div><div class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">phpunit</span> <span class=\"bullet\">-c</span> <span class=\"string\">phpunit.xml</span> <span class=\"bullet\">--coverage-text</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"attr\">after_success:</span></div><div class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">ssh</span> <span class=\"string\">xxx@xxxx.xxxx.xxxx.xxxx</span> <span class=\"string\">\"./travis_build\"</span> <span class=\"comment\"># 请替换成自己的登录IP和登录用户</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"attr\">addons:</span></div><div class=\"line\"><span class=\"attr\">  ssh_known_hosts:</span> <span class=\"string\">xxxx.xxxx.xxxx.xxxx</span> <span class=\"comment\"># 请替换成自己的服务器IP</span></div></pre></td></tr></table></figure><p>本文参考链接：</p><ul><li><a href=\"https://www.liaoxuefeng.com/article/0014631488240837e3633d3d180476cb684ba7c10fda6f6000\" target=\"_blank\" rel=\"external\">使用Travis进行持续集成</a></li><li><a href=\"https://mritd.me/2017/02/25/jekyll-blog-+-travis-ci-auto-deploy/\" target=\"_blank\" rel=\"external\">Jekyll + Travis CI 自动化部署博客</a></li></ul>"},{"title":"npm相关资源整理","date":"2017-09-19T11:41:35.000Z","author":{"name":"悔惜晟","link":"http://huixisheng.github.io"},"_content":"\n> npm（全称Node Package Manager，即node包管理器）是Node.js默认的、以JavaScript编写的软件包管理系统。 - [来自wikipedia](https://zh.wikipedia.org/wiki/Npm)\n\n本文首发在[美妆心得技术博客](https://cosmeapp.github.io/2017/09/19/npm-source/)，同步到前端开发者说博客。\n\n## npm镜像 ##\n\n```\n$ npm config set registry \"http://registry.npm.taobao.org\"\n```\n\n其他镜像，用于提高安装速度，比如用`vue-cli`初始化项目。在`~/.npmrc`中添加如下配置\n\n```\nelectron_mirror=https://npm.taobao.org/mirrors/electron/\nsass_binary_site=https://npm.taobao.org/mirrors/node-sass/\nphantomjs_cdnurl=http://npm.taobao.org/mirrors/phantomjs\n// https://gist.github.com/52cik/c1de8926e20971f415dd\nchromedriver_cdnurl=http://cdn.npm.taobao.org/dist/chromedriver\n```\n\n关于关于更多的镜像资料，可以参考我之前写的文章[国内镜像源整理](https://huixisheng.github.io/%2Fmirror%2F)\n\n\n## npm搜索 ##\n\n[https://libraries.io/npm](https://libraries.io/npm) 相关资源的各种排行榜\n\n[npms](https://npms.io/) A better and open source search for node packages\n\n[recently updated packages](https://www.npmjs.com/browse/updated)\n\n[npm 资源的cdn](https://unpkg.com/#/)\n\n[整理的Top100](https://github.com/anvaka/npmrank/tree/master/sample)\n\n[most depended-upon packages](https://www.npmjs.com/browse/depended)\n\n[Top 30 NPM Packages for Node.js Developers 2016](https://colorlib.com/wp/npm-packages-node-js/)\n\n[most depended-upon packages](https://www.npmjs.com/browse/depended)\n\n## 包管理工具 ##\n\n[pnpm](https://pnpm.js.org/) Fast, disk space efficient package manager\n\n[cnpm](https://npm.taobao.org/) 淘宝 NPM 镜像\n\n[yarn](https://yarnpkg.com/zh-Hans/)\n> Yarn 对你的代码来说是一个包管理器， 它允许你使用并分享代码给全世界的开发者， Yarn 做这些快捷、安全、可靠，所以你不用担心什么。\n\n设置国内镜像\n```\n$ yarn config set registry https://registry.npm.taobao.org --global\n$ yarn config set disturl https://npm.taobao.org/dist --global\n```\n\n这个facebook应该不会加类试React的协议吧？\n\n会生成一个`yarn.lock`锁定依赖。\n\n优点(摘自官网)\n\n- 离线模式\n- 确定性\n- 网络性能\n- 相同的软件包\n- 网络适应\n- 扁平模式\n\n例外有看到社区\n\n[「CYarn」使用 cnpm 源的 Yarn](https://cnodejs.org/topic/57ff0541487e1e4578afb48d)\n\n[smart-npm](https://github.com/qiu8310/smart-npm/) 在各大社区发布后，就没看到更多了。\n\n[npx: npm 5.2.0 内置的包执行器](https://zhuanlan.zhihu.com/p/27832595)\n\n推荐阅读\n\n- [一文看懂npm、yarn、pnpm之间的区别](http://geek.csdn.net/news/detail/197339)\n- [Yarn vs npm：你需要知道的一切](https://zhuanlan.zhihu.com/p/23493436)\n- [更多npm与yarn的性能对比](https://github.com/pnpm/node-package-manager-benchmark)\n- [npm 5.0 新版功能特性解析及与 yarn 评测对比](https://mp.weixin.qq.com/s/9BGiuO-clwe4AAlV9Puqng)\n- [npm、bower、jamjs 等包管理器，哪个比较好用？](https://www.zhihu.com/question/24414899)\n- [如何评价Facebook推出的JavaScript模块管理器yarn？](https://www.zhihu.com/question/51502849)\n- [在中国，安装 & 升级 npm 依赖的正确方法]()\n\n## 文档 ##\n\n- [https://docs.npmjs.com/](https://docs.npmjs.com/)\n- [semver语义化版本 2.0.0](http://semver.org/lang/zh-CN/)\n- [Npm的配置管理及设置代理](http://www.cnblogs.com/huang0925/archive/2013/05/17/3083207.html)\n\n\n## 依赖升级 ##\n\n见 [npm update [-g] [<pkg>...]](https://docs.npmjs.com/cli/update)\n\n[npm-check-updates](https://www.npmjs.com/package/npm-check-updates)\n\n[npm-check](https://github.com/dylang/npm-check)\n> Check for outdated, incorrect, and unused dependencies.\n\n![](/images/npm/npm-check.jpeg)\n\n相关的介绍可以参考[Node.js开源项目推荐：npm模块升级工具 npm-check](https://cnodejs.org/topic/5705cd70c5f5b4a959e9192a)\n\n### 扩展阅读 ###\n- [如何将package.json中的每个依赖关系更新为最新版本？](https://gxnotes.com/article/12726.html)\n\n## Node升级 ##\n### [n](https://github.com/tj/n)  ###\n> Node.js version management: no subshells, no profile setup, no convoluted API, just simple.\n\n### [nvm](https://github.com/creationix/nvm) ###\n> Node Version Manager - Simple bash script to manage multiple active node.js versions\n\n## 其他 ##\n\n[Cost of modules](https://github.com/siddharthkp/cost-of-modules)\n>Find out which of your dependencies is slowing you down\n\n![](https://raw.githubusercontent.com/siddharthkp/cost-of-modules/master/screenshot.jpg)\n\n[https://github.com/sindresorhus/awesome-npm](https://github.com/sindresorhus/awesome-npm)\n\n[【译】用8个 npm 技巧打动你的同事](https://juejin.im/post/59256b6f8d6d810058045336)","source":"_posts/npm-source.md","raw":"---\ntitle: npm相关资源整理\ndate: 2017-09-19 19:41:35\nauthor:\n  name: 悔惜晟\n  link: http://huixisheng.github.io\ntags:\n- nodejs\n- npm\n---\n\n> npm（全称Node Package Manager，即node包管理器）是Node.js默认的、以JavaScript编写的软件包管理系统。 - [来自wikipedia](https://zh.wikipedia.org/wiki/Npm)\n\n本文首发在[美妆心得技术博客](https://cosmeapp.github.io/2017/09/19/npm-source/)，同步到前端开发者说博客。\n\n## npm镜像 ##\n\n```\n$ npm config set registry \"http://registry.npm.taobao.org\"\n```\n\n其他镜像，用于提高安装速度，比如用`vue-cli`初始化项目。在`~/.npmrc`中添加如下配置\n\n```\nelectron_mirror=https://npm.taobao.org/mirrors/electron/\nsass_binary_site=https://npm.taobao.org/mirrors/node-sass/\nphantomjs_cdnurl=http://npm.taobao.org/mirrors/phantomjs\n// https://gist.github.com/52cik/c1de8926e20971f415dd\nchromedriver_cdnurl=http://cdn.npm.taobao.org/dist/chromedriver\n```\n\n关于关于更多的镜像资料，可以参考我之前写的文章[国内镜像源整理](https://huixisheng.github.io/%2Fmirror%2F)\n\n\n## npm搜索 ##\n\n[https://libraries.io/npm](https://libraries.io/npm) 相关资源的各种排行榜\n\n[npms](https://npms.io/) A better and open source search for node packages\n\n[recently updated packages](https://www.npmjs.com/browse/updated)\n\n[npm 资源的cdn](https://unpkg.com/#/)\n\n[整理的Top100](https://github.com/anvaka/npmrank/tree/master/sample)\n\n[most depended-upon packages](https://www.npmjs.com/browse/depended)\n\n[Top 30 NPM Packages for Node.js Developers 2016](https://colorlib.com/wp/npm-packages-node-js/)\n\n[most depended-upon packages](https://www.npmjs.com/browse/depended)\n\n## 包管理工具 ##\n\n[pnpm](https://pnpm.js.org/) Fast, disk space efficient package manager\n\n[cnpm](https://npm.taobao.org/) 淘宝 NPM 镜像\n\n[yarn](https://yarnpkg.com/zh-Hans/)\n> Yarn 对你的代码来说是一个包管理器， 它允许你使用并分享代码给全世界的开发者， Yarn 做这些快捷、安全、可靠，所以你不用担心什么。\n\n设置国内镜像\n```\n$ yarn config set registry https://registry.npm.taobao.org --global\n$ yarn config set disturl https://npm.taobao.org/dist --global\n```\n\n这个facebook应该不会加类试React的协议吧？\n\n会生成一个`yarn.lock`锁定依赖。\n\n优点(摘自官网)\n\n- 离线模式\n- 确定性\n- 网络性能\n- 相同的软件包\n- 网络适应\n- 扁平模式\n\n例外有看到社区\n\n[「CYarn」使用 cnpm 源的 Yarn](https://cnodejs.org/topic/57ff0541487e1e4578afb48d)\n\n[smart-npm](https://github.com/qiu8310/smart-npm/) 在各大社区发布后，就没看到更多了。\n\n[npx: npm 5.2.0 内置的包执行器](https://zhuanlan.zhihu.com/p/27832595)\n\n推荐阅读\n\n- [一文看懂npm、yarn、pnpm之间的区别](http://geek.csdn.net/news/detail/197339)\n- [Yarn vs npm：你需要知道的一切](https://zhuanlan.zhihu.com/p/23493436)\n- [更多npm与yarn的性能对比](https://github.com/pnpm/node-package-manager-benchmark)\n- [npm 5.0 新版功能特性解析及与 yarn 评测对比](https://mp.weixin.qq.com/s/9BGiuO-clwe4AAlV9Puqng)\n- [npm、bower、jamjs 等包管理器，哪个比较好用？](https://www.zhihu.com/question/24414899)\n- [如何评价Facebook推出的JavaScript模块管理器yarn？](https://www.zhihu.com/question/51502849)\n- [在中国，安装 & 升级 npm 依赖的正确方法]()\n\n## 文档 ##\n\n- [https://docs.npmjs.com/](https://docs.npmjs.com/)\n- [semver语义化版本 2.0.0](http://semver.org/lang/zh-CN/)\n- [Npm的配置管理及设置代理](http://www.cnblogs.com/huang0925/archive/2013/05/17/3083207.html)\n\n\n## 依赖升级 ##\n\n见 [npm update [-g] [<pkg>...]](https://docs.npmjs.com/cli/update)\n\n[npm-check-updates](https://www.npmjs.com/package/npm-check-updates)\n\n[npm-check](https://github.com/dylang/npm-check)\n> Check for outdated, incorrect, and unused dependencies.\n\n![](/images/npm/npm-check.jpeg)\n\n相关的介绍可以参考[Node.js开源项目推荐：npm模块升级工具 npm-check](https://cnodejs.org/topic/5705cd70c5f5b4a959e9192a)\n\n### 扩展阅读 ###\n- [如何将package.json中的每个依赖关系更新为最新版本？](https://gxnotes.com/article/12726.html)\n\n## Node升级 ##\n### [n](https://github.com/tj/n)  ###\n> Node.js version management: no subshells, no profile setup, no convoluted API, just simple.\n\n### [nvm](https://github.com/creationix/nvm) ###\n> Node Version Manager - Simple bash script to manage multiple active node.js versions\n\n## 其他 ##\n\n[Cost of modules](https://github.com/siddharthkp/cost-of-modules)\n>Find out which of your dependencies is slowing you down\n\n![](https://raw.githubusercontent.com/siddharthkp/cost-of-modules/master/screenshot.jpg)\n\n[https://github.com/sindresorhus/awesome-npm](https://github.com/sindresorhus/awesome-npm)\n\n[【译】用8个 npm 技巧打动你的同事](https://juejin.im/post/59256b6f8d6d810058045336)","slug":"npm-source","published":1,"updated":"2017-09-20T16:18:45.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9cutioj000vds9la4plgcge","content":"<blockquote><p>npm（全称Node Package Manager，即node包管理器）是Node.js默认的、以JavaScript编写的软件包管理系统。 - <a href=\"https://zh.wikipedia.org/wiki/Npm\" target=\"_blank\" rel=\"external\">来自wikipedia</a></p></blockquote><p>本文首发在<a href=\"https://cosmeapp.github.io/2017/09/19/npm-source/\">美妆心得技术博客</a>，同步到前端开发者说博客。</p><h2 id=\"npm镜像\"><a href=\"#npm镜像\" class=\"headerlink\" title=\"npm镜像\"></a>npm镜像</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm config set registry &quot;http://registry.npm.taobao.org&quot;</div></pre></td></tr></table></figure><p>其他镜像，用于提高安装速度，比如用<code>vue-cli</code>初始化项目。在<code>~/.npmrc</code>中添加如下配置</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">electron_mirror=https://npm.taobao.org/mirrors/electron/</div><div class=\"line\">sass_binary_site=https://npm.taobao.org/mirrors/node-sass/</div><div class=\"line\">phantomjs_cdnurl=http://npm.taobao.org/mirrors/phantomjs</div><div class=\"line\">// https://gist.github.com/52cik/c1de8926e20971f415dd</div><div class=\"line\">chromedriver_cdnurl=http://cdn.npm.taobao.org/dist/chromedriver</div></pre></td></tr></table></figure><p>关于关于更多的镜像资料，可以参考我之前写的文章<a href=\"https://huixisheng.github.io/%2Fmirror%2F\" target=\"_blank\" rel=\"external\">国内镜像源整理</a></p><h2 id=\"npm搜索\"><a href=\"#npm搜索\" class=\"headerlink\" title=\"npm搜索\"></a>npm搜索</h2><p><a href=\"https://libraries.io/npm\" target=\"_blank\" rel=\"external\">https://libraries.io/npm</a> 相关资源的各种排行榜</p><p><a href=\"https://npms.io/\" target=\"_blank\" rel=\"external\">npms</a> A better and open source search for node packages</p><p><a href=\"https://www.npmjs.com/browse/updated\" target=\"_blank\" rel=\"external\">recently updated packages</a></p><p><a href=\"https://unpkg.com/#/\" target=\"_blank\" rel=\"external\">npm 资源的cdn</a></p><p><a href=\"https://github.com/anvaka/npmrank/tree/master/sample\" target=\"_blank\" rel=\"external\">整理的Top100</a></p><p><a href=\"https://www.npmjs.com/browse/depended\" target=\"_blank\" rel=\"external\">most depended-upon packages</a></p><p><a href=\"https://colorlib.com/wp/npm-packages-node-js/\" target=\"_blank\" rel=\"external\">Top 30 NPM Packages for Node.js Developers 2016</a></p><p><a href=\"https://www.npmjs.com/browse/depended\" target=\"_blank\" rel=\"external\">most depended-upon packages</a></p><h2 id=\"包管理工具\"><a href=\"#包管理工具\" class=\"headerlink\" title=\"包管理工具\"></a>包管理工具</h2><p><a href=\"https://pnpm.js.org/\" target=\"_blank\" rel=\"external\">pnpm</a> Fast, disk space efficient package manager</p><p><a href=\"https://npm.taobao.org/\" target=\"_blank\" rel=\"external\">cnpm</a> 淘宝 NPM 镜像</p><p><a href=\"https://yarnpkg.com/zh-Hans/\" target=\"_blank\" rel=\"external\">yarn</a></p><blockquote><p>Yarn 对你的代码来说是一个包管理器， 它允许你使用并分享代码给全世界的开发者， Yarn 做这些快捷、安全、可靠，所以你不用担心什么。</p></blockquote><p>设置国内镜像<br></p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ yarn config set registry https://registry.npm.taobao.org --global</div><div class=\"line\">$ yarn config set disturl https://npm.taobao.org/dist --global</div></pre></td></tr></table></figure><p></p><p>这个facebook应该不会加类试React的协议吧？</p><p>会生成一个<code>yarn.lock</code>锁定依赖。</p><p>优点(摘自官网)</p><ul><li>离线模式</li><li>确定性</li><li>网络性能</li><li>相同的软件包</li><li>网络适应</li><li>扁平模式</li></ul><p>例外有看到社区</p><p><a href=\"https://cnodejs.org/topic/57ff0541487e1e4578afb48d\" target=\"_blank\" rel=\"external\">「CYarn」使用 cnpm 源的 Yarn</a></p><p><a href=\"https://github.com/qiu8310/smart-npm/\" target=\"_blank\" rel=\"external\">smart-npm</a> 在各大社区发布后，就没看到更多了。</p><p><a href=\"https://zhuanlan.zhihu.com/p/27832595\" target=\"_blank\" rel=\"external\">npx: npm 5.2.0 内置的包执行器</a></p><p>推荐阅读</p><ul><li><a href=\"http://geek.csdn.net/news/detail/197339\" target=\"_blank\" rel=\"external\">一文看懂npm、yarn、pnpm之间的区别</a></li><li><a href=\"https://zhuanlan.zhihu.com/p/23493436\" target=\"_blank\" rel=\"external\">Yarn vs npm：你需要知道的一切</a></li><li><a href=\"https://github.com/pnpm/node-package-manager-benchmark\" target=\"_blank\" rel=\"external\">更多npm与yarn的性能对比</a></li><li><a href=\"https://mp.weixin.qq.com/s/9BGiuO-clwe4AAlV9Puqng\" target=\"_blank\" rel=\"external\">npm 5.0 新版功能特性解析及与 yarn 评测对比</a></li><li><a href=\"https://www.zhihu.com/question/24414899\" target=\"_blank\" rel=\"external\">npm、bower、jamjs 等包管理器，哪个比较好用？</a></li><li><a href=\"https://www.zhihu.com/question/51502849\" target=\"_blank\" rel=\"external\">如何评价Facebook推出的JavaScript模块管理器yarn？</a></li><li><a href=\"\">在中国，安装 &amp; 升级 npm 依赖的正确方法</a></li></ul><h2 id=\"文档\"><a href=\"#文档\" class=\"headerlink\" title=\"文档\"></a>文档</h2><ul><li><a href=\"https://docs.npmjs.com/\" target=\"_blank\" rel=\"external\">https://docs.npmjs.com/</a></li><li><a href=\"http://semver.org/lang/zh-CN/\" target=\"_blank\" rel=\"external\">semver语义化版本 2.0.0</a></li><li><a href=\"http://www.cnblogs.com/huang0925/archive/2013/05/17/3083207.html\" target=\"_blank\" rel=\"external\">Npm的配置管理及设置代理</a></li></ul><h2 id=\"依赖升级\"><a href=\"#依赖升级\" class=\"headerlink\" title=\"依赖升级\"></a>依赖升级</h2><p>见 <a href=\"https://docs.npmjs.com/cli/update\" target=\"_blank\" rel=\"external\">npm update [-g] [<pkg>…]</pkg></a></p><p><a href=\"https://www.npmjs.com/package/npm-check-updates\" target=\"_blank\" rel=\"external\">npm-check-updates</a></p><p><a href=\"https://github.com/dylang/npm-check\" target=\"_blank\" rel=\"external\">npm-check</a></p><blockquote><p>Check for outdated, incorrect, and unused dependencies.</p></blockquote><p><img src=\"/images/npm/npm-check.jpeg\" alt=\"\"></p><p>相关的介绍可以参考<a href=\"https://cnodejs.org/topic/5705cd70c5f5b4a959e9192a\" target=\"_blank\" rel=\"external\">Node.js开源项目推荐：npm模块升级工具 npm-check</a></p><h3 id=\"扩展阅读\"><a href=\"#扩展阅读\" class=\"headerlink\" title=\"扩展阅读\"></a>扩展阅读</h3><ul><li><a href=\"https://gxnotes.com/article/12726.html\" target=\"_blank\" rel=\"external\">如何将package.json中的每个依赖关系更新为最新版本？</a></li></ul><h2 id=\"Node升级\"><a href=\"#Node升级\" class=\"headerlink\" title=\"Node升级\"></a>Node升级</h2><h3 id=\"n\"><a href=\"#n\" class=\"headerlink\" title=\"n\"></a><a href=\"https://github.com/tj/n\" target=\"_blank\" rel=\"external\">n</a></h3><blockquote><p>Node.js version management: no subshells, no profile setup, no convoluted API, just simple.</p></blockquote><h3 id=\"nvm\"><a href=\"#nvm\" class=\"headerlink\" title=\"nvm\"></a><a href=\"https://github.com/creationix/nvm\" target=\"_blank\" rel=\"external\">nvm</a></h3><blockquote><p>Node Version Manager - Simple bash script to manage multiple active node.js versions</p></blockquote><h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><p><a href=\"https://github.com/siddharthkp/cost-of-modules\" target=\"_blank\" rel=\"external\">Cost of modules</a></p><blockquote><p>Find out which of your dependencies is slowing you down</p></blockquote><p><img src=\"https://raw.githubusercontent.com/siddharthkp/cost-of-modules/master/screenshot.jpg\" alt=\"\"></p><p><a href=\"https://github.com/sindresorhus/awesome-npm\" target=\"_blank\" rel=\"external\">https://github.com/sindresorhus/awesome-npm</a></p><p><a href=\"https://juejin.im/post/59256b6f8d6d810058045336\" target=\"_blank\" rel=\"external\">【译】用8个 npm 技巧打动你的同事</a></p>","site":{"data":{}},"excerpt":"","more":"<blockquote><p>npm（全称Node Package Manager，即node包管理器）是Node.js默认的、以JavaScript编写的软件包管理系统。 - <a href=\"https://zh.wikipedia.org/wiki/Npm\" target=\"_blank\" rel=\"external\">来自wikipedia</a></p></blockquote><p>本文首发在<a href=\"https://cosmeapp.github.io/2017/09/19/npm-source/\">美妆心得技术博客</a>，同步到前端开发者说博客。</p><h2 id=\"npm镜像\"><a href=\"#npm镜像\" class=\"headerlink\" title=\"npm镜像\"></a>npm镜像</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm config set registry &quot;http://registry.npm.taobao.org&quot;</div></pre></td></tr></table></figure><p>其他镜像，用于提高安装速度，比如用<code>vue-cli</code>初始化项目。在<code>~/.npmrc</code>中添加如下配置</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">electron_mirror=https://npm.taobao.org/mirrors/electron/</div><div class=\"line\">sass_binary_site=https://npm.taobao.org/mirrors/node-sass/</div><div class=\"line\">phantomjs_cdnurl=http://npm.taobao.org/mirrors/phantomjs</div><div class=\"line\">// https://gist.github.com/52cik/c1de8926e20971f415dd</div><div class=\"line\">chromedriver_cdnurl=http://cdn.npm.taobao.org/dist/chromedriver</div></pre></td></tr></table></figure><p>关于关于更多的镜像资料，可以参考我之前写的文章<a href=\"https://huixisheng.github.io/%2Fmirror%2F\" target=\"_blank\" rel=\"external\">国内镜像源整理</a></p><h2 id=\"npm搜索\"><a href=\"#npm搜索\" class=\"headerlink\" title=\"npm搜索\"></a>npm搜索</h2><p><a href=\"https://libraries.io/npm\" target=\"_blank\" rel=\"external\">https://libraries.io/npm</a> 相关资源的各种排行榜</p><p><a href=\"https://npms.io/\" target=\"_blank\" rel=\"external\">npms</a> A better and open source search for node packages</p><p><a href=\"https://www.npmjs.com/browse/updated\" target=\"_blank\" rel=\"external\">recently updated packages</a></p><p><a href=\"https://unpkg.com/#/\" target=\"_blank\" rel=\"external\">npm 资源的cdn</a></p><p><a href=\"https://github.com/anvaka/npmrank/tree/master/sample\" target=\"_blank\" rel=\"external\">整理的Top100</a></p><p><a href=\"https://www.npmjs.com/browse/depended\" target=\"_blank\" rel=\"external\">most depended-upon packages</a></p><p><a href=\"https://colorlib.com/wp/npm-packages-node-js/\" target=\"_blank\" rel=\"external\">Top 30 NPM Packages for Node.js Developers 2016</a></p><p><a href=\"https://www.npmjs.com/browse/depended\" target=\"_blank\" rel=\"external\">most depended-upon packages</a></p><h2 id=\"包管理工具\"><a href=\"#包管理工具\" class=\"headerlink\" title=\"包管理工具\"></a>包管理工具</h2><p><a href=\"https://pnpm.js.org/\" target=\"_blank\" rel=\"external\">pnpm</a> Fast, disk space efficient package manager</p><p><a href=\"https://npm.taobao.org/\" target=\"_blank\" rel=\"external\">cnpm</a> 淘宝 NPM 镜像</p><p><a href=\"https://yarnpkg.com/zh-Hans/\" target=\"_blank\" rel=\"external\">yarn</a></p><blockquote><p>Yarn 对你的代码来说是一个包管理器， 它允许你使用并分享代码给全世界的开发者， Yarn 做这些快捷、安全、可靠，所以你不用担心什么。</p></blockquote><p>设置国内镜像<br></p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ yarn config set registry https://registry.npm.taobao.org --global</div><div class=\"line\">$ yarn config set disturl https://npm.taobao.org/dist --global</div></pre></td></tr></table></figure><p></p><p>这个facebook应该不会加类试React的协议吧？</p><p>会生成一个<code>yarn.lock</code>锁定依赖。</p><p>优点(摘自官网)</p><ul><li>离线模式</li><li>确定性</li><li>网络性能</li><li>相同的软件包</li><li>网络适应</li><li>扁平模式</li></ul><p>例外有看到社区</p><p><a href=\"https://cnodejs.org/topic/57ff0541487e1e4578afb48d\" target=\"_blank\" rel=\"external\">「CYarn」使用 cnpm 源的 Yarn</a></p><p><a href=\"https://github.com/qiu8310/smart-npm/\" target=\"_blank\" rel=\"external\">smart-npm</a> 在各大社区发布后，就没看到更多了。</p><p><a href=\"https://zhuanlan.zhihu.com/p/27832595\" target=\"_blank\" rel=\"external\">npx: npm 5.2.0 内置的包执行器</a></p><p>推荐阅读</p><ul><li><a href=\"http://geek.csdn.net/news/detail/197339\" target=\"_blank\" rel=\"external\">一文看懂npm、yarn、pnpm之间的区别</a></li><li><a href=\"https://zhuanlan.zhihu.com/p/23493436\" target=\"_blank\" rel=\"external\">Yarn vs npm：你需要知道的一切</a></li><li><a href=\"https://github.com/pnpm/node-package-manager-benchmark\" target=\"_blank\" rel=\"external\">更多npm与yarn的性能对比</a></li><li><a href=\"https://mp.weixin.qq.com/s/9BGiuO-clwe4AAlV9Puqng\" target=\"_blank\" rel=\"external\">npm 5.0 新版功能特性解析及与 yarn 评测对比</a></li><li><a href=\"https://www.zhihu.com/question/24414899\" target=\"_blank\" rel=\"external\">npm、bower、jamjs 等包管理器，哪个比较好用？</a></li><li><a href=\"https://www.zhihu.com/question/51502849\" target=\"_blank\" rel=\"external\">如何评价Facebook推出的JavaScript模块管理器yarn？</a></li><li><a href=\"\">在中国，安装 &amp; 升级 npm 依赖的正确方法</a></li></ul><h2 id=\"文档\"><a href=\"#文档\" class=\"headerlink\" title=\"文档\"></a>文档</h2><ul><li><a href=\"https://docs.npmjs.com/\" target=\"_blank\" rel=\"external\">https://docs.npmjs.com/</a></li><li><a href=\"http://semver.org/lang/zh-CN/\" target=\"_blank\" rel=\"external\">semver语义化版本 2.0.0</a></li><li><a href=\"http://www.cnblogs.com/huang0925/archive/2013/05/17/3083207.html\" target=\"_blank\" rel=\"external\">Npm的配置管理及设置代理</a></li></ul><h2 id=\"依赖升级\"><a href=\"#依赖升级\" class=\"headerlink\" title=\"依赖升级\"></a>依赖升级</h2><p>见 <a href=\"https://docs.npmjs.com/cli/update\" target=\"_blank\" rel=\"external\">npm update [-g] [<pkg>…]</pkg></a></p><p><a href=\"https://www.npmjs.com/package/npm-check-updates\" target=\"_blank\" rel=\"external\">npm-check-updates</a></p><p><a href=\"https://github.com/dylang/npm-check\" target=\"_blank\" rel=\"external\">npm-check</a></p><blockquote><p>Check for outdated, incorrect, and unused dependencies.</p></blockquote><p><img src=\"/images/npm/npm-check.jpeg\" alt=\"\"></p><p>相关的介绍可以参考<a href=\"https://cnodejs.org/topic/5705cd70c5f5b4a959e9192a\" target=\"_blank\" rel=\"external\">Node.js开源项目推荐：npm模块升级工具 npm-check</a></p><h3 id=\"扩展阅读\"><a href=\"#扩展阅读\" class=\"headerlink\" title=\"扩展阅读\"></a>扩展阅读</h3><ul><li><a href=\"https://gxnotes.com/article/12726.html\" target=\"_blank\" rel=\"external\">如何将package.json中的每个依赖关系更新为最新版本？</a></li></ul><h2 id=\"Node升级\"><a href=\"#Node升级\" class=\"headerlink\" title=\"Node升级\"></a>Node升级</h2><h3 id=\"n\"><a href=\"#n\" class=\"headerlink\" title=\"n\"></a><a href=\"https://github.com/tj/n\" target=\"_blank\" rel=\"external\">n</a></h3><blockquote><p>Node.js version management: no subshells, no profile setup, no convoluted API, just simple.</p></blockquote><h3 id=\"nvm\"><a href=\"#nvm\" class=\"headerlink\" title=\"nvm\"></a><a href=\"https://github.com/creationix/nvm\" target=\"_blank\" rel=\"external\">nvm</a></h3><blockquote><p>Node Version Manager - Simple bash script to manage multiple active node.js versions</p></blockquote><h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><p><a href=\"https://github.com/siddharthkp/cost-of-modules\" target=\"_blank\" rel=\"external\">Cost of modules</a></p><blockquote><p>Find out which of your dependencies is slowing you down</p></blockquote><p><img src=\"https://raw.githubusercontent.com/siddharthkp/cost-of-modules/master/screenshot.jpg\" alt=\"\"></p><p><a href=\"https://github.com/sindresorhus/awesome-npm\" target=\"_blank\" rel=\"external\">https://github.com/sindresorhus/awesome-npm</a></p><p><a href=\"https://juejin.im/post/59256b6f8d6d810058045336\" target=\"_blank\" rel=\"external\">【译】用8个 npm 技巧打动你的同事</a></p>"},{"title":"美妆心得技术周刊2017-05-06","date":"2017-05-06T14:16:48.000Z","_content":"\n> IOS\n\niOS开发－学会使用代码块，提高你的开发效率 https://mp.weixin.qq.com/s?__biz=MzA3NzM0NzkxMQ==&mid=2655358675&idx=1&sn=caf5ea51f4d8b3284b18c6bb631ec7ea&chksm=84e243fbb395caed550d35db33dbfa4629c72d8ca340c710638c1bb5aec083ce476b8a3c13cc&mpshare=1&scene=1&srcid=0507cMQaRKPLdbwzKShnoaNi&key=97813e881d714997ebc34e81922f3ce8df22e2b7a61c83440e781b4f5749e3d0fb06f481815c1ec13ca5743de0f30e03e2d0108c2589663accc217d6991875da41cc6bf4be2afa1ae7be9a821fd6e5fd&ascene=0&uin=NzA4OTE1MDU%3D&devicetype=iMac%20MacBookPro11%2C1%20OSX%20OSX%2010.12.4%20build(16E195)&version=12020510&nettype=WIFI&fontScale=100&pass_ticket=eQ%2FSDeKzSyc4kpzbZ5Yh7DB6ushIrnmKlQfL0uhXZ1M%3D\n\n关于app逆向开发http://al1020119.github.io/blog/2016/03/08/fanbianyihefangfanbianyi/ http://www.jianshu.com/p/7c41b03c9eb3\n\n> 前端\n\niOS开发者的Weex伪最佳实践指北 https://media.weibo.cn/article?id=2309614103795469624797&from=groupmessage&isappinstalled=1&jumpfrom=weibocom\n\n文件上传那些事儿 https://www.qcloud.com/community/article/985614?fromSource=gwzcw.114059.114059.114059 之前自己也写过upload，觉得这个整理的蛮全面\n\n了解css grid布局 http://www.w3cplus.com/css3/playing-with-css-grid-layout.html\n\n> 后台\n\nComposer中国区镜像，Laravel-China维护版 https://laravel-china.org/composer\n\n> “注意 selfupdate 升级命令会连接官方服务器，速度很慢。建议直接下载我们的 composer.phar 镜像，每天都会更新到最新。”\n\n\n另一个中国镜像： https://pkg.phpcomposer.com/； 由于该镜像出现过大半个月未更新的故障，laravel-china镜像因此产生。\n\n> 可见维护的重要性，14年出来的中国区Compser镜像，半个月未更新，说是服务器迁到了国外，做了各种升级。但因为中间的中断同步，促成了laravel-china镜像的产生，估计带走了一部分用户。这两个镜像都不错，对于开发者来说多一些选择总是好的。 - 漠天\n\n相关说明地址：http://www.phpcomposer.com/what-has-chaged-over-the-last-two-weeks/\n\n\n> 设计\n\n不再为建立设计规而困惑 https://mp.weixin.qq.com/s?__biz=MzI3MTQ2NzgwMw==&mid=2247486264&idx=1&sn=96b7c2879ce4c97f9455dc7fa27534c7&chksm=eac01f4cddb7965aed37e6dcd54dceb4fd0fb7c2c57a33f4dd5e686ae5e59016fa852b7a3163#rd（ps ：有详细的食谱和食材，有些样式就是傻瓜式开发了吧 ）\n\n京东自营不等于京东自己经营，京东你逗我呢（https://zhuanlan.zhihu.com/p/24871557\n\n> 工具和资源\n\n推荐自己的整理的前端周刊资源  https://github.com/huixisheng/FE-Weekly\n\n\n> 产品及其他\n\n一个网站，https://www.windy.com/，天气信息网站，不太好介绍因为也不太懂。很多天气信息感觉很专业很厉害的样子\n\n11种想攻破你大脑的的黑科技，我们离《黑镜》又近了一步  http://36kr.com/p/5073657.html\n\n菜鸟驿站成了欧莱雅“线下店”，线上1分钟下单，立等可取  http://36kr.com/p/5073629.html\n\n\n**本周刊由团队成员推荐整理而成，内容来自互联网**","source":"_posts/weekly-2017-05-06.md","raw":"---\ntitle: 美妆心得技术周刊2017-05-06\ntags:\n  - weekly\ndate: 2017-05-06 22:16:48\n---\n\n> IOS\n\niOS开发－学会使用代码块，提高你的开发效率 https://mp.weixin.qq.com/s?__biz=MzA3NzM0NzkxMQ==&mid=2655358675&idx=1&sn=caf5ea51f4d8b3284b18c6bb631ec7ea&chksm=84e243fbb395caed550d35db33dbfa4629c72d8ca340c710638c1bb5aec083ce476b8a3c13cc&mpshare=1&scene=1&srcid=0507cMQaRKPLdbwzKShnoaNi&key=97813e881d714997ebc34e81922f3ce8df22e2b7a61c83440e781b4f5749e3d0fb06f481815c1ec13ca5743de0f30e03e2d0108c2589663accc217d6991875da41cc6bf4be2afa1ae7be9a821fd6e5fd&ascene=0&uin=NzA4OTE1MDU%3D&devicetype=iMac%20MacBookPro11%2C1%20OSX%20OSX%2010.12.4%20build(16E195)&version=12020510&nettype=WIFI&fontScale=100&pass_ticket=eQ%2FSDeKzSyc4kpzbZ5Yh7DB6ushIrnmKlQfL0uhXZ1M%3D\n\n关于app逆向开发http://al1020119.github.io/blog/2016/03/08/fanbianyihefangfanbianyi/ http://www.jianshu.com/p/7c41b03c9eb3\n\n> 前端\n\niOS开发者的Weex伪最佳实践指北 https://media.weibo.cn/article?id=2309614103795469624797&from=groupmessage&isappinstalled=1&jumpfrom=weibocom\n\n文件上传那些事儿 https://www.qcloud.com/community/article/985614?fromSource=gwzcw.114059.114059.114059 之前自己也写过upload，觉得这个整理的蛮全面\n\n了解css grid布局 http://www.w3cplus.com/css3/playing-with-css-grid-layout.html\n\n> 后台\n\nComposer中国区镜像，Laravel-China维护版 https://laravel-china.org/composer\n\n> “注意 selfupdate 升级命令会连接官方服务器，速度很慢。建议直接下载我们的 composer.phar 镜像，每天都会更新到最新。”\n\n\n另一个中国镜像： https://pkg.phpcomposer.com/； 由于该镜像出现过大半个月未更新的故障，laravel-china镜像因此产生。\n\n> 可见维护的重要性，14年出来的中国区Compser镜像，半个月未更新，说是服务器迁到了国外，做了各种升级。但因为中间的中断同步，促成了laravel-china镜像的产生，估计带走了一部分用户。这两个镜像都不错，对于开发者来说多一些选择总是好的。 - 漠天\n\n相关说明地址：http://www.phpcomposer.com/what-has-chaged-over-the-last-two-weeks/\n\n\n> 设计\n\n不再为建立设计规而困惑 https://mp.weixin.qq.com/s?__biz=MzI3MTQ2NzgwMw==&mid=2247486264&idx=1&sn=96b7c2879ce4c97f9455dc7fa27534c7&chksm=eac01f4cddb7965aed37e6dcd54dceb4fd0fb7c2c57a33f4dd5e686ae5e59016fa852b7a3163#rd（ps ：有详细的食谱和食材，有些样式就是傻瓜式开发了吧 ）\n\n京东自营不等于京东自己经营，京东你逗我呢（https://zhuanlan.zhihu.com/p/24871557\n\n> 工具和资源\n\n推荐自己的整理的前端周刊资源  https://github.com/huixisheng/FE-Weekly\n\n\n> 产品及其他\n\n一个网站，https://www.windy.com/，天气信息网站，不太好介绍因为也不太懂。很多天气信息感觉很专业很厉害的样子\n\n11种想攻破你大脑的的黑科技，我们离《黑镜》又近了一步  http://36kr.com/p/5073657.html\n\n菜鸟驿站成了欧莱雅“线下店”，线上1分钟下单，立等可取  http://36kr.com/p/5073629.html\n\n\n**本周刊由团队成员推荐整理而成，内容来自互联网**","slug":"weekly-2017-05-06","published":1,"updated":"2017-09-18T02:12:39.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9cutiok000yds9lue72jker","content":"<blockquote><p>IOS</p></blockquote><p>iOS开发－学会使用代码块，提高你的开发效率 <a href=\"https://mp.weixin.qq.com/s?__biz=MzA3NzM0NzkxMQ==&amp;mid=2655358675&amp;idx=1&amp;sn=caf5ea51f4d8b3284b18c6bb631ec7ea&amp;chksm=84e243fbb395caed550d35db33dbfa4629c72d8ca340c710638c1bb5aec083ce476b8a3c13cc&amp;mpshare=1&amp;scene=1&amp;srcid=0507cMQaRKPLdbwzKShnoaNi&amp;key=97813e881d714997ebc34e81922f3ce8df22e2b7a61c83440e781b4f5749e3d0fb06f481815c1ec13ca5743de0f30e03e2d0108c2589663accc217d6991875da41cc6bf4be2afa1ae7be9a821fd6e5fd&amp;ascene=0&amp;uin=NzA4OTE1MDU%3D&amp;devicetype=iMac%20MacBookPro11%2C1%20OSX%20OSX%2010.12.4%20build(16E195)&amp;version=12020510&amp;nettype=WIFI&amp;fontScale=100&amp;pass_ticket=eQ%2FSDeKzSyc4kpzbZ5Yh7DB6ushIrnmKlQfL0uhXZ1M%3D\" target=\"_blank\" rel=\"external\">https://mp.weixin.qq.com/s?__biz=MzA3NzM0NzkxMQ==&amp;mid=2655358675&amp;idx=1&amp;sn=caf5ea51f4d8b3284b18c6bb631ec7ea&amp;chksm=84e243fbb395caed550d35db33dbfa4629c72d8ca340c710638c1bb5aec083ce476b8a3c13cc&amp;mpshare=1&amp;scene=1&amp;srcid=0507cMQaRKPLdbwzKShnoaNi&amp;key=97813e881d714997ebc34e81922f3ce8df22e2b7a61c83440e781b4f5749e3d0fb06f481815c1ec13ca5743de0f30e03e2d0108c2589663accc217d6991875da41cc6bf4be2afa1ae7be9a821fd6e5fd&amp;ascene=0&amp;uin=NzA4OTE1MDU%3D&amp;devicetype=iMac%20MacBookPro11%2C1%20OSX%20OSX%2010.12.4%20build(16E195)&amp;version=12020510&amp;nettype=WIFI&amp;fontScale=100&amp;pass_ticket=eQ%2FSDeKzSyc4kpzbZ5Yh7DB6ushIrnmKlQfL0uhXZ1M%3D</a></p><p>关于app逆向开发<a href=\"http://al1020119.github.io/blog/2016/03/08/fanbianyihefangfanbianyi/\" target=\"_blank\" rel=\"external\">http://al1020119.github.io/blog/2016/03/08/fanbianyihefangfanbianyi/</a> <a href=\"http://www.jianshu.com/p/7c41b03c9eb3\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/7c41b03c9eb3</a></p><blockquote><p>前端</p></blockquote><p>iOS开发者的Weex伪最佳实践指北 <a href=\"https://media.weibo.cn/article?id=2309614103795469624797&amp;from=groupmessage&amp;isappinstalled=1&amp;jumpfrom=weibocom\" target=\"_blank\" rel=\"external\">https://media.weibo.cn/article?id=2309614103795469624797&amp;from=groupmessage&amp;isappinstalled=1&amp;jumpfrom=weibocom</a></p><p>文件上传那些事儿 <a href=\"https://www.qcloud.com/community/article/985614?fromSource=gwzcw.114059.114059.114059\" target=\"_blank\" rel=\"external\">https://www.qcloud.com/community/article/985614?fromSource=gwzcw.114059.114059.114059</a> 之前自己也写过upload，觉得这个整理的蛮全面</p><p>了解css grid布局 <a href=\"http://www.w3cplus.com/css3/playing-with-css-grid-layout.html\" target=\"_blank\" rel=\"external\">http://www.w3cplus.com/css3/playing-with-css-grid-layout.html</a></p><blockquote><p>后台</p></blockquote><p>Composer中国区镜像，Laravel-China维护版 <a href=\"https://laravel-china.org/composer\" target=\"_blank\" rel=\"external\">https://laravel-china.org/composer</a></p><blockquote><p>“注意 selfupdate 升级命令会连接官方服务器，速度很慢。建议直接下载我们的 composer.phar 镜像，每天都会更新到最新。”</p></blockquote><p>另一个中国镜像： <a href=\"https://pkg.phpcomposer.com/；\" target=\"_blank\" rel=\"external\">https://pkg.phpcomposer.com/；</a> 由于该镜像出现过大半个月未更新的故障，laravel-china镜像因此产生。</p><blockquote><p>可见维护的重要性，14年出来的中国区Compser镜像，半个月未更新，说是服务器迁到了国外，做了各种升级。但因为中间的中断同步，促成了laravel-china镜像的产生，估计带走了一部分用户。这两个镜像都不错，对于开发者来说多一些选择总是好的。 - 漠天</p></blockquote><p>相关说明地址：<a href=\"http://www.phpcomposer.com/what-has-chaged-over-the-last-two-weeks/\" target=\"_blank\" rel=\"external\">http://www.phpcomposer.com/what-has-chaged-over-the-last-two-weeks/</a></p><blockquote><p>设计</p></blockquote><p>不再为建立设计规而困惑 <a href=\"https://mp.weixin.qq.com/s?__biz=MzI3MTQ2NzgwMw==&amp;mid=2247486264&amp;idx=1&amp;sn=96b7c2879ce4c97f9455dc7fa27534c7&amp;chksm=eac01f4cddb7965aed37e6dcd54dceb4fd0fb7c2c57a33f4dd5e686ae5e59016fa852b7a3163#rd（ps\" target=\"_blank\" rel=\"external\">https://mp.weixin.qq.com/s?__biz=MzI3MTQ2NzgwMw==&amp;mid=2247486264&amp;idx=1&amp;sn=96b7c2879ce4c97f9455dc7fa27534c7&amp;chksm=eac01f4cddb7965aed37e6dcd54dceb4fd0fb7c2c57a33f4dd5e686ae5e59016fa852b7a3163#rd（ps</a> ：有详细的食谱和食材，有些样式就是傻瓜式开发了吧 ）</p><p>京东自营不等于京东自己经营，京东你逗我呢（<a href=\"https://zhuanlan.zhihu.com/p/24871557\" target=\"_blank\" rel=\"external\">https://zhuanlan.zhihu.com/p/24871557</a></p><blockquote><p>工具和资源</p></blockquote><p>推荐自己的整理的前端周刊资源 <a href=\"https://github.com/huixisheng/FE-Weekly\" target=\"_blank\" rel=\"external\">https://github.com/huixisheng/FE-Weekly</a></p><blockquote><p>产品及其他</p></blockquote><p>一个网站，<a href=\"https://www.windy.com/，天气信息网站，不太好介绍因为也不太懂。很多天气信息感觉很专业很厉害的样子\" target=\"_blank\" rel=\"external\">https://www.windy.com/，天气信息网站，不太好介绍因为也不太懂。很多天气信息感觉很专业很厉害的样子</a></p><p>11种想攻破你大脑的的黑科技，我们离《黑镜》又近了一步 <a href=\"http://36kr.com/p/5073657.html\" target=\"_blank\" rel=\"external\">http://36kr.com/p/5073657.html</a></p><p>菜鸟驿站成了欧莱雅“线下店”，线上1分钟下单，立等可取 <a href=\"http://36kr.com/p/5073629.html\" target=\"_blank\" rel=\"external\">http://36kr.com/p/5073629.html</a></p><p><strong>本周刊由团队成员推荐整理而成，内容来自互联网</strong></p>","site":{"data":{}},"excerpt":"","more":"<blockquote><p>IOS</p></blockquote><p>iOS开发－学会使用代码块，提高你的开发效率 <a href=\"https://mp.weixin.qq.com/s?__biz=MzA3NzM0NzkxMQ==&amp;mid=2655358675&amp;idx=1&amp;sn=caf5ea51f4d8b3284b18c6bb631ec7ea&amp;chksm=84e243fbb395caed550d35db33dbfa4629c72d8ca340c710638c1bb5aec083ce476b8a3c13cc&amp;mpshare=1&amp;scene=1&amp;srcid=0507cMQaRKPLdbwzKShnoaNi&amp;key=97813e881d714997ebc34e81922f3ce8df22e2b7a61c83440e781b4f5749e3d0fb06f481815c1ec13ca5743de0f30e03e2d0108c2589663accc217d6991875da41cc6bf4be2afa1ae7be9a821fd6e5fd&amp;ascene=0&amp;uin=NzA4OTE1MDU%3D&amp;devicetype=iMac%20MacBookPro11%2C1%20OSX%20OSX%2010.12.4%20build(16E195)&amp;version=12020510&amp;nettype=WIFI&amp;fontScale=100&amp;pass_ticket=eQ%2FSDeKzSyc4kpzbZ5Yh7DB6ushIrnmKlQfL0uhXZ1M%3D\" target=\"_blank\" rel=\"external\">https://mp.weixin.qq.com/s?__biz=MzA3NzM0NzkxMQ==&amp;mid=2655358675&amp;idx=1&amp;sn=caf5ea51f4d8b3284b18c6bb631ec7ea&amp;chksm=84e243fbb395caed550d35db33dbfa4629c72d8ca340c710638c1bb5aec083ce476b8a3c13cc&amp;mpshare=1&amp;scene=1&amp;srcid=0507cMQaRKPLdbwzKShnoaNi&amp;key=97813e881d714997ebc34e81922f3ce8df22e2b7a61c83440e781b4f5749e3d0fb06f481815c1ec13ca5743de0f30e03e2d0108c2589663accc217d6991875da41cc6bf4be2afa1ae7be9a821fd6e5fd&amp;ascene=0&amp;uin=NzA4OTE1MDU%3D&amp;devicetype=iMac%20MacBookPro11%2C1%20OSX%20OSX%2010.12.4%20build(16E195)&amp;version=12020510&amp;nettype=WIFI&amp;fontScale=100&amp;pass_ticket=eQ%2FSDeKzSyc4kpzbZ5Yh7DB6ushIrnmKlQfL0uhXZ1M%3D</a></p><p>关于app逆向开发<a href=\"http://al1020119.github.io/blog/2016/03/08/fanbianyihefangfanbianyi/\" target=\"_blank\" rel=\"external\">http://al1020119.github.io/blog/2016/03/08/fanbianyihefangfanbianyi/</a> <a href=\"http://www.jianshu.com/p/7c41b03c9eb3\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/7c41b03c9eb3</a></p><blockquote><p>前端</p></blockquote><p>iOS开发者的Weex伪最佳实践指北 <a href=\"https://media.weibo.cn/article?id=2309614103795469624797&amp;from=groupmessage&amp;isappinstalled=1&amp;jumpfrom=weibocom\" target=\"_blank\" rel=\"external\">https://media.weibo.cn/article?id=2309614103795469624797&amp;from=groupmessage&amp;isappinstalled=1&amp;jumpfrom=weibocom</a></p><p>文件上传那些事儿 <a href=\"https://www.qcloud.com/community/article/985614?fromSource=gwzcw.114059.114059.114059\" target=\"_blank\" rel=\"external\">https://www.qcloud.com/community/article/985614?fromSource=gwzcw.114059.114059.114059</a> 之前自己也写过upload，觉得这个整理的蛮全面</p><p>了解css grid布局 <a href=\"http://www.w3cplus.com/css3/playing-with-css-grid-layout.html\" target=\"_blank\" rel=\"external\">http://www.w3cplus.com/css3/playing-with-css-grid-layout.html</a></p><blockquote><p>后台</p></blockquote><p>Composer中国区镜像，Laravel-China维护版 <a href=\"https://laravel-china.org/composer\" target=\"_blank\" rel=\"external\">https://laravel-china.org/composer</a></p><blockquote><p>“注意 selfupdate 升级命令会连接官方服务器，速度很慢。建议直接下载我们的 composer.phar 镜像，每天都会更新到最新。”</p></blockquote><p>另一个中国镜像： <a href=\"https://pkg.phpcomposer.com/；\" target=\"_blank\" rel=\"external\">https://pkg.phpcomposer.com/；</a> 由于该镜像出现过大半个月未更新的故障，laravel-china镜像因此产生。</p><blockquote><p>可见维护的重要性，14年出来的中国区Compser镜像，半个月未更新，说是服务器迁到了国外，做了各种升级。但因为中间的中断同步，促成了laravel-china镜像的产生，估计带走了一部分用户。这两个镜像都不错，对于开发者来说多一些选择总是好的。 - 漠天</p></blockquote><p>相关说明地址：<a href=\"http://www.phpcomposer.com/what-has-chaged-over-the-last-two-weeks/\" target=\"_blank\" rel=\"external\">http://www.phpcomposer.com/what-has-chaged-over-the-last-two-weeks/</a></p><blockquote><p>设计</p></blockquote><p>不再为建立设计规而困惑 <a href=\"https://mp.weixin.qq.com/s?__biz=MzI3MTQ2NzgwMw==&amp;mid=2247486264&amp;idx=1&amp;sn=96b7c2879ce4c97f9455dc7fa27534c7&amp;chksm=eac01f4cddb7965aed37e6dcd54dceb4fd0fb7c2c57a33f4dd5e686ae5e59016fa852b7a3163#rd（ps\" target=\"_blank\" rel=\"external\">https://mp.weixin.qq.com/s?__biz=MzI3MTQ2NzgwMw==&amp;mid=2247486264&amp;idx=1&amp;sn=96b7c2879ce4c97f9455dc7fa27534c7&amp;chksm=eac01f4cddb7965aed37e6dcd54dceb4fd0fb7c2c57a33f4dd5e686ae5e59016fa852b7a3163#rd（ps</a> ：有详细的食谱和食材，有些样式就是傻瓜式开发了吧 ）</p><p>京东自营不等于京东自己经营，京东你逗我呢（<a href=\"https://zhuanlan.zhihu.com/p/24871557\" target=\"_blank\" rel=\"external\">https://zhuanlan.zhihu.com/p/24871557</a></p><blockquote><p>工具和资源</p></blockquote><p>推荐自己的整理的前端周刊资源 <a href=\"https://github.com/huixisheng/FE-Weekly\" target=\"_blank\" rel=\"external\">https://github.com/huixisheng/FE-Weekly</a></p><blockquote><p>产品及其他</p></blockquote><p>一个网站，<a href=\"https://www.windy.com/，天气信息网站，不太好介绍因为也不太懂。很多天气信息感觉很专业很厉害的样子\" target=\"_blank\" rel=\"external\">https://www.windy.com/，天气信息网站，不太好介绍因为也不太懂。很多天气信息感觉很专业很厉害的样子</a></p><p>11种想攻破你大脑的的黑科技，我们离《黑镜》又近了一步 <a href=\"http://36kr.com/p/5073657.html\" target=\"_blank\" rel=\"external\">http://36kr.com/p/5073657.html</a></p><p>菜鸟驿站成了欧莱雅“线下店”，线上1分钟下单，立等可取 <a href=\"http://36kr.com/p/5073629.html\" target=\"_blank\" rel=\"external\">http://36kr.com/p/5073629.html</a></p><p><strong>本周刊由团队成员推荐整理而成，内容来自互联网</strong></p>"},{"title":"PHP 系列：代码规范之 Code Sniffer","author":{"name":"Stephen","link":"https://blog.stephencode.com"},"date":"2017-09-26T08:42:25.000Z","_content":"\n之前写了一篇 [《PHP 系列：代码规范之 Code Sniffer》](https://blog.stephencode.com/p/php_code_sniffer.html)，介绍了 phpcs 和 phpcbf 这两个检测脚本，今天让我们欢迎新成员 phpmd ~\n\n> PHPMD is a spin-off project of PHP Depend and aims to be a PHP equivalent of the well known Java tool PMD. PHPMD can be seen as an user friendly and easy to configure frontend for the raw metrics measured by PHP Depend.\n\n![phpmd](https://cdn.stephencode.com/article/php/phpmd.png)\n\n它的作用主要是分析我们写的代码，然后指出其中潜在的问题。举个栗子，大家都知道 IDE 中，如果一个变量声明了但未使用过，IDE 会报出警告。\n\n其实使用的也是这类静态检测脚本，对于编写良好的代码，这些工具能较好的帮到你。自从弃了 PHPStorm 后，一直在 Sublime Text 上敲，既然默认不集成这些，那就自己手动集成咯~\n\n## 安装\n\n还是使用 composer，使用全局安装方式：\n\n```\ncomposer global require \"phpmd/phpmd\"\n```\n\n图方便加个软连接：\n\n```\nsudo ln -s /Users/stephen/.composer/vendor/phpmd/phpmd/src/bin/phpmd /usr/bin/phpmd\n```\n\n## 命令行使用\n\n```\n$ phpmd /path/to/ text unusedcode\n\n/path/to/test.php:25    Avoid unused local variables such as '$a'.\n/path/to/test.php:26    Avoid unused local variables such as '$b'.\n```\n\n这里使用了 `text` 格式的输出，默认是 `xml`，像这样：\n\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<pmd version=\"@project.version@\" timestamp=\"2017-09-22T01:33:16+00:00\">\n  <file name=\"/path/to/test.php\">\n    <violation beginline=\"25\" endline=\"25\" rule=\"UnusedLocalVariable\" ruleset=\"Unused Code Rules\" externalInfoUrl=\"http://phpmd.org/rules/unusedcode.html#unusedlocalvariable\" priority=\"3\">\n      Avoid unused local variables such as '$a'.\n    </violation>\n    <violation beginline=\"26\" endline=\"26\" rule=\"UnusedLocalVariable\" ruleset=\"Unused Code Rules\" externalInfoUrl=\"http://phpmd.org/rules/unusedcode.html#unusedlocalvariable\" priority=\"3\">\n      Avoid unused local variables such as '$b'.\n    </violation>\n  </file>\n</pmd>\n```\n\n然后你会发现使用 `text` 格式会简明扼要很多。。。\n\n上面这个例子只使用了一个规则 `unusedcode`，官方提供了六个规则，能满足绝大部分的需求： `cleancode, codesize, controversial, design, naming, unusedcode`\n\n具体这些规则检测的是哪些方面，去看下官方文档是最好的，[传送门](https://phpmd.org/rules/index.html)\n\n## 在 Sublime 中集成\n\n### 安装插件\n\n前提 `Package Control` 要安装好，这个你肯定没问题的（莫名的自信，逃）\n\n安装 `phpcs` 这个插件，然后打开这个插件的 `Settings - User` 和 `Settings - Default`，将后者的内容全部复制到前者。\n\n### 配置\n\n将以下配置项替换掉：\n\n```json\n{\n    \"phpmd_run\": true,\n\n    \"phpmd_command_on_save\": true,\n\n    \"phpmd_executable_path\": \"phpmd\",\n\n    \"phpmd_additional_args\": {\n        \"codesize,controversial,design,naming,unusedcode\": \"\"\n    },\n}\n```\n\n这边有几个注意点：\n\n1. `\"codesize,controversial,design,naming,unusedcode\"` 这里的逗号后面不能加空格\n2. `cleancode` 没有加上是因为一旦你使用了类静态方法调用，这个规则就会提醒你不要用。。。比如你在用 Laravel，然后你就炸了，虽然多用静态方法会增加不少运行时内存，但 Laravel 的静态方法是伪静态，都会实例化，所以先暂时舍弃这个规则了，之后自己写一个规则把其他好用的检测方法包含进来就好。\n\n> 在配置的过程中建议全程开着 Sublime 的控制台（`Ctrl + ~` 唤起）。\n\n比如我将 `\"codesize,controversial\"` 改成 `\"codesize, controversial\"`，加了个逗号，然后再使用的时候，控制台里会报出错误：\n\n```\n[Phpcs] Cannot find specified rule-set \" controversial\".\n```\n\n---\n\n本文参考链接：\n\n- [Mess Detector 官方网站](https://phpmd.org)","source":"_posts/php-mess-detector.md","raw":"---\ntitle: PHP 系列：代码规范之 Code Sniffer\nauthor:\n  name: Stephen\n  link: https://blog.stephencode.com\ndate: 2017-09-26 16:42:25\ntags:\n- php\n- 规范\n---\n\n之前写了一篇 [《PHP 系列：代码规范之 Code Sniffer》](https://blog.stephencode.com/p/php_code_sniffer.html)，介绍了 phpcs 和 phpcbf 这两个检测脚本，今天让我们欢迎新成员 phpmd ~\n\n> PHPMD is a spin-off project of PHP Depend and aims to be a PHP equivalent of the well known Java tool PMD. PHPMD can be seen as an user friendly and easy to configure frontend for the raw metrics measured by PHP Depend.\n\n![phpmd](https://cdn.stephencode.com/article/php/phpmd.png)\n\n它的作用主要是分析我们写的代码，然后指出其中潜在的问题。举个栗子，大家都知道 IDE 中，如果一个变量声明了但未使用过，IDE 会报出警告。\n\n其实使用的也是这类静态检测脚本，对于编写良好的代码，这些工具能较好的帮到你。自从弃了 PHPStorm 后，一直在 Sublime Text 上敲，既然默认不集成这些，那就自己手动集成咯~\n\n## 安装\n\n还是使用 composer，使用全局安装方式：\n\n```\ncomposer global require \"phpmd/phpmd\"\n```\n\n图方便加个软连接：\n\n```\nsudo ln -s /Users/stephen/.composer/vendor/phpmd/phpmd/src/bin/phpmd /usr/bin/phpmd\n```\n\n## 命令行使用\n\n```\n$ phpmd /path/to/ text unusedcode\n\n/path/to/test.php:25    Avoid unused local variables such as '$a'.\n/path/to/test.php:26    Avoid unused local variables such as '$b'.\n```\n\n这里使用了 `text` 格式的输出，默认是 `xml`，像这样：\n\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<pmd version=\"@project.version@\" timestamp=\"2017-09-22T01:33:16+00:00\">\n  <file name=\"/path/to/test.php\">\n    <violation beginline=\"25\" endline=\"25\" rule=\"UnusedLocalVariable\" ruleset=\"Unused Code Rules\" externalInfoUrl=\"http://phpmd.org/rules/unusedcode.html#unusedlocalvariable\" priority=\"3\">\n      Avoid unused local variables such as '$a'.\n    </violation>\n    <violation beginline=\"26\" endline=\"26\" rule=\"UnusedLocalVariable\" ruleset=\"Unused Code Rules\" externalInfoUrl=\"http://phpmd.org/rules/unusedcode.html#unusedlocalvariable\" priority=\"3\">\n      Avoid unused local variables such as '$b'.\n    </violation>\n  </file>\n</pmd>\n```\n\n然后你会发现使用 `text` 格式会简明扼要很多。。。\n\n上面这个例子只使用了一个规则 `unusedcode`，官方提供了六个规则，能满足绝大部分的需求： `cleancode, codesize, controversial, design, naming, unusedcode`\n\n具体这些规则检测的是哪些方面，去看下官方文档是最好的，[传送门](https://phpmd.org/rules/index.html)\n\n## 在 Sublime 中集成\n\n### 安装插件\n\n前提 `Package Control` 要安装好，这个你肯定没问题的（莫名的自信，逃）\n\n安装 `phpcs` 这个插件，然后打开这个插件的 `Settings - User` 和 `Settings - Default`，将后者的内容全部复制到前者。\n\n### 配置\n\n将以下配置项替换掉：\n\n```json\n{\n    \"phpmd_run\": true,\n\n    \"phpmd_command_on_save\": true,\n\n    \"phpmd_executable_path\": \"phpmd\",\n\n    \"phpmd_additional_args\": {\n        \"codesize,controversial,design,naming,unusedcode\": \"\"\n    },\n}\n```\n\n这边有几个注意点：\n\n1. `\"codesize,controversial,design,naming,unusedcode\"` 这里的逗号后面不能加空格\n2. `cleancode` 没有加上是因为一旦你使用了类静态方法调用，这个规则就会提醒你不要用。。。比如你在用 Laravel，然后你就炸了，虽然多用静态方法会增加不少运行时内存，但 Laravel 的静态方法是伪静态，都会实例化，所以先暂时舍弃这个规则了，之后自己写一个规则把其他好用的检测方法包含进来就好。\n\n> 在配置的过程中建议全程开着 Sublime 的控制台（`Ctrl + ~` 唤起）。\n\n比如我将 `\"codesize,controversial\"` 改成 `\"codesize, controversial\"`，加了个逗号，然后再使用的时候，控制台里会报出错误：\n\n```\n[Phpcs] Cannot find specified rule-set \" controversial\".\n```\n\n---\n\n本文参考链接：\n\n- [Mess Detector 官方网站](https://phpmd.org)","slug":"php-mess-detector","published":1,"updated":"2017-09-26T08:43:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9cutiol0010ds9lhs9munw6","content":"<p>之前写了一篇 <a href=\"https://blog.stephencode.com/p/php_code_sniffer.html\" target=\"_blank\" rel=\"external\">《PHP 系列：代码规范之 Code Sniffer》</a>，介绍了 phpcs 和 phpcbf 这两个检测脚本，今天让我们欢迎新成员 phpmd ~</p><blockquote><p>PHPMD is a spin-off project of PHP Depend and aims to be a PHP equivalent of the well known Java tool PMD. PHPMD can be seen as an user friendly and easy to configure frontend for the raw metrics measured by PHP Depend.</p></blockquote><p><img src=\"https://cdn.stephencode.com/article/php/phpmd.png\" alt=\"phpmd\"></p><p>它的作用主要是分析我们写的代码，然后指出其中潜在的问题。举个栗子，大家都知道 IDE 中，如果一个变量声明了但未使用过，IDE 会报出警告。</p><p>其实使用的也是这类静态检测脚本，对于编写良好的代码，这些工具能较好的帮到你。自从弃了 PHPStorm 后，一直在 Sublime Text 上敲，既然默认不集成这些，那就自己手动集成咯~</p><h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>还是使用 composer，使用全局安装方式：</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">composer global require &quot;phpmd/phpmd&quot;</div></pre></td></tr></table></figure><p>图方便加个软连接：</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo ln -s /Users/stephen/.composer/vendor/phpmd/phpmd/src/bin/phpmd /usr/bin/phpmd</div></pre></td></tr></table></figure><h2 id=\"命令行使用\"><a href=\"#命令行使用\" class=\"headerlink\" title=\"命令行使用\"></a>命令行使用</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ phpmd /path/to/ text unusedcode</div><div class=\"line\"></div><div class=\"line\">/path/to/test.php:25    Avoid unused local variables such as &apos;$a&apos;.</div><div class=\"line\">/path/to/test.php:26    Avoid unused local variables such as &apos;$b&apos;.</div></pre></td></tr></table></figure><p>这里使用了 <code>text</code> 格式的输出，默认是 <code>xml</code>，像这样：</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</div><div class=\"line\">&lt;pmd version=&quot;@project.version@&quot; timestamp=&quot;2017-09-22T01:33:16+00:00&quot;&gt;</div><div class=\"line\">  &lt;file name=&quot;/path/to/test.php&quot;&gt;</div><div class=\"line\">    &lt;violation beginline=&quot;25&quot; endline=&quot;25&quot; rule=&quot;UnusedLocalVariable&quot; ruleset=&quot;Unused Code Rules&quot; externalInfoUrl=&quot;http://phpmd.org/rules/unusedcode.html#unusedlocalvariable&quot; priority=&quot;3&quot;&gt;</div><div class=\"line\">      Avoid unused local variables such as &apos;$a&apos;.</div><div class=\"line\">    &lt;/violation&gt;</div><div class=\"line\">    &lt;violation beginline=&quot;26&quot; endline=&quot;26&quot; rule=&quot;UnusedLocalVariable&quot; ruleset=&quot;Unused Code Rules&quot; externalInfoUrl=&quot;http://phpmd.org/rules/unusedcode.html#unusedlocalvariable&quot; priority=&quot;3&quot;&gt;</div><div class=\"line\">      Avoid unused local variables such as &apos;$b&apos;.</div><div class=\"line\">    &lt;/violation&gt;</div><div class=\"line\">  &lt;/file&gt;</div><div class=\"line\">&lt;/pmd&gt;</div></pre></td></tr></table></figure><p>然后你会发现使用 <code>text</code> 格式会简明扼要很多。。。</p><p>上面这个例子只使用了一个规则 <code>unusedcode</code>，官方提供了六个规则，能满足绝大部分的需求： <code>cleancode, codesize, controversial, design, naming, unusedcode</code></p><p>具体这些规则检测的是哪些方面，去看下官方文档是最好的，<a href=\"https://phpmd.org/rules/index.html\" target=\"_blank\" rel=\"external\">传送门</a></p><h2 id=\"在-Sublime-中集成\"><a href=\"#在-Sublime-中集成\" class=\"headerlink\" title=\"在 Sublime 中集成\"></a>在 Sublime 中集成</h2><h3 id=\"安装插件\"><a href=\"#安装插件\" class=\"headerlink\" title=\"安装插件\"></a>安装插件</h3><p>前提 <code>Package Control</code> 要安装好，这个你肯定没问题的（莫名的自信，逃）</p><p>安装 <code>phpcs</code> 这个插件，然后打开这个插件的 <code>Settings - User</code> 和 <code>Settings - Default</code>，将后者的内容全部复制到前者。</p><h3 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h3><p>将以下配置项替换掉：</p><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"attr\">\"phpmd_run\"</span>: <span class=\"literal\">true</span>,</div><div class=\"line\"></div><div class=\"line\">    <span class=\"attr\">\"phpmd_command_on_save\"</span>: <span class=\"literal\">true</span>,</div><div class=\"line\"></div><div class=\"line\">    <span class=\"attr\">\"phpmd_executable_path\"</span>: <span class=\"string\">\"phpmd\"</span>,</div><div class=\"line\"></div><div class=\"line\">    <span class=\"attr\">\"phpmd_additional_args\"</span>: &#123;</div><div class=\"line\">        <span class=\"attr\">\"codesize,controversial,design,naming,unusedcode\"</span>: <span class=\"string\">\"\"</span></div><div class=\"line\">    &#125;,</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure><p>这边有几个注意点：</p><ol><li><code>&quot;codesize,controversial,design,naming,unusedcode&quot;</code> 这里的逗号后面不能加空格</li><li><code>cleancode</code> 没有加上是因为一旦你使用了类静态方法调用，这个规则就会提醒你不要用。。。比如你在用 Laravel，然后你就炸了，虽然多用静态方法会增加不少运行时内存，但 Laravel 的静态方法是伪静态，都会实例化，所以先暂时舍弃这个规则了，之后自己写一个规则把其他好用的检测方法包含进来就好。</li></ol><blockquote><p>在配置的过程中建议全程开着 Sublime 的控制台（<code>Ctrl + ~</code> 唤起）。</p></blockquote><p>比如我将 <code>&quot;codesize,controversial&quot;</code> 改成 <code>&quot;codesize, controversial&quot;</code>，加了个逗号，然后再使用的时候，控制台里会报出错误：</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">[Phpcs] Cannot find specified rule-set &quot; controversial&quot;.</div></pre></td></tr></table></figure><hr><p>本文参考链接：</p><ul><li><a href=\"https://phpmd.org\" target=\"_blank\" rel=\"external\">Mess Detector 官方网站</a></li></ul>","site":{"data":{}},"excerpt":"","more":"<p>之前写了一篇 <a href=\"https://blog.stephencode.com/p/php_code_sniffer.html\" target=\"_blank\" rel=\"external\">《PHP 系列：代码规范之 Code Sniffer》</a>，介绍了 phpcs 和 phpcbf 这两个检测脚本，今天让我们欢迎新成员 phpmd ~</p><blockquote><p>PHPMD is a spin-off project of PHP Depend and aims to be a PHP equivalent of the well known Java tool PMD. PHPMD can be seen as an user friendly and easy to configure frontend for the raw metrics measured by PHP Depend.</p></blockquote><p><img src=\"https://cdn.stephencode.com/article/php/phpmd.png\" alt=\"phpmd\"></p><p>它的作用主要是分析我们写的代码，然后指出其中潜在的问题。举个栗子，大家都知道 IDE 中，如果一个变量声明了但未使用过，IDE 会报出警告。</p><p>其实使用的也是这类静态检测脚本，对于编写良好的代码，这些工具能较好的帮到你。自从弃了 PHPStorm 后，一直在 Sublime Text 上敲，既然默认不集成这些，那就自己手动集成咯~</p><h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>还是使用 composer，使用全局安装方式：</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">composer global require &quot;phpmd/phpmd&quot;</div></pre></td></tr></table></figure><p>图方便加个软连接：</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo ln -s /Users/stephen/.composer/vendor/phpmd/phpmd/src/bin/phpmd /usr/bin/phpmd</div></pre></td></tr></table></figure><h2 id=\"命令行使用\"><a href=\"#命令行使用\" class=\"headerlink\" title=\"命令行使用\"></a>命令行使用</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ phpmd /path/to/ text unusedcode</div><div class=\"line\"></div><div class=\"line\">/path/to/test.php:25    Avoid unused local variables such as &apos;$a&apos;.</div><div class=\"line\">/path/to/test.php:26    Avoid unused local variables such as &apos;$b&apos;.</div></pre></td></tr></table></figure><p>这里使用了 <code>text</code> 格式的输出，默认是 <code>xml</code>，像这样：</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</div><div class=\"line\">&lt;pmd version=&quot;@project.version@&quot; timestamp=&quot;2017-09-22T01:33:16+00:00&quot;&gt;</div><div class=\"line\">  &lt;file name=&quot;/path/to/test.php&quot;&gt;</div><div class=\"line\">    &lt;violation beginline=&quot;25&quot; endline=&quot;25&quot; rule=&quot;UnusedLocalVariable&quot; ruleset=&quot;Unused Code Rules&quot; externalInfoUrl=&quot;http://phpmd.org/rules/unusedcode.html#unusedlocalvariable&quot; priority=&quot;3&quot;&gt;</div><div class=\"line\">      Avoid unused local variables such as &apos;$a&apos;.</div><div class=\"line\">    &lt;/violation&gt;</div><div class=\"line\">    &lt;violation beginline=&quot;26&quot; endline=&quot;26&quot; rule=&quot;UnusedLocalVariable&quot; ruleset=&quot;Unused Code Rules&quot; externalInfoUrl=&quot;http://phpmd.org/rules/unusedcode.html#unusedlocalvariable&quot; priority=&quot;3&quot;&gt;</div><div class=\"line\">      Avoid unused local variables such as &apos;$b&apos;.</div><div class=\"line\">    &lt;/violation&gt;</div><div class=\"line\">  &lt;/file&gt;</div><div class=\"line\">&lt;/pmd&gt;</div></pre></td></tr></table></figure><p>然后你会发现使用 <code>text</code> 格式会简明扼要很多。。。</p><p>上面这个例子只使用了一个规则 <code>unusedcode</code>，官方提供了六个规则，能满足绝大部分的需求： <code>cleancode, codesize, controversial, design, naming, unusedcode</code></p><p>具体这些规则检测的是哪些方面，去看下官方文档是最好的，<a href=\"https://phpmd.org/rules/index.html\" target=\"_blank\" rel=\"external\">传送门</a></p><h2 id=\"在-Sublime-中集成\"><a href=\"#在-Sublime-中集成\" class=\"headerlink\" title=\"在 Sublime 中集成\"></a>在 Sublime 中集成</h2><h3 id=\"安装插件\"><a href=\"#安装插件\" class=\"headerlink\" title=\"安装插件\"></a>安装插件</h3><p>前提 <code>Package Control</code> 要安装好，这个你肯定没问题的（莫名的自信，逃）</p><p>安装 <code>phpcs</code> 这个插件，然后打开这个插件的 <code>Settings - User</code> 和 <code>Settings - Default</code>，将后者的内容全部复制到前者。</p><h3 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h3><p>将以下配置项替换掉：</p><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"attr\">\"phpmd_run\"</span>: <span class=\"literal\">true</span>,</div><div class=\"line\"></div><div class=\"line\">    <span class=\"attr\">\"phpmd_command_on_save\"</span>: <span class=\"literal\">true</span>,</div><div class=\"line\"></div><div class=\"line\">    <span class=\"attr\">\"phpmd_executable_path\"</span>: <span class=\"string\">\"phpmd\"</span>,</div><div class=\"line\"></div><div class=\"line\">    <span class=\"attr\">\"phpmd_additional_args\"</span>: &#123;</div><div class=\"line\">        <span class=\"attr\">\"codesize,controversial,design,naming,unusedcode\"</span>: <span class=\"string\">\"\"</span></div><div class=\"line\">    &#125;,</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure><p>这边有几个注意点：</p><ol><li><code>&quot;codesize,controversial,design,naming,unusedcode&quot;</code> 这里的逗号后面不能加空格</li><li><code>cleancode</code> 没有加上是因为一旦你使用了类静态方法调用，这个规则就会提醒你不要用。。。比如你在用 Laravel，然后你就炸了，虽然多用静态方法会增加不少运行时内存，但 Laravel 的静态方法是伪静态，都会实例化，所以先暂时舍弃这个规则了，之后自己写一个规则把其他好用的检测方法包含进来就好。</li></ol><blockquote><p>在配置的过程中建议全程开着 Sublime 的控制台（<code>Ctrl + ~</code> 唤起）。</p></blockquote><p>比如我将 <code>&quot;codesize,controversial&quot;</code> 改成 <code>&quot;codesize, controversial&quot;</code>，加了个逗号，然后再使用的时候，控制台里会报出错误：</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">[Phpcs] Cannot find specified rule-set &quot; controversial&quot;.</div></pre></td></tr></table></figure><hr><p>本文参考链接：</p><ul><li><a href=\"https://phpmd.org\" target=\"_blank\" rel=\"external\">Mess Detector 官方网站</a></li></ul>"},{"title":"美妆心得技术周刊2017-05-27","date":"2017-05-27T15:58:19.000Z","_content":"\n> 产品及其它\n\n一周潮科技回顾｜柯洁被阿尔法狗3:0横扫；苹果正在开发AI专用芯片 http://36kr.com/p/5077492.html\n\n李善友教授：这几本书，可以助你“认知升级”  http://36kr.com/p/5077727.html\n\n在台北电脑展上intel刚发布了新系列的i5、i7、i9，貌似这次牙膏挤得有点多http://news.smzdm.com/p/31826/\n\n上周柯洁大战AlphaGo，个人赛，团队赛人类全败，然后AlphaGo宣布退役，不再参加竞技比赛。装完逼就跑真刺激。\n\n学会金字塔原理，才能有效提升职场说服力：http://www.jianshu.com/p/994c20bc0a43\n\n并不是我们培养习惯，而是习惯培养更优秀的我们：http://www.jianshu.com/p/25836abbcd8f\n\n> 安卓\n手摸手，带你用vue撸后台 https://juejin.im/post/59097cd7a22b9d0065fb61d2\n\nSVG 新司机开车指南 https://zhuanlan.zhihu.com/p/25016633\n\n一文解决 Android View 滑动冲突 https://juejin.im/entry/5928bfa92f301e0057d4f414\n\nGoogle 官方推出应用开发架构指南 https://juejin.im/entry/5922637b128fe1005c2ce6be\n\n\n> 前端\n你对MVC、MVP、MVVM 三种组合模式分别有什么样的理解？ https://www.zhihu.com/question/20148405\n\nawesome收集整理 https://github.com/huixisheng/awesome-awesome\n\n正则进阶之路 https://github.com/jawil/blog/issues/20\n\nnpm的8个小技巧 https://juejin.im/post/59256b6f8d6d810058045336\n\n> 后台\n\n总有你要的编程书单（GitHub） https://juejin.im/entry/5920f4f0a0bb9f005f4d9535\n\n> 设计\n\n《设计中的抄袭与逆袭》，如何更加高明的抄袭，让抄袭设计变成一种超越设计，链接：https://mp.weixin.qq.com/s/NDyHjvEgDY-BfZwRlxCxjA\n\n**本周刊由团队成员推荐整理而成，内容来自互联网**","source":"_posts/weekly-2017-05-27.md","raw":"---\ntitle: 美妆心得技术周刊2017-05-27\ndate: 2017-05-27 23:58:19\ntags:\n- weekly\n---\n\n> 产品及其它\n\n一周潮科技回顾｜柯洁被阿尔法狗3:0横扫；苹果正在开发AI专用芯片 http://36kr.com/p/5077492.html\n\n李善友教授：这几本书，可以助你“认知升级”  http://36kr.com/p/5077727.html\n\n在台北电脑展上intel刚发布了新系列的i5、i7、i9，貌似这次牙膏挤得有点多http://news.smzdm.com/p/31826/\n\n上周柯洁大战AlphaGo，个人赛，团队赛人类全败，然后AlphaGo宣布退役，不再参加竞技比赛。装完逼就跑真刺激。\n\n学会金字塔原理，才能有效提升职场说服力：http://www.jianshu.com/p/994c20bc0a43\n\n并不是我们培养习惯，而是习惯培养更优秀的我们：http://www.jianshu.com/p/25836abbcd8f\n\n> 安卓\n手摸手，带你用vue撸后台 https://juejin.im/post/59097cd7a22b9d0065fb61d2\n\nSVG 新司机开车指南 https://zhuanlan.zhihu.com/p/25016633\n\n一文解决 Android View 滑动冲突 https://juejin.im/entry/5928bfa92f301e0057d4f414\n\nGoogle 官方推出应用开发架构指南 https://juejin.im/entry/5922637b128fe1005c2ce6be\n\n\n> 前端\n你对MVC、MVP、MVVM 三种组合模式分别有什么样的理解？ https://www.zhihu.com/question/20148405\n\nawesome收集整理 https://github.com/huixisheng/awesome-awesome\n\n正则进阶之路 https://github.com/jawil/blog/issues/20\n\nnpm的8个小技巧 https://juejin.im/post/59256b6f8d6d810058045336\n\n> 后台\n\n总有你要的编程书单（GitHub） https://juejin.im/entry/5920f4f0a0bb9f005f4d9535\n\n> 设计\n\n《设计中的抄袭与逆袭》，如何更加高明的抄袭，让抄袭设计变成一种超越设计，链接：https://mp.weixin.qq.com/s/NDyHjvEgDY-BfZwRlxCxjA\n\n**本周刊由团队成员推荐整理而成，内容来自互联网**","slug":"weekly-2017-05-27","published":1,"updated":"2017-10-11T06:06:24.506Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9cutiom0012ds9ls9xhrx5w","content":"<blockquote><p>产品及其它</p></blockquote><p>一周潮科技回顾｜柯洁被阿尔法狗3:0横扫；苹果正在开发AI专用芯片 <a href=\"http://36kr.com/p/5077492.html\" target=\"_blank\" rel=\"external\">http://36kr.com/p/5077492.html</a></p><p>李善友教授：这几本书，可以助你“认知升级” <a href=\"http://36kr.com/p/5077727.html\" target=\"_blank\" rel=\"external\">http://36kr.com/p/5077727.html</a></p><p>在台北电脑展上intel刚发布了新系列的i5、i7、i9，貌似这次牙膏挤得有点多<a href=\"http://news.smzdm.com/p/31826/\" target=\"_blank\" rel=\"external\">http://news.smzdm.com/p/31826/</a></p><p>上周柯洁大战AlphaGo，个人赛，团队赛人类全败，然后AlphaGo宣布退役，不再参加竞技比赛。装完逼就跑真刺激。</p><p>学会金字塔原理，才能有效提升职场说服力：<a href=\"http://www.jianshu.com/p/994c20bc0a43\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/994c20bc0a43</a></p><p>并不是我们培养习惯，而是习惯培养更优秀的我们：<a href=\"http://www.jianshu.com/p/25836abbcd8f\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/25836abbcd8f</a></p><blockquote><p>安卓<br>手摸手，带你用vue撸后台 <a href=\"https://juejin.im/post/59097cd7a22b9d0065fb61d2\" target=\"_blank\" rel=\"external\">https://juejin.im/post/59097cd7a22b9d0065fb61d2</a></p></blockquote><p>SVG 新司机开车指南 <a href=\"https://zhuanlan.zhihu.com/p/25016633\" target=\"_blank\" rel=\"external\">https://zhuanlan.zhihu.com/p/25016633</a></p><p>一文解决 Android View 滑动冲突 <a href=\"https://juejin.im/entry/5928bfa92f301e0057d4f414\" target=\"_blank\" rel=\"external\">https://juejin.im/entry/5928bfa92f301e0057d4f414</a></p><p>Google 官方推出应用开发架构指南 <a href=\"https://juejin.im/entry/5922637b128fe1005c2ce6be\" target=\"_blank\" rel=\"external\">https://juejin.im/entry/5922637b128fe1005c2ce6be</a></p><blockquote><p>前端<br>你对MVC、MVP、MVVM 三种组合模式分别有什么样的理解？ <a href=\"https://www.zhihu.com/question/20148405\" target=\"_blank\" rel=\"external\">https://www.zhihu.com/question/20148405</a></p></blockquote><p>awesome收集整理 <a href=\"https://github.com/huixisheng/awesome-awesome\" target=\"_blank\" rel=\"external\">https://github.com/huixisheng/awesome-awesome</a></p><p>正则进阶之路 <a href=\"https://github.com/jawil/blog/issues/20\" target=\"_blank\" rel=\"external\">https://github.com/jawil/blog/issues/20</a></p><p>npm的8个小技巧 <a href=\"https://juejin.im/post/59256b6f8d6d810058045336\" target=\"_blank\" rel=\"external\">https://juejin.im/post/59256b6f8d6d810058045336</a></p><blockquote><p>后台</p></blockquote><p>总有你要的编程书单（GitHub） <a href=\"https://juejin.im/entry/5920f4f0a0bb9f005f4d9535\" target=\"_blank\" rel=\"external\">https://juejin.im/entry/5920f4f0a0bb9f005f4d9535</a></p><blockquote><p>设计</p></blockquote><p>《设计中的抄袭与逆袭》，如何更加高明的抄袭，让抄袭设计变成一种超越设计，链接：<a href=\"https://mp.weixin.qq.com/s/NDyHjvEgDY-BfZwRlxCxjA\" target=\"_blank\" rel=\"external\">https://mp.weixin.qq.com/s/NDyHjvEgDY-BfZwRlxCxjA</a></p><p><strong>本周刊由团队成员推荐整理而成，内容来自互联网</strong></p>","site":{"data":{}},"excerpt":"","more":"<blockquote><p>产品及其它</p></blockquote><p>一周潮科技回顾｜柯洁被阿尔法狗3:0横扫；苹果正在开发AI专用芯片 <a href=\"http://36kr.com/p/5077492.html\" target=\"_blank\" rel=\"external\">http://36kr.com/p/5077492.html</a></p><p>李善友教授：这几本书，可以助你“认知升级” <a href=\"http://36kr.com/p/5077727.html\" target=\"_blank\" rel=\"external\">http://36kr.com/p/5077727.html</a></p><p>在台北电脑展上intel刚发布了新系列的i5、i7、i9，貌似这次牙膏挤得有点多<a href=\"http://news.smzdm.com/p/31826/\" target=\"_blank\" rel=\"external\">http://news.smzdm.com/p/31826/</a></p><p>上周柯洁大战AlphaGo，个人赛，团队赛人类全败，然后AlphaGo宣布退役，不再参加竞技比赛。装完逼就跑真刺激。</p><p>学会金字塔原理，才能有效提升职场说服力：<a href=\"http://www.jianshu.com/p/994c20bc0a43\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/994c20bc0a43</a></p><p>并不是我们培养习惯，而是习惯培养更优秀的我们：<a href=\"http://www.jianshu.com/p/25836abbcd8f\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/25836abbcd8f</a></p><blockquote><p>安卓<br>手摸手，带你用vue撸后台 <a href=\"https://juejin.im/post/59097cd7a22b9d0065fb61d2\" target=\"_blank\" rel=\"external\">https://juejin.im/post/59097cd7a22b9d0065fb61d2</a></p></blockquote><p>SVG 新司机开车指南 <a href=\"https://zhuanlan.zhihu.com/p/25016633\" target=\"_blank\" rel=\"external\">https://zhuanlan.zhihu.com/p/25016633</a></p><p>一文解决 Android View 滑动冲突 <a href=\"https://juejin.im/entry/5928bfa92f301e0057d4f414\" target=\"_blank\" rel=\"external\">https://juejin.im/entry/5928bfa92f301e0057d4f414</a></p><p>Google 官方推出应用开发架构指南 <a href=\"https://juejin.im/entry/5922637b128fe1005c2ce6be\" target=\"_blank\" rel=\"external\">https://juejin.im/entry/5922637b128fe1005c2ce6be</a></p><blockquote><p>前端<br>你对MVC、MVP、MVVM 三种组合模式分别有什么样的理解？ <a href=\"https://www.zhihu.com/question/20148405\" target=\"_blank\" rel=\"external\">https://www.zhihu.com/question/20148405</a></p></blockquote><p>awesome收集整理 <a href=\"https://github.com/huixisheng/awesome-awesome\" target=\"_blank\" rel=\"external\">https://github.com/huixisheng/awesome-awesome</a></p><p>正则进阶之路 <a href=\"https://github.com/jawil/blog/issues/20\" target=\"_blank\" rel=\"external\">https://github.com/jawil/blog/issues/20</a></p><p>npm的8个小技巧 <a href=\"https://juejin.im/post/59256b6f8d6d810058045336\" target=\"_blank\" rel=\"external\">https://juejin.im/post/59256b6f8d6d810058045336</a></p><blockquote><p>后台</p></blockquote><p>总有你要的编程书单（GitHub） <a href=\"https://juejin.im/entry/5920f4f0a0bb9f005f4d9535\" target=\"_blank\" rel=\"external\">https://juejin.im/entry/5920f4f0a0bb9f005f4d9535</a></p><blockquote><p>设计</p></blockquote><p>《设计中的抄袭与逆袭》，如何更加高明的抄袭，让抄袭设计变成一种超越设计，链接：<a href=\"https://mp.weixin.qq.com/s/NDyHjvEgDY-BfZwRlxCxjA\" target=\"_blank\" rel=\"external\">https://mp.weixin.qq.com/s/NDyHjvEgDY-BfZwRlxCxjA</a></p><p><strong>本周刊由团队成员推荐整理而成，内容来自互联网</strong></p>"},{"title":"美妆心得技术周刊2017-06-12","date":"2017-06-12T15:58:19.000Z","_content":"\n> 产品及其他\n\n推荐一篇文章《上班的效率总是很低，你有真正改变过吗？》\nhttp://mp.weixin.qq.com/s/ELnT38NflHKG-_-KGsG9WQ\n\n淘宝天猫会员体系统一，淘气值要变成\"VIP版的芝麻信用\"？\nhttp://36kr.com/p/5079285.html\n\n抖音们火了，但泛对嘴型产品想成为社区还需要踩过哪些坑？\nhttps://www.huxiu.com/article/196951.html\n\nAPP产品分析，这一篇就够了\nhttps://juejin.im/entry/59127ae91b69e600686806f5\n\n芝麻分700以上新福利：日本五年签免交50万流水证明\nhttp://bbs.feng.com/mobile-news-read-0-681645.html\n\n> 安卓\n\n简单高效的实现Android App全局字体替换\nhttp://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2017/0608/8049.html\n\n像大牛一样写代码: 31个Android 开发者工具\nhttp://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2017/0526/7973.html\n\n轻松实现Recyclerview侧滑、拖拽、删除\nhttp://blog.csdn.net/u012943767/article/details/51670757\n\n> IOS\n\nswift常用三方库\nhttps://juejin.im/entry/578e3b6b8ac2470060aebe92\n\niOS常用线程锁\nhttp://blog.csdn.net/qq_30513483/article/details/52349968\n\n> 前端\n\n2017年最佳JavaScript框架,库和工具\nhttp://www.css88.com/archives/7421\n\n前端动画相关资源收集\nhttps://www.one-tab.com/page/UAsb1d6yTj297xt31sb6Ug\n\n\n>后台\n\nJWT （JSON Web Token） 基于Token的用户鉴权的一种实现。\n\n相较于传统的session认证方式，针对移动端更友好，无跨域问题。\n无传统认证方式因cookie泄露带来的安全问题。（如 csrf漏洞）\n什么是 JWT -- JSON WEB TOKEN http://www.jianshu.com/p/576dbf44b2ae\nJWT 在前后端分离中的应用与实践 http://www.open-open.com/lib/view/open1433995002942.html\nhttp://www.tuicool.com/articles/Zria63\n\nSOA与微服务架构（面向服务编程）\n\n我所理解的SOA和微服务 http://www.cnblogs.com/fengzheng/p/5847441.html\nSOA和微服务架构的区别？https://www.zhihu.com/question/37808426\n\n我个人的理解是SOA是一种思想，微服务架构规范性更强，更细化，微服务可以认为是SOA思想的一种实践与更细的指导标准。不用纠结究竟是SOA还是微服务，只要面向服务，分布式，服务可拆分，解耦，易扩展满足几个条件就是好架构。（漠天）\n\n**本周刊由团队成员推荐整理而成，内容来自互联网**\n\n\n","source":"_posts/weekly-2017-06-12.md","raw":"---\ntitle: 美妆心得技术周刊2017-06-12\ndate: 2017-06-12 23:58:19\ntags:\n- weekly\n---\n\n> 产品及其他\n\n推荐一篇文章《上班的效率总是很低，你有真正改变过吗？》\nhttp://mp.weixin.qq.com/s/ELnT38NflHKG-_-KGsG9WQ\n\n淘宝天猫会员体系统一，淘气值要变成\"VIP版的芝麻信用\"？\nhttp://36kr.com/p/5079285.html\n\n抖音们火了，但泛对嘴型产品想成为社区还需要踩过哪些坑？\nhttps://www.huxiu.com/article/196951.html\n\nAPP产品分析，这一篇就够了\nhttps://juejin.im/entry/59127ae91b69e600686806f5\n\n芝麻分700以上新福利：日本五年签免交50万流水证明\nhttp://bbs.feng.com/mobile-news-read-0-681645.html\n\n> 安卓\n\n简单高效的实现Android App全局字体替换\nhttp://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2017/0608/8049.html\n\n像大牛一样写代码: 31个Android 开发者工具\nhttp://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2017/0526/7973.html\n\n轻松实现Recyclerview侧滑、拖拽、删除\nhttp://blog.csdn.net/u012943767/article/details/51670757\n\n> IOS\n\nswift常用三方库\nhttps://juejin.im/entry/578e3b6b8ac2470060aebe92\n\niOS常用线程锁\nhttp://blog.csdn.net/qq_30513483/article/details/52349968\n\n> 前端\n\n2017年最佳JavaScript框架,库和工具\nhttp://www.css88.com/archives/7421\n\n前端动画相关资源收集\nhttps://www.one-tab.com/page/UAsb1d6yTj297xt31sb6Ug\n\n\n>后台\n\nJWT （JSON Web Token） 基于Token的用户鉴权的一种实现。\n\n相较于传统的session认证方式，针对移动端更友好，无跨域问题。\n无传统认证方式因cookie泄露带来的安全问题。（如 csrf漏洞）\n什么是 JWT -- JSON WEB TOKEN http://www.jianshu.com/p/576dbf44b2ae\nJWT 在前后端分离中的应用与实践 http://www.open-open.com/lib/view/open1433995002942.html\nhttp://www.tuicool.com/articles/Zria63\n\nSOA与微服务架构（面向服务编程）\n\n我所理解的SOA和微服务 http://www.cnblogs.com/fengzheng/p/5847441.html\nSOA和微服务架构的区别？https://www.zhihu.com/question/37808426\n\n我个人的理解是SOA是一种思想，微服务架构规范性更强，更细化，微服务可以认为是SOA思想的一种实践与更细的指导标准。不用纠结究竟是SOA还是微服务，只要面向服务，分布式，服务可拆分，解耦，易扩展满足几个条件就是好架构。（漠天）\n\n**本周刊由团队成员推荐整理而成，内容来自互联网**\n\n\n","slug":"weekly-2017-06-12","published":1,"updated":"2017-09-18T02:12:39.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9cutioo0014ds9lswjlbx5c","content":"<blockquote><p>产品及其他</p></blockquote><p>推荐一篇文章《上班的效率总是很低，你有真正改变过吗？》<br><a href=\"http://mp.weixin.qq.com/s/ELnT38NflHKG-_-KGsG9WQ\" target=\"_blank\" rel=\"external\">http://mp.weixin.qq.com/s/ELnT38NflHKG-_-KGsG9WQ</a></p><p>淘宝天猫会员体系统一，淘气值要变成”VIP版的芝麻信用”？<br><a href=\"http://36kr.com/p/5079285.html\" target=\"_blank\" rel=\"external\">http://36kr.com/p/5079285.html</a></p><p>抖音们火了，但泛对嘴型产品想成为社区还需要踩过哪些坑？<br><a href=\"https://www.huxiu.com/article/196951.html\" target=\"_blank\" rel=\"external\">https://www.huxiu.com/article/196951.html</a></p><p>APP产品分析，这一篇就够了<br><a href=\"https://juejin.im/entry/59127ae91b69e600686806f5\" target=\"_blank\" rel=\"external\">https://juejin.im/entry/59127ae91b69e600686806f5</a></p><p>芝麻分700以上新福利：日本五年签免交50万流水证明<br><a href=\"http://bbs.feng.com/mobile-news-read-0-681645.html\" target=\"_blank\" rel=\"external\">http://bbs.feng.com/mobile-news-read-0-681645.html</a></p><blockquote><p>安卓</p></blockquote><p>简单高效的实现Android App全局字体替换<br><a href=\"http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2017/0608/8049.html\" target=\"_blank\" rel=\"external\">http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2017/0608/8049.html</a></p><p>像大牛一样写代码: 31个Android 开发者工具<br><a href=\"http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2017/0526/7973.html\" target=\"_blank\" rel=\"external\">http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2017/0526/7973.html</a></p><p>轻松实现Recyclerview侧滑、拖拽、删除<br><a href=\"http://blog.csdn.net/u012943767/article/details/51670757\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/u012943767/article/details/51670757</a></p><blockquote><p>IOS</p></blockquote><p>swift常用三方库<br><a href=\"https://juejin.im/entry/578e3b6b8ac2470060aebe92\" target=\"_blank\" rel=\"external\">https://juejin.im/entry/578e3b6b8ac2470060aebe92</a></p><p>iOS常用线程锁<br><a href=\"http://blog.csdn.net/qq_30513483/article/details/52349968\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/qq_30513483/article/details/52349968</a></p><blockquote><p>前端</p></blockquote><p>2017年最佳JavaScript框架,库和工具<br><a href=\"http://www.css88.com/archives/7421\" target=\"_blank\" rel=\"external\">http://www.css88.com/archives/7421</a></p><p>前端动画相关资源收集<br><a href=\"https://www.one-tab.com/page/UAsb1d6yTj297xt31sb6Ug\" target=\"_blank\" rel=\"external\">https://www.one-tab.com/page/UAsb1d6yTj297xt31sb6Ug</a></p><blockquote><p>后台</p></blockquote><p>JWT （JSON Web Token） 基于Token的用户鉴权的一种实现。</p><p>相较于传统的session认证方式，针对移动端更友好，无跨域问题。<br>无传统认证方式因cookie泄露带来的安全问题。（如 csrf漏洞）<br>什么是 JWT – JSON WEB TOKEN <a href=\"http://www.jianshu.com/p/576dbf44b2ae\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/576dbf44b2ae</a><br>JWT 在前后端分离中的应用与实践 <a href=\"http://www.open-open.com/lib/view/open1433995002942.html\" target=\"_blank\" rel=\"external\">http://www.open-open.com/lib/view/open1433995002942.html</a><br><a href=\"http://www.tuicool.com/articles/Zria63\" target=\"_blank\" rel=\"external\">http://www.tuicool.com/articles/Zria63</a></p><p>SOA与微服务架构（面向服务编程）</p><p>我所理解的SOA和微服务 <a href=\"http://www.cnblogs.com/fengzheng/p/5847441.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/fengzheng/p/5847441.html</a><br>SOA和微服务架构的区别？<a href=\"https://www.zhihu.com/question/37808426\" target=\"_blank\" rel=\"external\">https://www.zhihu.com/question/37808426</a></p><p>我个人的理解是SOA是一种思想，微服务架构规范性更强，更细化，微服务可以认为是SOA思想的一种实践与更细的指导标准。不用纠结究竟是SOA还是微服务，只要面向服务，分布式，服务可拆分，解耦，易扩展满足几个条件就是好架构。（漠天）</p><p><strong>本周刊由团队成员推荐整理而成，内容来自互联网</strong></p>","site":{"data":{}},"excerpt":"","more":"<blockquote><p>产品及其他</p></blockquote><p>推荐一篇文章《上班的效率总是很低，你有真正改变过吗？》<br><a href=\"http://mp.weixin.qq.com/s/ELnT38NflHKG-_-KGsG9WQ\" target=\"_blank\" rel=\"external\">http://mp.weixin.qq.com/s/ELnT38NflHKG-_-KGsG9WQ</a></p><p>淘宝天猫会员体系统一，淘气值要变成”VIP版的芝麻信用”？<br><a href=\"http://36kr.com/p/5079285.html\" target=\"_blank\" rel=\"external\">http://36kr.com/p/5079285.html</a></p><p>抖音们火了，但泛对嘴型产品想成为社区还需要踩过哪些坑？<br><a href=\"https://www.huxiu.com/article/196951.html\" target=\"_blank\" rel=\"external\">https://www.huxiu.com/article/196951.html</a></p><p>APP产品分析，这一篇就够了<br><a href=\"https://juejin.im/entry/59127ae91b69e600686806f5\" target=\"_blank\" rel=\"external\">https://juejin.im/entry/59127ae91b69e600686806f5</a></p><p>芝麻分700以上新福利：日本五年签免交50万流水证明<br><a href=\"http://bbs.feng.com/mobile-news-read-0-681645.html\" target=\"_blank\" rel=\"external\">http://bbs.feng.com/mobile-news-read-0-681645.html</a></p><blockquote><p>安卓</p></blockquote><p>简单高效的实现Android App全局字体替换<br><a href=\"http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2017/0608/8049.html\" target=\"_blank\" rel=\"external\">http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2017/0608/8049.html</a></p><p>像大牛一样写代码: 31个Android 开发者工具<br><a href=\"http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2017/0526/7973.html\" target=\"_blank\" rel=\"external\">http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2017/0526/7973.html</a></p><p>轻松实现Recyclerview侧滑、拖拽、删除<br><a href=\"http://blog.csdn.net/u012943767/article/details/51670757\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/u012943767/article/details/51670757</a></p><blockquote><p>IOS</p></blockquote><p>swift常用三方库<br><a href=\"https://juejin.im/entry/578e3b6b8ac2470060aebe92\" target=\"_blank\" rel=\"external\">https://juejin.im/entry/578e3b6b8ac2470060aebe92</a></p><p>iOS常用线程锁<br><a href=\"http://blog.csdn.net/qq_30513483/article/details/52349968\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/qq_30513483/article/details/52349968</a></p><blockquote><p>前端</p></blockquote><p>2017年最佳JavaScript框架,库和工具<br><a href=\"http://www.css88.com/archives/7421\" target=\"_blank\" rel=\"external\">http://www.css88.com/archives/7421</a></p><p>前端动画相关资源收集<br><a href=\"https://www.one-tab.com/page/UAsb1d6yTj297xt31sb6Ug\" target=\"_blank\" rel=\"external\">https://www.one-tab.com/page/UAsb1d6yTj297xt31sb6Ug</a></p><blockquote><p>后台</p></blockquote><p>JWT （JSON Web Token） 基于Token的用户鉴权的一种实现。</p><p>相较于传统的session认证方式，针对移动端更友好，无跨域问题。<br>无传统认证方式因cookie泄露带来的安全问题。（如 csrf漏洞）<br>什么是 JWT – JSON WEB TOKEN <a href=\"http://www.jianshu.com/p/576dbf44b2ae\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/576dbf44b2ae</a><br>JWT 在前后端分离中的应用与实践 <a href=\"http://www.open-open.com/lib/view/open1433995002942.html\" target=\"_blank\" rel=\"external\">http://www.open-open.com/lib/view/open1433995002942.html</a><br><a href=\"http://www.tuicool.com/articles/Zria63\" target=\"_blank\" rel=\"external\">http://www.tuicool.com/articles/Zria63</a></p><p>SOA与微服务架构（面向服务编程）</p><p>我所理解的SOA和微服务 <a href=\"http://www.cnblogs.com/fengzheng/p/5847441.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/fengzheng/p/5847441.html</a><br>SOA和微服务架构的区别？<a href=\"https://www.zhihu.com/question/37808426\" target=\"_blank\" rel=\"external\">https://www.zhihu.com/question/37808426</a></p><p>我个人的理解是SOA是一种思想，微服务架构规范性更强，更细化，微服务可以认为是SOA思想的一种实践与更细的指导标准。不用纠结究竟是SOA还是微服务，只要面向服务，分布式，服务可拆分，解耦，易扩展满足几个条件就是好架构。（漠天）</p><p><strong>本周刊由团队成员推荐整理而成，内容来自互联网</strong></p>"},{"title":"美妆心得技术周刊2017-06-19","date":"2017-06-19T15:58:19.000Z","_content":"\n> 产品及其他\n\n小程序广告与腾讯的广告野心|营销观察    http://36kr.com/p/5080053.html\n\n有家失败产品博物馆最近开业了，苹果、谷歌、诺基亚等都有陈列品在其中|图说    http://36kr.com/p/5079341.html\n\n推荐一篇TED关于时间的管理的视频http://open.163.com/movie/2016/12/I/B/MC82BCQAN_MC8U8L3IB.html\n\n细分，让问题编的简单，菜心的文章http://mp.weixin.qq.com/s/gDnQPnLviWZLiFrONg9DFA\n\n来谈谈APP提示弹窗交互设计：http://www.jianshu.com/p/5ef59fc29ac5\n\n> 安卓\n\nrealm官方中文文档：https://realm.io/cn/docs/java/latest/#section\n\nrealm快速入门：http://www.jianshu.com/p/42584d637fb1\n\n> IOS\n\nswift 架构模式  http://www.jianshu.com/p/2cd4e8665f69\n\nswift常用的三方库 https://www.zhihu.com/question/28816900\n\nswift 4.0 https://developer.apple.com/videos/play/wwdc2017/402/\n\n> 前端\n\n纯前端ppt制作 https://github.com/huixisheng/awesome-awesome/blob/master/slide-ppt.md\n\nweex资源\n「Android」 详细全面的基于 vue2.0Weex 接入过程（Android 视角） https://juejin.im/entry/58c2c11e570c350058277499?url_type=39&object_type=webpage&pos=1&from=groupmessage&isappinstalled=1\niOS开发者的Weex伪最佳实践指北 https://media.weibo.cn/article?id=2309614103795469624797&from=groupmessage&isappinstalled=1&jumpfrom=weibocom\n\n根据二八原则，es6有哪些需要掌握的 http://www.jianshu.com/p/287e0bb867ae\n\n\n>后台\n\n提交代码前进行代码风格的自动化一致性检查\n\n多人协作时统一代码风格，优化工程质量\nGit Pre-Commit钩子的三方项目（使用Code Sniffer约束风格）\nhttps://github.com/s0enke/git-hooks/tree/master/phpcs-pre-commit\nPHP The Right Way\nPHP 之道 收集了现有的 PHP 最佳实践、编码规范和权威学习指南，方便 PHP 开发者阅读和查找\nhttps://laravel-china.github.io/php-the-right-way/\n\nmysql http://blog.csdn.net/column/details/tangowl-mysql-intro.html\n\n\n> 工具\n\n私人珍藏的CHROME插件，吐血推荐 http://stormzhang.com/devtools/2016/01/15/google-chrome-extension/\n\n你们仍未掌握那天所学的git知识 http://yonghaowu.github.io/2017/06/18/TheGitYouShouldKnow/\n\n**本周刊由团队成员推荐整理而成，内容来自互联网**\n","source":"_posts/weekly-2017-06-19.md","raw":"---\ntitle: 美妆心得技术周刊2017-06-19\ndate: 2017-06-19 23:58:19\ntags:\n- weekly\n---\n\n> 产品及其他\n\n小程序广告与腾讯的广告野心|营销观察    http://36kr.com/p/5080053.html\n\n有家失败产品博物馆最近开业了，苹果、谷歌、诺基亚等都有陈列品在其中|图说    http://36kr.com/p/5079341.html\n\n推荐一篇TED关于时间的管理的视频http://open.163.com/movie/2016/12/I/B/MC82BCQAN_MC8U8L3IB.html\n\n细分，让问题编的简单，菜心的文章http://mp.weixin.qq.com/s/gDnQPnLviWZLiFrONg9DFA\n\n来谈谈APP提示弹窗交互设计：http://www.jianshu.com/p/5ef59fc29ac5\n\n> 安卓\n\nrealm官方中文文档：https://realm.io/cn/docs/java/latest/#section\n\nrealm快速入门：http://www.jianshu.com/p/42584d637fb1\n\n> IOS\n\nswift 架构模式  http://www.jianshu.com/p/2cd4e8665f69\n\nswift常用的三方库 https://www.zhihu.com/question/28816900\n\nswift 4.0 https://developer.apple.com/videos/play/wwdc2017/402/\n\n> 前端\n\n纯前端ppt制作 https://github.com/huixisheng/awesome-awesome/blob/master/slide-ppt.md\n\nweex资源\n「Android」 详细全面的基于 vue2.0Weex 接入过程（Android 视角） https://juejin.im/entry/58c2c11e570c350058277499?url_type=39&object_type=webpage&pos=1&from=groupmessage&isappinstalled=1\niOS开发者的Weex伪最佳实践指北 https://media.weibo.cn/article?id=2309614103795469624797&from=groupmessage&isappinstalled=1&jumpfrom=weibocom\n\n根据二八原则，es6有哪些需要掌握的 http://www.jianshu.com/p/287e0bb867ae\n\n\n>后台\n\n提交代码前进行代码风格的自动化一致性检查\n\n多人协作时统一代码风格，优化工程质量\nGit Pre-Commit钩子的三方项目（使用Code Sniffer约束风格）\nhttps://github.com/s0enke/git-hooks/tree/master/phpcs-pre-commit\nPHP The Right Way\nPHP 之道 收集了现有的 PHP 最佳实践、编码规范和权威学习指南，方便 PHP 开发者阅读和查找\nhttps://laravel-china.github.io/php-the-right-way/\n\nmysql http://blog.csdn.net/column/details/tangowl-mysql-intro.html\n\n\n> 工具\n\n私人珍藏的CHROME插件，吐血推荐 http://stormzhang.com/devtools/2016/01/15/google-chrome-extension/\n\n你们仍未掌握那天所学的git知识 http://yonghaowu.github.io/2017/06/18/TheGitYouShouldKnow/\n\n**本周刊由团队成员推荐整理而成，内容来自互联网**\n","slug":"weekly-2017-06-19","published":1,"updated":"2017-09-18T02:12:39.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9cutioq0016ds9lgre5qi39","content":"<blockquote><p>产品及其他</p></blockquote><p>小程序广告与腾讯的广告野心|营销观察 <a href=\"http://36kr.com/p/5080053.html\" target=\"_blank\" rel=\"external\">http://36kr.com/p/5080053.html</a></p><p>有家失败产品博物馆最近开业了，苹果、谷歌、诺基亚等都有陈列品在其中|图说 <a href=\"http://36kr.com/p/5079341.html\" target=\"_blank\" rel=\"external\">http://36kr.com/p/5079341.html</a></p><p>推荐一篇TED关于时间的管理的视频<a href=\"http://open.163.com/movie/2016/12/I/B/MC82BCQAN_MC8U8L3IB.html\" target=\"_blank\" rel=\"external\">http://open.163.com/movie/2016/12/I/B/MC82BCQAN_MC8U8L3IB.html</a></p><p>细分，让问题编的简单，菜心的文章<a href=\"http://mp.weixin.qq.com/s/gDnQPnLviWZLiFrONg9DFA\" target=\"_blank\" rel=\"external\">http://mp.weixin.qq.com/s/gDnQPnLviWZLiFrONg9DFA</a></p><p>来谈谈APP提示弹窗交互设计：<a href=\"http://www.jianshu.com/p/5ef59fc29ac5\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/5ef59fc29ac5</a></p><blockquote><p>安卓</p></blockquote><p>realm官方中文文档：<a href=\"https://realm.io/cn/docs/java/latest/#section\" target=\"_blank\" rel=\"external\">https://realm.io/cn/docs/java/latest/#section</a></p><p>realm快速入门：<a href=\"http://www.jianshu.com/p/42584d637fb1\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/42584d637fb1</a></p><blockquote><p>IOS</p></blockquote><p>swift 架构模式 <a href=\"http://www.jianshu.com/p/2cd4e8665f69\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/2cd4e8665f69</a></p><p>swift常用的三方库 <a href=\"https://www.zhihu.com/question/28816900\" target=\"_blank\" rel=\"external\">https://www.zhihu.com/question/28816900</a></p><p>swift 4.0 <a href=\"https://developer.apple.com/videos/play/wwdc2017/402/\" target=\"_blank\" rel=\"external\">https://developer.apple.com/videos/play/wwdc2017/402/</a></p><blockquote><p>前端</p></blockquote><p>纯前端ppt制作 <a href=\"https://github.com/huixisheng/awesome-awesome/blob/master/slide-ppt.md\" target=\"_blank\" rel=\"external\">https://github.com/huixisheng/awesome-awesome/blob/master/slide-ppt.md</a></p><p>weex资源<br>「Android」 详细全面的基于 vue2.0Weex 接入过程（Android 视角） <a href=\"https://juejin.im/entry/58c2c11e570c350058277499?url_type=39&amp;object_type=webpage&amp;pos=1&amp;from=groupmessage&amp;isappinstalled=1\" target=\"_blank\" rel=\"external\">https://juejin.im/entry/58c2c11e570c350058277499?url_type=39&amp;object_type=webpage&amp;pos=1&amp;from=groupmessage&amp;isappinstalled=1</a><br>iOS开发者的Weex伪最佳实践指北 <a href=\"https://media.weibo.cn/article?id=2309614103795469624797&amp;from=groupmessage&amp;isappinstalled=1&amp;jumpfrom=weibocom\" target=\"_blank\" rel=\"external\">https://media.weibo.cn/article?id=2309614103795469624797&amp;from=groupmessage&amp;isappinstalled=1&amp;jumpfrom=weibocom</a></p><p>根据二八原则，es6有哪些需要掌握的 <a href=\"http://www.jianshu.com/p/287e0bb867ae\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/287e0bb867ae</a></p><blockquote><p>后台</p></blockquote><p>提交代码前进行代码风格的自动化一致性检查</p><p>多人协作时统一代码风格，优化工程质量<br>Git Pre-Commit钩子的三方项目（使用Code Sniffer约束风格）<br><a href=\"https://github.com/s0enke/git-hooks/tree/master/phpcs-pre-commit\" target=\"_blank\" rel=\"external\">https://github.com/s0enke/git-hooks/tree/master/phpcs-pre-commit</a><br>PHP The Right Way<br>PHP 之道 收集了现有的 PHP 最佳实践、编码规范和权威学习指南，方便 PHP 开发者阅读和查找<br><a href=\"https://laravel-china.github.io/php-the-right-way/\" target=\"_blank\" rel=\"external\">https://laravel-china.github.io/php-the-right-way/</a></p><p>mysql <a href=\"http://blog.csdn.net/column/details/tangowl-mysql-intro.html\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/column/details/tangowl-mysql-intro.html</a></p><blockquote><p>工具</p></blockquote><p>私人珍藏的CHROME插件，吐血推荐 <a href=\"http://stormzhang.com/devtools/2016/01/15/google-chrome-extension/\" target=\"_blank\" rel=\"external\">http://stormzhang.com/devtools/2016/01/15/google-chrome-extension/</a></p><p>你们仍未掌握那天所学的git知识 <a href=\"http://yonghaowu.github.io/2017/06/18/TheGitYouShouldKnow/\" target=\"_blank\" rel=\"external\">http://yonghaowu.github.io/2017/06/18/TheGitYouShouldKnow/</a></p><p><strong>本周刊由团队成员推荐整理而成，内容来自互联网</strong></p>","site":{"data":{}},"excerpt":"","more":"<blockquote><p>产品及其他</p></blockquote><p>小程序广告与腾讯的广告野心|营销观察 <a href=\"http://36kr.com/p/5080053.html\" target=\"_blank\" rel=\"external\">http://36kr.com/p/5080053.html</a></p><p>有家失败产品博物馆最近开业了，苹果、谷歌、诺基亚等都有陈列品在其中|图说 <a href=\"http://36kr.com/p/5079341.html\" target=\"_blank\" rel=\"external\">http://36kr.com/p/5079341.html</a></p><p>推荐一篇TED关于时间的管理的视频<a href=\"http://open.163.com/movie/2016/12/I/B/MC82BCQAN_MC8U8L3IB.html\" target=\"_blank\" rel=\"external\">http://open.163.com/movie/2016/12/I/B/MC82BCQAN_MC8U8L3IB.html</a></p><p>细分，让问题编的简单，菜心的文章<a href=\"http://mp.weixin.qq.com/s/gDnQPnLviWZLiFrONg9DFA\" target=\"_blank\" rel=\"external\">http://mp.weixin.qq.com/s/gDnQPnLviWZLiFrONg9DFA</a></p><p>来谈谈APP提示弹窗交互设计：<a href=\"http://www.jianshu.com/p/5ef59fc29ac5\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/5ef59fc29ac5</a></p><blockquote><p>安卓</p></blockquote><p>realm官方中文文档：<a href=\"https://realm.io/cn/docs/java/latest/#section\" target=\"_blank\" rel=\"external\">https://realm.io/cn/docs/java/latest/#section</a></p><p>realm快速入门：<a href=\"http://www.jianshu.com/p/42584d637fb1\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/42584d637fb1</a></p><blockquote><p>IOS</p></blockquote><p>swift 架构模式 <a href=\"http://www.jianshu.com/p/2cd4e8665f69\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/2cd4e8665f69</a></p><p>swift常用的三方库 <a href=\"https://www.zhihu.com/question/28816900\" target=\"_blank\" rel=\"external\">https://www.zhihu.com/question/28816900</a></p><p>swift 4.0 <a href=\"https://developer.apple.com/videos/play/wwdc2017/402/\" target=\"_blank\" rel=\"external\">https://developer.apple.com/videos/play/wwdc2017/402/</a></p><blockquote><p>前端</p></blockquote><p>纯前端ppt制作 <a href=\"https://github.com/huixisheng/awesome-awesome/blob/master/slide-ppt.md\" target=\"_blank\" rel=\"external\">https://github.com/huixisheng/awesome-awesome/blob/master/slide-ppt.md</a></p><p>weex资源<br>「Android」 详细全面的基于 vue2.0Weex 接入过程（Android 视角） <a href=\"https://juejin.im/entry/58c2c11e570c350058277499?url_type=39&amp;object_type=webpage&amp;pos=1&amp;from=groupmessage&amp;isappinstalled=1\" target=\"_blank\" rel=\"external\">https://juejin.im/entry/58c2c11e570c350058277499?url_type=39&amp;object_type=webpage&amp;pos=1&amp;from=groupmessage&amp;isappinstalled=1</a><br>iOS开发者的Weex伪最佳实践指北 <a href=\"https://media.weibo.cn/article?id=2309614103795469624797&amp;from=groupmessage&amp;isappinstalled=1&amp;jumpfrom=weibocom\" target=\"_blank\" rel=\"external\">https://media.weibo.cn/article?id=2309614103795469624797&amp;from=groupmessage&amp;isappinstalled=1&amp;jumpfrom=weibocom</a></p><p>根据二八原则，es6有哪些需要掌握的 <a href=\"http://www.jianshu.com/p/287e0bb867ae\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/287e0bb867ae</a></p><blockquote><p>后台</p></blockquote><p>提交代码前进行代码风格的自动化一致性检查</p><p>多人协作时统一代码风格，优化工程质量<br>Git Pre-Commit钩子的三方项目（使用Code Sniffer约束风格）<br><a href=\"https://github.com/s0enke/git-hooks/tree/master/phpcs-pre-commit\" target=\"_blank\" rel=\"external\">https://github.com/s0enke/git-hooks/tree/master/phpcs-pre-commit</a><br>PHP The Right Way<br>PHP 之道 收集了现有的 PHP 最佳实践、编码规范和权威学习指南，方便 PHP 开发者阅读和查找<br><a href=\"https://laravel-china.github.io/php-the-right-way/\" target=\"_blank\" rel=\"external\">https://laravel-china.github.io/php-the-right-way/</a></p><p>mysql <a href=\"http://blog.csdn.net/column/details/tangowl-mysql-intro.html\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/column/details/tangowl-mysql-intro.html</a></p><blockquote><p>工具</p></blockquote><p>私人珍藏的CHROME插件，吐血推荐 <a href=\"http://stormzhang.com/devtools/2016/01/15/google-chrome-extension/\" target=\"_blank\" rel=\"external\">http://stormzhang.com/devtools/2016/01/15/google-chrome-extension/</a></p><p>你们仍未掌握那天所学的git知识 <a href=\"http://yonghaowu.github.io/2017/06/18/TheGitYouShouldKnow/\" target=\"_blank\" rel=\"external\">http://yonghaowu.github.io/2017/06/18/TheGitYouShouldKnow/</a></p><p><strong>本周刊由团队成员推荐整理而成，内容来自互联网</strong></p>"},{"title":"Sublime Text操作规范即基本操作","date":"2017-09-26T12:57:09.000Z","author":{"name":"Limitsy","link":null},"_content":"\n本文对`Sublime Text`基本配置，常用插件，基本快捷键做的基本整理。\n\n## 自定义配置 ##\n\n在原配置中添加：\n\n\t\"font_face\": \"source code pro\", //字体设置\n\t\"font_size\": 15, //字体大小\n\t\"translate_tabs_to_spaces\": true, //转换tab为空格(必要)\n\t\"trim_trailing_white_space_on_save\": true //保存时候删除每行末尾空格(必要)\n\n## 自定义快捷键 ##\n\n\t[\n\t\t{ \"keys\": [\"super+shift+a\"], \"command\": \"reindent\" },//格式化，super为command键\n\t\t{ \"keys\": [\"super+shift+r\"], \"command\": \"goto_symbol_in_project\" }//全局搜索类/方法\n\t]\n\n## 插件 ##\n\n* 使用Package Control组件安装\n* 先在hosts中添加\n\n\t#sublime service\n\t50.116.34.243 sublime.wbond.net\n\n### 安装Package Control组件 ###\n\n* 按Ctrl+`调出console\n* 粘贴以下代码到底部命令行并回车：\n* sublime text 3:\n\n\timport urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())\n\n* sublime text 2:\n\n\timport urllib2,os; pf='Package Control.sublime-package'; ipp = sublime.installed_packages_path(); os.makedirs( ipp ) if not os.path.exists(ipp) else None; urllib2.install_opener( urllib2.build_opener( urllib2.ProxyHandler( ))); open( os.path.join( ipp, pf), 'wb' ).write( urllib2.urlopen( 'http://sublime.wbond.net/' +pf.replace( ' ','%20' )).read()); print( 'Please restart Sublime Text to finish installation')\n\n* 重启Sublime Text\n* 如果在Perferences->package settings中看到package control这一项，则安装成功。\n\n### 用Package Control安装插件的方法 ###\n\n* 按下Ctrl+Shift+P调出命令面板\n* 输入install 调出 Install Package 选项并回车，然后在列表中选中要安装的插件。\n\n#### 必要插件 ####\n\n* [SublimeLinter](https://github.com/titoBouzout/SideBarEnhancements/tree/st3)\n* [Git](https://github.com/kemayo/sublime-text-git)\n* [DocBlockr](https://github.com/spadgos/sublime-jsdocs)\n* [Alignment](https://github.com/wbond/sublime_alignment)\n* [Bracket​Highlight](https://github.com/facelessuser/BracketHighlighter)\n* ConvertToUTF8\n* [Emmet](http://emmet.io/)\n\n## 基本快捷键(我会用到的) ##\n\n### 打开/前往\n\n快捷键  \t\t |   操作\n------------ |-----------\n**command + P**  | 前往文件(输入```:```则等同于```control + G```跳到行)\n**command + control + P** | 前往项目\n**command + R**  | 前往method\n**command + shift + R**  | 前往全局method(也许需添加之前的配置)\ncommand + shift + P | 命令提示\ncontrol + G  | 前往行\n**command + K + B** | 开关侧栏\ncontrol +  ` | python控制台\n\n### 编辑\n\n快捷键  \t\t |   操作\n------------ |-----------\n**command + D**  | 选择词 (重复按下时多重选择相同的词进行多重编辑)\ncommand + KK | 从光标处删除至行尾\n**command + shift + D** | 复制(多)行\ncommand + J  | 合并(多)行\ncommand + KU | 改为大写\ncommand + KL | 改为小写\n**command + /**  | 注释\n**command + option + /** |  块注释\ncommand + Z  | 撤销\ncommand + Y  | 恢复或重复\ncontrol + M  | 跳转至对应的括号\ncommand + U  | 软撤销（可撤M销光标移动）\ncommand + shift + U | 软重做（可重做光标移动）\n\n### 分屏\n\n快捷键  \t\t |   操作\n------------|-----------\ncommand + option + X | X屏\ncontrol + [1,2,3,4]  |  焦点移动至相应组\ncontrol + shift + [1,2,3,4] | 将当前文件移动至相应组\ncommand + [1,2,3]  |  选择相应标签页","source":"_posts/sublime-text.md","raw":"title: Sublime Text操作规范即基本操作\ndate: 2017-09-26 20:57:09\nauthor:\n  name: Limitsy\n  link:\ntags:\n- 工具\n- SublimeText\n---\n\n本文对`Sublime Text`基本配置，常用插件，基本快捷键做的基本整理。\n\n## 自定义配置 ##\n\n在原配置中添加：\n\n\t\"font_face\": \"source code pro\", //字体设置\n\t\"font_size\": 15, //字体大小\n\t\"translate_tabs_to_spaces\": true, //转换tab为空格(必要)\n\t\"trim_trailing_white_space_on_save\": true //保存时候删除每行末尾空格(必要)\n\n## 自定义快捷键 ##\n\n\t[\n\t\t{ \"keys\": [\"super+shift+a\"], \"command\": \"reindent\" },//格式化，super为command键\n\t\t{ \"keys\": [\"super+shift+r\"], \"command\": \"goto_symbol_in_project\" }//全局搜索类/方法\n\t]\n\n## 插件 ##\n\n* 使用Package Control组件安装\n* 先在hosts中添加\n\n\t#sublime service\n\t50.116.34.243 sublime.wbond.net\n\n### 安装Package Control组件 ###\n\n* 按Ctrl+`调出console\n* 粘贴以下代码到底部命令行并回车：\n* sublime text 3:\n\n\timport urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())\n\n* sublime text 2:\n\n\timport urllib2,os; pf='Package Control.sublime-package'; ipp = sublime.installed_packages_path(); os.makedirs( ipp ) if not os.path.exists(ipp) else None; urllib2.install_opener( urllib2.build_opener( urllib2.ProxyHandler( ))); open( os.path.join( ipp, pf), 'wb' ).write( urllib2.urlopen( 'http://sublime.wbond.net/' +pf.replace( ' ','%20' )).read()); print( 'Please restart Sublime Text to finish installation')\n\n* 重启Sublime Text\n* 如果在Perferences->package settings中看到package control这一项，则安装成功。\n\n### 用Package Control安装插件的方法 ###\n\n* 按下Ctrl+Shift+P调出命令面板\n* 输入install 调出 Install Package 选项并回车，然后在列表中选中要安装的插件。\n\n#### 必要插件 ####\n\n* [SublimeLinter](https://github.com/titoBouzout/SideBarEnhancements/tree/st3)\n* [Git](https://github.com/kemayo/sublime-text-git)\n* [DocBlockr](https://github.com/spadgos/sublime-jsdocs)\n* [Alignment](https://github.com/wbond/sublime_alignment)\n* [Bracket​Highlight](https://github.com/facelessuser/BracketHighlighter)\n* ConvertToUTF8\n* [Emmet](http://emmet.io/)\n\n## 基本快捷键(我会用到的) ##\n\n### 打开/前往\n\n快捷键  \t\t |   操作\n------------ |-----------\n**command + P**  | 前往文件(输入```:```则等同于```control + G```跳到行)\n**command + control + P** | 前往项目\n**command + R**  | 前往method\n**command + shift + R**  | 前往全局method(也许需添加之前的配置)\ncommand + shift + P | 命令提示\ncontrol + G  | 前往行\n**command + K + B** | 开关侧栏\ncontrol +  ` | python控制台\n\n### 编辑\n\n快捷键  \t\t |   操作\n------------ |-----------\n**command + D**  | 选择词 (重复按下时多重选择相同的词进行多重编辑)\ncommand + KK | 从光标处删除至行尾\n**command + shift + D** | 复制(多)行\ncommand + J  | 合并(多)行\ncommand + KU | 改为大写\ncommand + KL | 改为小写\n**command + /**  | 注释\n**command + option + /** |  块注释\ncommand + Z  | 撤销\ncommand + Y  | 恢复或重复\ncontrol + M  | 跳转至对应的括号\ncommand + U  | 软撤销（可撤M销光标移动）\ncommand + shift + U | 软重做（可重做光标移动）\n\n### 分屏\n\n快捷键  \t\t |   操作\n------------|-----------\ncommand + option + X | X屏\ncontrol + [1,2,3,4]  |  焦点移动至相应组\ncontrol + shift + [1,2,3,4] | 将当前文件移动至相应组\ncommand + [1,2,3]  |  选择相应标签页","slug":"sublime-text","published":1,"updated":"2017-09-26T13:01:03.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9cutior0018ds9lub4l1pre","content":"<p>本文对<code>Sublime Text</code>基本配置，常用插件，基本快捷键做的基本整理。</p><h2 id=\"自定义配置\"><a href=\"#自定义配置\" class=\"headerlink\" title=\"自定义配置\"></a>自定义配置</h2><p>在原配置中添加：</p><pre><code>&quot;font_face&quot;: &quot;source code pro&quot;, //字体设置\n&quot;font_size&quot;: 15, //字体大小\n&quot;translate_tabs_to_spaces&quot;: true, //转换tab为空格(必要)\n&quot;trim_trailing_white_space_on_save&quot;: true //保存时候删除每行末尾空格(必要)\n</code></pre><h2 id=\"自定义快捷键\"><a href=\"#自定义快捷键\" class=\"headerlink\" title=\"自定义快捷键\"></a>自定义快捷键</h2><pre><code>[\n    { &quot;keys&quot;: [&quot;super+shift+a&quot;], &quot;command&quot;: &quot;reindent&quot; },//格式化，super为command键\n    { &quot;keys&quot;: [&quot;super+shift+r&quot;], &quot;command&quot;: &quot;goto_symbol_in_project&quot; }//全局搜索类/方法\n]\n</code></pre><h2 id=\"插件\"><a href=\"#插件\" class=\"headerlink\" title=\"插件\"></a>插件</h2><ul><li>使用Package Control组件安装</li><li><p>先在hosts中添加</p><p>#sublime service<br>50.116.34.243 sublime.wbond.net</p></li></ul><h3 id=\"安装Package-Control组件\"><a href=\"#安装Package-Control组件\" class=\"headerlink\" title=\"安装Package Control组件\"></a>安装Package Control组件</h3><ul><li>按Ctrl+`调出console</li><li>粘贴以下代码到底部命令行并回车：</li><li><p>sublime text 3:</p><p>import urllib.request,os; pf = ‘Package Control.sublime-package’; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), ‘wb’).write(urllib.request.urlopen( ‘<a href=\"http://sublime.wbond.net/\" target=\"_blank\" rel=\"external\">http://sublime.wbond.net/</a>‘ + pf.replace(‘ ‘,’%20’)).read())</p></li><li><p>sublime text 2:</p><p>import urllib2,os; pf=’Package Control.sublime-package’; ipp = sublime.installed_packages_path(); os.makedirs( ipp ) if not os.path.exists(ipp) else None; urllib2.install_opener( urllib2.build_opener( urllib2.ProxyHandler( ))); open( os.path.join( ipp, pf), ‘wb’ ).write( urllib2.urlopen( ‘<a href=\"http://sublime.wbond.net/\" target=\"_blank\" rel=\"external\">http://sublime.wbond.net/</a>‘ +pf.replace( ‘ ‘,’%20’ )).read()); print( ‘Please restart Sublime Text to finish installation’)</p></li><li><p>重启Sublime Text</p></li><li>如果在Perferences-&gt;package settings中看到package control这一项，则安装成功。</li></ul><h3 id=\"用Package-Control安装插件的方法\"><a href=\"#用Package-Control安装插件的方法\" class=\"headerlink\" title=\"用Package Control安装插件的方法\"></a>用Package Control安装插件的方法</h3><ul><li>按下Ctrl+Shift+P调出命令面板</li><li>输入install 调出 Install Package 选项并回车，然后在列表中选中要安装的插件。</li></ul><h4 id=\"必要插件\"><a href=\"#必要插件\" class=\"headerlink\" title=\"必要插件\"></a>必要插件</h4><ul><li><a href=\"https://github.com/titoBouzout/SideBarEnhancements/tree/st3\" target=\"_blank\" rel=\"external\">SublimeLinter</a></li><li><a href=\"https://github.com/kemayo/sublime-text-git\" target=\"_blank\" rel=\"external\">Git</a></li><li><a href=\"https://github.com/spadgos/sublime-jsdocs\" target=\"_blank\" rel=\"external\">DocBlockr</a></li><li><a href=\"https://github.com/wbond/sublime_alignment\" target=\"_blank\" rel=\"external\">Alignment</a></li><li><a href=\"https://github.com/facelessuser/BracketHighlighter\" target=\"_blank\" rel=\"external\">Bracket​Highlight</a></li><li>ConvertToUTF8</li><li><a href=\"http://emmet.io/\" target=\"_blank\" rel=\"external\">Emmet</a></li></ul><h2 id=\"基本快捷键-我会用到的\"><a href=\"#基本快捷键-我会用到的\" class=\"headerlink\" title=\"基本快捷键(我会用到的)\"></a>基本快捷键(我会用到的)</h2><h3 id=\"打开-前往\"><a href=\"#打开-前往\" class=\"headerlink\" title=\"打开/前往\"></a>打开/前往</h3><table><thead><tr><th>快捷键</th><th>操作</th></tr></thead><tbody><tr><td><strong>command + P</strong></td><td>前往文件(输入<code>:</code>则等同于<code>control + G</code>跳到行)</td></tr><tr><td><strong>command + control + P</strong></td><td>前往项目</td></tr><tr><td><strong>command + R</strong></td><td>前往method</td></tr><tr><td><strong>command + shift + R</strong></td><td>前往全局method(也许需添加之前的配置)</td></tr><tr><td>command + shift + P</td><td>命令提示</td></tr><tr><td>control + G</td><td>前往行</td></tr><tr><td><strong>command + K + B</strong></td><td>开关侧栏</td></tr><tr><td>control + `</td><td>python控制台</td></tr></tbody></table><h3 id=\"编辑\"><a href=\"#编辑\" class=\"headerlink\" title=\"编辑\"></a>编辑</h3><table><thead><tr><th>快捷键</th><th>操作</th></tr></thead><tbody><tr><td><strong>command + D</strong></td><td>选择词 (重复按下时多重选择相同的词进行多重编辑)</td></tr><tr><td>command + KK</td><td>从光标处删除至行尾</td></tr><tr><td><strong>command + shift + D</strong></td><td>复制(多)行</td></tr><tr><td>command + J</td><td>合并(多)行</td></tr><tr><td>command + KU</td><td>改为大写</td></tr><tr><td>command + KL</td><td>改为小写</td></tr><tr><td><strong>command + /</strong></td><td>注释</td></tr><tr><td><strong>command + option + /</strong></td><td>块注释</td></tr><tr><td>command + Z</td><td>撤销</td></tr><tr><td>command + Y</td><td>恢复或重复</td></tr><tr><td>control + M</td><td>跳转至对应的括号</td></tr><tr><td>command + U</td><td>软撤销（可撤M销光标移动）</td></tr><tr><td>command + shift + U</td><td>软重做（可重做光标移动）</td></tr></tbody></table><h3 id=\"分屏\"><a href=\"#分屏\" class=\"headerlink\" title=\"分屏\"></a>分屏</h3><table><thead><tr><th>快捷键</th><th>操作</th></tr></thead><tbody><tr><td>command + option + X</td><td>X屏</td></tr><tr><td>control + [1,2,3,4]</td><td>焦点移动至相应组</td></tr><tr><td>control + shift + [1,2,3,4]</td><td>将当前文件移动至相应组</td></tr><tr><td>command + [1,2,3]</td><td>选择相应标签页</td></tr></tbody></table>","site":{"data":{}},"excerpt":"","more":"<p>本文对<code>Sublime Text</code>基本配置，常用插件，基本快捷键做的基本整理。</p><h2 id=\"自定义配置\"><a href=\"#自定义配置\" class=\"headerlink\" title=\"自定义配置\"></a>自定义配置</h2><p>在原配置中添加：</p><pre><code>&quot;font_face&quot;: &quot;source code pro&quot;, //字体设置\n&quot;font_size&quot;: 15, //字体大小\n&quot;translate_tabs_to_spaces&quot;: true, //转换tab为空格(必要)\n&quot;trim_trailing_white_space_on_save&quot;: true //保存时候删除每行末尾空格(必要)\n</code></pre><h2 id=\"自定义快捷键\"><a href=\"#自定义快捷键\" class=\"headerlink\" title=\"自定义快捷键\"></a>自定义快捷键</h2><pre><code>[\n    { &quot;keys&quot;: [&quot;super+shift+a&quot;], &quot;command&quot;: &quot;reindent&quot; },//格式化，super为command键\n    { &quot;keys&quot;: [&quot;super+shift+r&quot;], &quot;command&quot;: &quot;goto_symbol_in_project&quot; }//全局搜索类/方法\n]\n</code></pre><h2 id=\"插件\"><a href=\"#插件\" class=\"headerlink\" title=\"插件\"></a>插件</h2><ul><li>使用Package Control组件安装</li><li><p>先在hosts中添加</p><p>#sublime service<br>50.116.34.243 sublime.wbond.net</p></li></ul><h3 id=\"安装Package-Control组件\"><a href=\"#安装Package-Control组件\" class=\"headerlink\" title=\"安装Package Control组件\"></a>安装Package Control组件</h3><ul><li>按Ctrl+`调出console</li><li>粘贴以下代码到底部命令行并回车：</li><li><p>sublime text 3:</p><p>import urllib.request,os; pf = ‘Package Control.sublime-package’; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), ‘wb’).write(urllib.request.urlopen( ‘<a href=\"http://sublime.wbond.net/\" target=\"_blank\" rel=\"external\">http://sublime.wbond.net/</a>‘ + pf.replace(‘ ‘,’%20’)).read())</p></li><li><p>sublime text 2:</p><p>import urllib2,os; pf=’Package Control.sublime-package’; ipp = sublime.installed_packages_path(); os.makedirs( ipp ) if not os.path.exists(ipp) else None; urllib2.install_opener( urllib2.build_opener( urllib2.ProxyHandler( ))); open( os.path.join( ipp, pf), ‘wb’ ).write( urllib2.urlopen( ‘<a href=\"http://sublime.wbond.net/\" target=\"_blank\" rel=\"external\">http://sublime.wbond.net/</a>‘ +pf.replace( ‘ ‘,’%20’ )).read()); print( ‘Please restart Sublime Text to finish installation’)</p></li><li><p>重启Sublime Text</p></li><li>如果在Perferences-&gt;package settings中看到package control这一项，则安装成功。</li></ul><h3 id=\"用Package-Control安装插件的方法\"><a href=\"#用Package-Control安装插件的方法\" class=\"headerlink\" title=\"用Package Control安装插件的方法\"></a>用Package Control安装插件的方法</h3><ul><li>按下Ctrl+Shift+P调出命令面板</li><li>输入install 调出 Install Package 选项并回车，然后在列表中选中要安装的插件。</li></ul><h4 id=\"必要插件\"><a href=\"#必要插件\" class=\"headerlink\" title=\"必要插件\"></a>必要插件</h4><ul><li><a href=\"https://github.com/titoBouzout/SideBarEnhancements/tree/st3\" target=\"_blank\" rel=\"external\">SublimeLinter</a></li><li><a href=\"https://github.com/kemayo/sublime-text-git\" target=\"_blank\" rel=\"external\">Git</a></li><li><a href=\"https://github.com/spadgos/sublime-jsdocs\" target=\"_blank\" rel=\"external\">DocBlockr</a></li><li><a href=\"https://github.com/wbond/sublime_alignment\" target=\"_blank\" rel=\"external\">Alignment</a></li><li><a href=\"https://github.com/facelessuser/BracketHighlighter\" target=\"_blank\" rel=\"external\">Bracket​Highlight</a></li><li>ConvertToUTF8</li><li><a href=\"http://emmet.io/\" target=\"_blank\" rel=\"external\">Emmet</a></li></ul><h2 id=\"基本快捷键-我会用到的\"><a href=\"#基本快捷键-我会用到的\" class=\"headerlink\" title=\"基本快捷键(我会用到的)\"></a>基本快捷键(我会用到的)</h2><h3 id=\"打开-前往\"><a href=\"#打开-前往\" class=\"headerlink\" title=\"打开/前往\"></a>打开/前往</h3><table><thead><tr><th>快捷键</th><th>操作</th></tr></thead><tbody><tr><td><strong>command + P</strong></td><td>前往文件(输入<code>:</code>则等同于<code>control + G</code>跳到行)</td></tr><tr><td><strong>command + control + P</strong></td><td>前往项目</td></tr><tr><td><strong>command + R</strong></td><td>前往method</td></tr><tr><td><strong>command + shift + R</strong></td><td>前往全局method(也许需添加之前的配置)</td></tr><tr><td>command + shift + P</td><td>命令提示</td></tr><tr><td>control + G</td><td>前往行</td></tr><tr><td><strong>command + K + B</strong></td><td>开关侧栏</td></tr><tr><td>control + `</td><td>python控制台</td></tr></tbody></table><h3 id=\"编辑\"><a href=\"#编辑\" class=\"headerlink\" title=\"编辑\"></a>编辑</h3><table><thead><tr><th>快捷键</th><th>操作</th></tr></thead><tbody><tr><td><strong>command + D</strong></td><td>选择词 (重复按下时多重选择相同的词进行多重编辑)</td></tr><tr><td>command + KK</td><td>从光标处删除至行尾</td></tr><tr><td><strong>command + shift + D</strong></td><td>复制(多)行</td></tr><tr><td>command + J</td><td>合并(多)行</td></tr><tr><td>command + KU</td><td>改为大写</td></tr><tr><td>command + KL</td><td>改为小写</td></tr><tr><td><strong>command + /</strong></td><td>注释</td></tr><tr><td><strong>command + option + /</strong></td><td>块注释</td></tr><tr><td>command + Z</td><td>撤销</td></tr><tr><td>command + Y</td><td>恢复或重复</td></tr><tr><td>control + M</td><td>跳转至对应的括号</td></tr><tr><td>command + U</td><td>软撤销（可撤M销光标移动）</td></tr><tr><td>command + shift + U</td><td>软重做（可重做光标移动）</td></tr></tbody></table><h3 id=\"分屏\"><a href=\"#分屏\" class=\"headerlink\" title=\"分屏\"></a>分屏</h3><table><thead><tr><th>快捷键</th><th>操作</th></tr></thead><tbody><tr><td>command + option + X</td><td>X屏</td></tr><tr><td>control + [1,2,3,4]</td><td>焦点移动至相应组</td></tr><tr><td>control + shift + [1,2,3,4]</td><td>将当前文件移动至相应组</td></tr><tr><td>command + [1,2,3]</td><td>选择相应标签页</td></tr></tbody></table>"},{"title":"美妆心得技术周刊2017-06-26","date":"2017-06-26T15:58:19.000Z","_content":"\n> 产品及其他\n\n不负光阴就是最好的努力丨这10句话，送给你         http://www.jianshu.com/p/b1114bf1b0a2\n\n除了数字专辑和付费订阅，在线音乐行业或将迎来全新盈利模式？    http://36kr.com/p/5080951.html\n\n你是如何一步步失去自我的？    http://36kr.com/p/5080217.html\n\n\n知乎上关于有哪些快速入睡的妙招，高票回答，妈妈再也不用担心我晚上失眠了，https://www.zhihu.com/question/19763541/answer/28048756?utm_medium=social&utm_source=qq\n\n一种生命游戏，可以通过一个游戏来模拟全宇宙。[http://www.miaopai.com/show/~FHkMnJUOyqJTbJ75o2qdi7TrGSTxi7-.htm](http://www.miaopai.com/show/~FHkMnJUOyqJTbJ75o2qdi7TrGSTxi7-.htm)\n\n> 安卓\n\n某些JSON API会以数组的形式返回原始数据类型（例如String和integer），Realm暂时不支持对这种数组的处理。但我们可以通过自定义TypeAdapter来处理这种情况。\nhttps://gist.github.com/cmelchior/1a97377df0c49cd4fca9\n\n\n> IOS\n\niOS11 最全面的设计通讯     https://juejin.im/entry/594a0cb3da2f6000679c5223\n\nMoya简介 http://www.jianshu.com/p/d642865f0a64\n\niOS11 新特性 https://onevcat.com/2017/06/ios-11-sdk/\n\n\n> 前端\n\n正则表达式30分钟入门教程 https://deerchao.net/tutorials/regex/regex.htm#lookaround   推荐《精通正则表达式》\n\nVue 全家桶 + Electron 开发的一个跨三端的应用 https://juejin.im/post/5946af9661ff4b006cf40040 与NW齐名的桌面开发框架，现在NW好像不行了\n\nVue Admin UI 资源\n\nhttp://coreui.io/examples\nhttps://adminlte.io/themes/AdminLTE/index2.html\nhttps://github.com/kahun/awesome-sysadmin\nhttps://themeforest.net/category/site-templates/admin-templates\nhttp://awesome-django.com/\n\nwebpack3来了\n\nhttp://www.cnblogs.com/wmhuang/p/7065396.html\nhttps://medium.com/webpack/webpack-3-official-release-15fd2dd8f07b\nhttps://zhuanlan.zhihu.com/p/27474985\n\n\n2017-Vue2实例学习系列 https://juejin.im/collection/58b4dfc56a22657a386988ad\n\n>后台\n\n\ngit flow是一个工作流，是一种规范。brew安装的命令只是对这个规范的一种命令行约束的实现。\n\n重新分享下git flow 分支管理流程。\nhttp://apidoc.cosmeapp.com/wiki/#/guide/git/git_flow\nhttp://www.jianshu.com/p/104fa8b15d1e\n\n\n代码检测是个好东西。多人协作可以保持代码风格的一致。\nPHP的PSR系列规范（不仅仅是代码规范，甚至包括缓存接口的规范）\nhttps://psr.phphub.org/\n- 基于PSR规范实现“缓存接口”，“日志接口”的框架，可以使开发者在使用这些开发框架时降低学习成本。\n- 后端编码规范目前使用PSR2规范对PHPSTORM进行了相关配置\n    - 比之前好了许多，多人协作保持风格一致很重要，对编码规范有了一个可衡量可检测的标准，不符合规范无法提交代码。\n    - PSR2默认规范很不错，但配置的code sniffer检测对一些细节还不够深入，后续还需要自定义一些代码风格检查\n\n\n> 设计\n\n设计师眼高手低怎么破 http://mp.weixin.qq.com/s/sPBDYXZGMVLSwN2kMYerkQ\n\n多亏 Sketch，我这个小码农可以自己设计app了 http://www.jianshu.com/p/c2946a9869ed\n\n**本周刊由团队成员推荐整理而成，内容来自互联网**\n","source":"_posts/weekly-2017-06-26.md","raw":"---\ntitle: 美妆心得技术周刊2017-06-26\ndate: 2017-06-26 23:58:19\ntags:\n- weekly\n---\n\n> 产品及其他\n\n不负光阴就是最好的努力丨这10句话，送给你         http://www.jianshu.com/p/b1114bf1b0a2\n\n除了数字专辑和付费订阅，在线音乐行业或将迎来全新盈利模式？    http://36kr.com/p/5080951.html\n\n你是如何一步步失去自我的？    http://36kr.com/p/5080217.html\n\n\n知乎上关于有哪些快速入睡的妙招，高票回答，妈妈再也不用担心我晚上失眠了，https://www.zhihu.com/question/19763541/answer/28048756?utm_medium=social&utm_source=qq\n\n一种生命游戏，可以通过一个游戏来模拟全宇宙。[http://www.miaopai.com/show/~FHkMnJUOyqJTbJ75o2qdi7TrGSTxi7-.htm](http://www.miaopai.com/show/~FHkMnJUOyqJTbJ75o2qdi7TrGSTxi7-.htm)\n\n> 安卓\n\n某些JSON API会以数组的形式返回原始数据类型（例如String和integer），Realm暂时不支持对这种数组的处理。但我们可以通过自定义TypeAdapter来处理这种情况。\nhttps://gist.github.com/cmelchior/1a97377df0c49cd4fca9\n\n\n> IOS\n\niOS11 最全面的设计通讯     https://juejin.im/entry/594a0cb3da2f6000679c5223\n\nMoya简介 http://www.jianshu.com/p/d642865f0a64\n\niOS11 新特性 https://onevcat.com/2017/06/ios-11-sdk/\n\n\n> 前端\n\n正则表达式30分钟入门教程 https://deerchao.net/tutorials/regex/regex.htm#lookaround   推荐《精通正则表达式》\n\nVue 全家桶 + Electron 开发的一个跨三端的应用 https://juejin.im/post/5946af9661ff4b006cf40040 与NW齐名的桌面开发框架，现在NW好像不行了\n\nVue Admin UI 资源\n\nhttp://coreui.io/examples\nhttps://adminlte.io/themes/AdminLTE/index2.html\nhttps://github.com/kahun/awesome-sysadmin\nhttps://themeforest.net/category/site-templates/admin-templates\nhttp://awesome-django.com/\n\nwebpack3来了\n\nhttp://www.cnblogs.com/wmhuang/p/7065396.html\nhttps://medium.com/webpack/webpack-3-official-release-15fd2dd8f07b\nhttps://zhuanlan.zhihu.com/p/27474985\n\n\n2017-Vue2实例学习系列 https://juejin.im/collection/58b4dfc56a22657a386988ad\n\n>后台\n\n\ngit flow是一个工作流，是一种规范。brew安装的命令只是对这个规范的一种命令行约束的实现。\n\n重新分享下git flow 分支管理流程。\nhttp://apidoc.cosmeapp.com/wiki/#/guide/git/git_flow\nhttp://www.jianshu.com/p/104fa8b15d1e\n\n\n代码检测是个好东西。多人协作可以保持代码风格的一致。\nPHP的PSR系列规范（不仅仅是代码规范，甚至包括缓存接口的规范）\nhttps://psr.phphub.org/\n- 基于PSR规范实现“缓存接口”，“日志接口”的框架，可以使开发者在使用这些开发框架时降低学习成本。\n- 后端编码规范目前使用PSR2规范对PHPSTORM进行了相关配置\n    - 比之前好了许多，多人协作保持风格一致很重要，对编码规范有了一个可衡量可检测的标准，不符合规范无法提交代码。\n    - PSR2默认规范很不错，但配置的code sniffer检测对一些细节还不够深入，后续还需要自定义一些代码风格检查\n\n\n> 设计\n\n设计师眼高手低怎么破 http://mp.weixin.qq.com/s/sPBDYXZGMVLSwN2kMYerkQ\n\n多亏 Sketch，我这个小码农可以自己设计app了 http://www.jianshu.com/p/c2946a9869ed\n\n**本周刊由团队成员推荐整理而成，内容来自互联网**\n","slug":"weekly-2017-06-26","published":1,"updated":"2017-09-18T02:12:39.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9cutiot001ads9lc7n2adub","content":"<blockquote><p>产品及其他</p></blockquote><p>不负光阴就是最好的努力丨这10句话，送给你 <a href=\"http://www.jianshu.com/p/b1114bf1b0a2\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/b1114bf1b0a2</a></p><p>除了数字专辑和付费订阅，在线音乐行业或将迎来全新盈利模式？ <a href=\"http://36kr.com/p/5080951.html\" target=\"_blank\" rel=\"external\">http://36kr.com/p/5080951.html</a></p><p>你是如何一步步失去自我的？ <a href=\"http://36kr.com/p/5080217.html\" target=\"_blank\" rel=\"external\">http://36kr.com/p/5080217.html</a></p><p>知乎上关于有哪些快速入睡的妙招，高票回答，妈妈再也不用担心我晚上失眠了，<a href=\"https://www.zhihu.com/question/19763541/answer/28048756?utm_medium=social&amp;utm_source=qq\" target=\"_blank\" rel=\"external\">https://www.zhihu.com/question/19763541/answer/28048756?utm_medium=social&amp;utm_source=qq</a></p><p>一种生命游戏，可以通过一个游戏来模拟全宇宙。<a href=\"http://www.miaopai.com/show/~FHkMnJUOyqJTbJ75o2qdi7TrGSTxi7-.htm\" target=\"_blank\" rel=\"external\">http://www.miaopai.com/show/~FHkMnJUOyqJTbJ75o2qdi7TrGSTxi7-.htm</a></p><blockquote><p>安卓</p></blockquote><p>某些JSON API会以数组的形式返回原始数据类型（例如String和integer），Realm暂时不支持对这种数组的处理。但我们可以通过自定义TypeAdapter来处理这种情况。<br><a href=\"https://gist.github.com/cmelchior/1a97377df0c49cd4fca9\" target=\"_blank\" rel=\"external\">https://gist.github.com/cmelchior/1a97377df0c49cd4fca9</a></p><blockquote><p>IOS</p></blockquote><p>iOS11 最全面的设计通讯 <a href=\"https://juejin.im/entry/594a0cb3da2f6000679c5223\" target=\"_blank\" rel=\"external\">https://juejin.im/entry/594a0cb3da2f6000679c5223</a></p><p>Moya简介 <a href=\"http://www.jianshu.com/p/d642865f0a64\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/d642865f0a64</a></p><p>iOS11 新特性 <a href=\"https://onevcat.com/2017/06/ios-11-sdk/\" target=\"_blank\" rel=\"external\">https://onevcat.com/2017/06/ios-11-sdk/</a></p><blockquote><p>前端</p></blockquote><p>正则表达式30分钟入门教程 <a href=\"https://deerchao.net/tutorials/regex/regex.htm#lookaround\" target=\"_blank\" rel=\"external\">https://deerchao.net/tutorials/regex/regex.htm#lookaround</a> 推荐《精通正则表达式》</p><p>Vue 全家桶 + Electron 开发的一个跨三端的应用 <a href=\"https://juejin.im/post/5946af9661ff4b006cf40040\" target=\"_blank\" rel=\"external\">https://juejin.im/post/5946af9661ff4b006cf40040</a> 与NW齐名的桌面开发框架，现在NW好像不行了</p><p>Vue Admin UI 资源</p><p><a href=\"http://coreui.io/examples\" target=\"_blank\" rel=\"external\">http://coreui.io/examples</a><br><a href=\"https://adminlte.io/themes/AdminLTE/index2.html\" target=\"_blank\" rel=\"external\">https://adminlte.io/themes/AdminLTE/index2.html</a><br><a href=\"https://github.com/kahun/awesome-sysadmin\" target=\"_blank\" rel=\"external\">https://github.com/kahun/awesome-sysadmin</a><br><a href=\"https://themeforest.net/category/site-templates/admin-templates\" target=\"_blank\" rel=\"external\">https://themeforest.net/category/site-templates/admin-templates</a><br><a href=\"http://awesome-django.com/\" target=\"_blank\" rel=\"external\">http://awesome-django.com/</a></p><p>webpack3来了</p><p><a href=\"http://www.cnblogs.com/wmhuang/p/7065396.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/wmhuang/p/7065396.html</a><br><a href=\"https://medium.com/webpack/webpack-3-official-release-15fd2dd8f07b\" target=\"_blank\" rel=\"external\">https://medium.com/webpack/webpack-3-official-release-15fd2dd8f07b</a><br><a href=\"https://zhuanlan.zhihu.com/p/27474985\" target=\"_blank\" rel=\"external\">https://zhuanlan.zhihu.com/p/27474985</a></p><p>2017-Vue2实例学习系列 <a href=\"https://juejin.im/collection/58b4dfc56a22657a386988ad\" target=\"_blank\" rel=\"external\">https://juejin.im/collection/58b4dfc56a22657a386988ad</a></p><blockquote><p>后台</p></blockquote><p>git flow是一个工作流，是一种规范。brew安装的命令只是对这个规范的一种命令行约束的实现。</p><p>重新分享下git flow 分支管理流程。<br><a href=\"http://apidoc.cosmeapp.com/wiki/#/guide/git/git_flow\" target=\"_blank\" rel=\"external\">http://apidoc.cosmeapp.com/wiki/#/guide/git/git_flow</a><br><a href=\"http://www.jianshu.com/p/104fa8b15d1e\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/104fa8b15d1e</a></p><p>代码检测是个好东西。多人协作可以保持代码风格的一致。<br>PHP的PSR系列规范（不仅仅是代码规范，甚至包括缓存接口的规范）<br><a href=\"https://psr.phphub.org/\" target=\"_blank\" rel=\"external\">https://psr.phphub.org/</a></p><ul><li>基于PSR规范实现“缓存接口”，“日志接口”的框架，可以使开发者在使用这些开发框架时降低学习成本。</li><li>后端编码规范目前使用PSR2规范对PHPSTORM进行了相关配置<ul><li>比之前好了许多，多人协作保持风格一致很重要，对编码规范有了一个可衡量可检测的标准，不符合规范无法提交代码。</li><li>PSR2默认规范很不错，但配置的code sniffer检测对一些细节还不够深入，后续还需要自定义一些代码风格检查</li></ul></li></ul><blockquote><p>设计</p></blockquote><p>设计师眼高手低怎么破 <a href=\"http://mp.weixin.qq.com/s/sPBDYXZGMVLSwN2kMYerkQ\" target=\"_blank\" rel=\"external\">http://mp.weixin.qq.com/s/sPBDYXZGMVLSwN2kMYerkQ</a></p><p>多亏 Sketch，我这个小码农可以自己设计app了 <a href=\"http://www.jianshu.com/p/c2946a9869ed\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/c2946a9869ed</a></p><p><strong>本周刊由团队成员推荐整理而成，内容来自互联网</strong></p>","site":{"data":{}},"excerpt":"","more":"<blockquote><p>产品及其他</p></blockquote><p>不负光阴就是最好的努力丨这10句话，送给你 <a href=\"http://www.jianshu.com/p/b1114bf1b0a2\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/b1114bf1b0a2</a></p><p>除了数字专辑和付费订阅，在线音乐行业或将迎来全新盈利模式？ <a href=\"http://36kr.com/p/5080951.html\" target=\"_blank\" rel=\"external\">http://36kr.com/p/5080951.html</a></p><p>你是如何一步步失去自我的？ <a href=\"http://36kr.com/p/5080217.html\" target=\"_blank\" rel=\"external\">http://36kr.com/p/5080217.html</a></p><p>知乎上关于有哪些快速入睡的妙招，高票回答，妈妈再也不用担心我晚上失眠了，<a href=\"https://www.zhihu.com/question/19763541/answer/28048756?utm_medium=social&amp;utm_source=qq\" target=\"_blank\" rel=\"external\">https://www.zhihu.com/question/19763541/answer/28048756?utm_medium=social&amp;utm_source=qq</a></p><p>一种生命游戏，可以通过一个游戏来模拟全宇宙。<a href=\"http://www.miaopai.com/show/~FHkMnJUOyqJTbJ75o2qdi7TrGSTxi7-.htm\" target=\"_blank\" rel=\"external\">http://www.miaopai.com/show/~FHkMnJUOyqJTbJ75o2qdi7TrGSTxi7-.htm</a></p><blockquote><p>安卓</p></blockquote><p>某些JSON API会以数组的形式返回原始数据类型（例如String和integer），Realm暂时不支持对这种数组的处理。但我们可以通过自定义TypeAdapter来处理这种情况。<br><a href=\"https://gist.github.com/cmelchior/1a97377df0c49cd4fca9\" target=\"_blank\" rel=\"external\">https://gist.github.com/cmelchior/1a97377df0c49cd4fca9</a></p><blockquote><p>IOS</p></blockquote><p>iOS11 最全面的设计通讯 <a href=\"https://juejin.im/entry/594a0cb3da2f6000679c5223\" target=\"_blank\" rel=\"external\">https://juejin.im/entry/594a0cb3da2f6000679c5223</a></p><p>Moya简介 <a href=\"http://www.jianshu.com/p/d642865f0a64\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/d642865f0a64</a></p><p>iOS11 新特性 <a href=\"https://onevcat.com/2017/06/ios-11-sdk/\" target=\"_blank\" rel=\"external\">https://onevcat.com/2017/06/ios-11-sdk/</a></p><blockquote><p>前端</p></blockquote><p>正则表达式30分钟入门教程 <a href=\"https://deerchao.net/tutorials/regex/regex.htm#lookaround\" target=\"_blank\" rel=\"external\">https://deerchao.net/tutorials/regex/regex.htm#lookaround</a> 推荐《精通正则表达式》</p><p>Vue 全家桶 + Electron 开发的一个跨三端的应用 <a href=\"https://juejin.im/post/5946af9661ff4b006cf40040\" target=\"_blank\" rel=\"external\">https://juejin.im/post/5946af9661ff4b006cf40040</a> 与NW齐名的桌面开发框架，现在NW好像不行了</p><p>Vue Admin UI 资源</p><p><a href=\"http://coreui.io/examples\" target=\"_blank\" rel=\"external\">http://coreui.io/examples</a><br><a href=\"https://adminlte.io/themes/AdminLTE/index2.html\" target=\"_blank\" rel=\"external\">https://adminlte.io/themes/AdminLTE/index2.html</a><br><a href=\"https://github.com/kahun/awesome-sysadmin\" target=\"_blank\" rel=\"external\">https://github.com/kahun/awesome-sysadmin</a><br><a href=\"https://themeforest.net/category/site-templates/admin-templates\" target=\"_blank\" rel=\"external\">https://themeforest.net/category/site-templates/admin-templates</a><br><a href=\"http://awesome-django.com/\" target=\"_blank\" rel=\"external\">http://awesome-django.com/</a></p><p>webpack3来了</p><p><a href=\"http://www.cnblogs.com/wmhuang/p/7065396.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/wmhuang/p/7065396.html</a><br><a href=\"https://medium.com/webpack/webpack-3-official-release-15fd2dd8f07b\" target=\"_blank\" rel=\"external\">https://medium.com/webpack/webpack-3-official-release-15fd2dd8f07b</a><br><a href=\"https://zhuanlan.zhihu.com/p/27474985\" target=\"_blank\" rel=\"external\">https://zhuanlan.zhihu.com/p/27474985</a></p><p>2017-Vue2实例学习系列 <a href=\"https://juejin.im/collection/58b4dfc56a22657a386988ad\" target=\"_blank\" rel=\"external\">https://juejin.im/collection/58b4dfc56a22657a386988ad</a></p><blockquote><p>后台</p></blockquote><p>git flow是一个工作流，是一种规范。brew安装的命令只是对这个规范的一种命令行约束的实现。</p><p>重新分享下git flow 分支管理流程。<br><a href=\"http://apidoc.cosmeapp.com/wiki/#/guide/git/git_flow\" target=\"_blank\" rel=\"external\">http://apidoc.cosmeapp.com/wiki/#/guide/git/git_flow</a><br><a href=\"http://www.jianshu.com/p/104fa8b15d1e\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/104fa8b15d1e</a></p><p>代码检测是个好东西。多人协作可以保持代码风格的一致。<br>PHP的PSR系列规范（不仅仅是代码规范，甚至包括缓存接口的规范）<br><a href=\"https://psr.phphub.org/\" target=\"_blank\" rel=\"external\">https://psr.phphub.org/</a></p><ul><li>基于PSR规范实现“缓存接口”，“日志接口”的框架，可以使开发者在使用这些开发框架时降低学习成本。</li><li>后端编码规范目前使用PSR2规范对PHPSTORM进行了相关配置<ul><li>比之前好了许多，多人协作保持风格一致很重要，对编码规范有了一个可衡量可检测的标准，不符合规范无法提交代码。</li><li>PSR2默认规范很不错，但配置的code sniffer检测对一些细节还不够深入，后续还需要自定义一些代码风格检查</li></ul></li></ul><blockquote><p>设计</p></blockquote><p>设计师眼高手低怎么破 <a href=\"http://mp.weixin.qq.com/s/sPBDYXZGMVLSwN2kMYerkQ\" target=\"_blank\" rel=\"external\">http://mp.weixin.qq.com/s/sPBDYXZGMVLSwN2kMYerkQ</a></p><p>多亏 Sketch，我这个小码农可以自己设计app了 <a href=\"http://www.jianshu.com/p/c2946a9869ed\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/c2946a9869ed</a></p><p><strong>本周刊由团队成员推荐整理而成，内容来自互联网</strong></p>"},{"title":"美妆心得技术周刊2017-07-03","date":"2017-07-03T15:58:19.000Z","_content":"\n\n> 产品及其他\n\n《我们是如何一步一步沦为平庸的？》：你从来就没有用心经营过自己的生活，又怎么指望能够过的不平庸。任何一件小事，只要用心，必定能够发现美和幸福。http://mp.weixin.qq.com/s/ghNv8vgDgM46dymC6jn4jw\n\n接好一大波情怀 《星际争霸》重制版开发趣闻http://tech.feng.com/TechStory/To-pick-up-a-big-Bob-feelings-starcraft-heavy-plate-making-interesting-development_684272.shtml\n\n丧文化火了，走心的营销还会远吗？    http://www.myzaker.com/article/5952f5d79490cb030200000f/\n\n> 安卓\n\nRealm for Android详细教程 http://www.jianshu.com/p/28912c2f31db\n\n详解Java中的clone方法 -- 原型模式 http://blog.csdn.net/zhangjg_blog/article/details/18369201\n\n主题：你可能不知道的 Calendar 之 DAY_OF_WEEK http://www.iteye.com/topic/1145023\n\n\n说说Realm在Android上的坑 https://juejin.im/entry/5827f4dac4c971005438378f\n\n\n\n> IOS\n\nThe Right Way to Architect iOS App with Swift  http://limboy.me/tech/2017/06/22/the-right-way-to-ios-architecture.html\n\nARKit 初体验 https://sspai.com/post/39806\n\niOS 11最全面的设计通讯    http://www.woshipm.com/pd/702353.html\n\n\n> 前端\n\n正则表达式编程: https://zhuanlan.zhihu.com/p/27571489?group_id=862893538252308480\n\n新闻: MDN被Mozilla重造，将更关注Web文档\nhttps://mp.weixin.qq.com/s?__biz=MzIwNjQwMzUwMQ==&mid=2247485290&idx=1&sn=31020d4fd22132c21af840e6ee8456de&chksm=972365a8a054ecbea8485d9f824c9a3295973fad613b18ca8a3ee5fda04dc3ad43d7d7689e98&scene=0\nhttps://blog.mozilla.org/opendesign/future-mdn-focus-web-docs/\n\n\n> 后台\n\n在Mac上的PHPSTORM配置XDebug来调试PHP程序 http://www.jianshu.com/p/3fe69df5d6de\n\nNginx 配置 https://imququ.com/post/my-nginx-conf.html\n\n\n> 设计\n\n《临摹是设计师入门的敲门砖》http://www.woshipm.com/pd/697400.html\n\n\n> 工具\n\nmacOS 有哪些冷门但是一但发现就无法自拔的软件？ https://www.zhihu.com/question/35050387\n\n给 GitHub 项目戴上勋章  https://loggerhead.me/posts/gei-github-xiang-mu-dai-shang-xun-zhang.html\n\n适合前端的vim配置: https://github.com/shfshanyue/vim-config\n\n\n> 测试\n\nMac上安装Appium详细步骤：http://www.jianshu.com/p/0932149baf24     坑: 使用zsh后android环境失效\n\nPython selenium 三种等待方式详解(必会)：http://www.jb51.net/article/92672.htm       这是3种等待方式，不过我还没太搞懂什么时候用那种等待方式\n\n**本周刊由团队成员推荐整理而成，内容来自互联网**","source":"_posts/weekly-2017-07-03.md","raw":"---\ntitle: 美妆心得技术周刊2017-07-03\ndate: 2017-07-03 23:58:19\ntags:\n- weekly\n---\n\n\n> 产品及其他\n\n《我们是如何一步一步沦为平庸的？》：你从来就没有用心经营过自己的生活，又怎么指望能够过的不平庸。任何一件小事，只要用心，必定能够发现美和幸福。http://mp.weixin.qq.com/s/ghNv8vgDgM46dymC6jn4jw\n\n接好一大波情怀 《星际争霸》重制版开发趣闻http://tech.feng.com/TechStory/To-pick-up-a-big-Bob-feelings-starcraft-heavy-plate-making-interesting-development_684272.shtml\n\n丧文化火了，走心的营销还会远吗？    http://www.myzaker.com/article/5952f5d79490cb030200000f/\n\n> 安卓\n\nRealm for Android详细教程 http://www.jianshu.com/p/28912c2f31db\n\n详解Java中的clone方法 -- 原型模式 http://blog.csdn.net/zhangjg_blog/article/details/18369201\n\n主题：你可能不知道的 Calendar 之 DAY_OF_WEEK http://www.iteye.com/topic/1145023\n\n\n说说Realm在Android上的坑 https://juejin.im/entry/5827f4dac4c971005438378f\n\n\n\n> IOS\n\nThe Right Way to Architect iOS App with Swift  http://limboy.me/tech/2017/06/22/the-right-way-to-ios-architecture.html\n\nARKit 初体验 https://sspai.com/post/39806\n\niOS 11最全面的设计通讯    http://www.woshipm.com/pd/702353.html\n\n\n> 前端\n\n正则表达式编程: https://zhuanlan.zhihu.com/p/27571489?group_id=862893538252308480\n\n新闻: MDN被Mozilla重造，将更关注Web文档\nhttps://mp.weixin.qq.com/s?__biz=MzIwNjQwMzUwMQ==&mid=2247485290&idx=1&sn=31020d4fd22132c21af840e6ee8456de&chksm=972365a8a054ecbea8485d9f824c9a3295973fad613b18ca8a3ee5fda04dc3ad43d7d7689e98&scene=0\nhttps://blog.mozilla.org/opendesign/future-mdn-focus-web-docs/\n\n\n> 后台\n\n在Mac上的PHPSTORM配置XDebug来调试PHP程序 http://www.jianshu.com/p/3fe69df5d6de\n\nNginx 配置 https://imququ.com/post/my-nginx-conf.html\n\n\n> 设计\n\n《临摹是设计师入门的敲门砖》http://www.woshipm.com/pd/697400.html\n\n\n> 工具\n\nmacOS 有哪些冷门但是一但发现就无法自拔的软件？ https://www.zhihu.com/question/35050387\n\n给 GitHub 项目戴上勋章  https://loggerhead.me/posts/gei-github-xiang-mu-dai-shang-xun-zhang.html\n\n适合前端的vim配置: https://github.com/shfshanyue/vim-config\n\n\n> 测试\n\nMac上安装Appium详细步骤：http://www.jianshu.com/p/0932149baf24     坑: 使用zsh后android环境失效\n\nPython selenium 三种等待方式详解(必会)：http://www.jb51.net/article/92672.htm       这是3种等待方式，不过我还没太搞懂什么时候用那种等待方式\n\n**本周刊由团队成员推荐整理而成，内容来自互联网**","slug":"weekly-2017-07-03","published":1,"updated":"2017-09-18T02:12:39.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9cutiou001cds9l83znib80","content":"<blockquote><p>产品及其他</p></blockquote><p>《我们是如何一步一步沦为平庸的？》：你从来就没有用心经营过自己的生活，又怎么指望能够过的不平庸。任何一件小事，只要用心，必定能够发现美和幸福。<a href=\"http://mp.weixin.qq.com/s/ghNv8vgDgM46dymC6jn4jw\" target=\"_blank\" rel=\"external\">http://mp.weixin.qq.com/s/ghNv8vgDgM46dymC6jn4jw</a></p><p>接好一大波情怀 《星际争霸》重制版开发趣闻<a href=\"http://tech.feng.com/TechStory/To-pick-up-a-big-Bob-feelings-starcraft-heavy-plate-making-interesting-development_684272.shtml\" target=\"_blank\" rel=\"external\">http://tech.feng.com/TechStory/To-pick-up-a-big-Bob-feelings-starcraft-heavy-plate-making-interesting-development_684272.shtml</a></p><p>丧文化火了，走心的营销还会远吗？ <a href=\"http://www.myzaker.com/article/5952f5d79490cb030200000f/\" target=\"_blank\" rel=\"external\">http://www.myzaker.com/article/5952f5d79490cb030200000f/</a></p><blockquote><p>安卓</p></blockquote><p>Realm for Android详细教程 <a href=\"http://www.jianshu.com/p/28912c2f31db\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/28912c2f31db</a></p><p>详解Java中的clone方法 – 原型模式 <a href=\"http://blog.csdn.net/zhangjg_blog/article/details/18369201\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/zhangjg_blog/article/details/18369201</a></p><p>主题：你可能不知道的 Calendar 之 DAY_OF_WEEK <a href=\"http://www.iteye.com/topic/1145023\" target=\"_blank\" rel=\"external\">http://www.iteye.com/topic/1145023</a></p><p>说说Realm在Android上的坑 <a href=\"https://juejin.im/entry/5827f4dac4c971005438378f\" target=\"_blank\" rel=\"external\">https://juejin.im/entry/5827f4dac4c971005438378f</a></p><blockquote><p>IOS</p></blockquote><p>The Right Way to Architect iOS App with Swift <a href=\"http://limboy.me/tech/2017/06/22/the-right-way-to-ios-architecture.html\" target=\"_blank\" rel=\"external\">http://limboy.me/tech/2017/06/22/the-right-way-to-ios-architecture.html</a></p><p>ARKit 初体验 <a href=\"https://sspai.com/post/39806\" target=\"_blank\" rel=\"external\">https://sspai.com/post/39806</a></p><p>iOS 11最全面的设计通讯 <a href=\"http://www.woshipm.com/pd/702353.html\" target=\"_blank\" rel=\"external\">http://www.woshipm.com/pd/702353.html</a></p><blockquote><p>前端</p></blockquote><p>正则表达式编程: <a href=\"https://zhuanlan.zhihu.com/p/27571489?group_id=862893538252308480\" target=\"_blank\" rel=\"external\">https://zhuanlan.zhihu.com/p/27571489?group_id=862893538252308480</a></p><p>新闻: MDN被Mozilla重造，将更关注Web文档<br><a href=\"https://mp.weixin.qq.com/s?__biz=MzIwNjQwMzUwMQ==&amp;mid=2247485290&amp;idx=1&amp;sn=31020d4fd22132c21af840e6ee8456de&amp;chksm=972365a8a054ecbea8485d9f824c9a3295973fad613b18ca8a3ee5fda04dc3ad43d7d7689e98&amp;scene=0\" target=\"_blank\" rel=\"external\">https://mp.weixin.qq.com/s?__biz=MzIwNjQwMzUwMQ==&amp;mid=2247485290&amp;idx=1&amp;sn=31020d4fd22132c21af840e6ee8456de&amp;chksm=972365a8a054ecbea8485d9f824c9a3295973fad613b18ca8a3ee5fda04dc3ad43d7d7689e98&amp;scene=0</a><br><a href=\"https://blog.mozilla.org/opendesign/future-mdn-focus-web-docs/\" target=\"_blank\" rel=\"external\">https://blog.mozilla.org/opendesign/future-mdn-focus-web-docs/</a></p><blockquote><p>后台</p></blockquote><p>在Mac上的PHPSTORM配置XDebug来调试PHP程序 <a href=\"http://www.jianshu.com/p/3fe69df5d6de\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/3fe69df5d6de</a></p><p>Nginx 配置 <a href=\"https://imququ.com/post/my-nginx-conf.html\" target=\"_blank\" rel=\"external\">https://imququ.com/post/my-nginx-conf.html</a></p><blockquote><p>设计</p></blockquote><p>《临摹是设计师入门的敲门砖》<a href=\"http://www.woshipm.com/pd/697400.html\" target=\"_blank\" rel=\"external\">http://www.woshipm.com/pd/697400.html</a></p><blockquote><p>工具</p></blockquote><p>macOS 有哪些冷门但是一但发现就无法自拔的软件？ <a href=\"https://www.zhihu.com/question/35050387\" target=\"_blank\" rel=\"external\">https://www.zhihu.com/question/35050387</a></p><p>给 GitHub 项目戴上勋章 <a href=\"https://loggerhead.me/posts/gei-github-xiang-mu-dai-shang-xun-zhang.html\" target=\"_blank\" rel=\"external\">https://loggerhead.me/posts/gei-github-xiang-mu-dai-shang-xun-zhang.html</a></p><p>适合前端的vim配置: <a href=\"https://github.com/shfshanyue/vim-config\" target=\"_blank\" rel=\"external\">https://github.com/shfshanyue/vim-config</a></p><blockquote><p>测试</p></blockquote><p>Mac上安装Appium详细步骤：<a href=\"http://www.jianshu.com/p/0932149baf24\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/0932149baf24</a> 坑: 使用zsh后android环境失效</p><p>Python selenium 三种等待方式详解(必会)：<a href=\"http://www.jb51.net/article/92672.htm\" target=\"_blank\" rel=\"external\">http://www.jb51.net/article/92672.htm</a> 这是3种等待方式，不过我还没太搞懂什么时候用那种等待方式</p><p><strong>本周刊由团队成员推荐整理而成，内容来自互联网</strong></p>","site":{"data":{}},"excerpt":"","more":"<blockquote><p>产品及其他</p></blockquote><p>《我们是如何一步一步沦为平庸的？》：你从来就没有用心经营过自己的生活，又怎么指望能够过的不平庸。任何一件小事，只要用心，必定能够发现美和幸福。<a href=\"http://mp.weixin.qq.com/s/ghNv8vgDgM46dymC6jn4jw\" target=\"_blank\" rel=\"external\">http://mp.weixin.qq.com/s/ghNv8vgDgM46dymC6jn4jw</a></p><p>接好一大波情怀 《星际争霸》重制版开发趣闻<a href=\"http://tech.feng.com/TechStory/To-pick-up-a-big-Bob-feelings-starcraft-heavy-plate-making-interesting-development_684272.shtml\" target=\"_blank\" rel=\"external\">http://tech.feng.com/TechStory/To-pick-up-a-big-Bob-feelings-starcraft-heavy-plate-making-interesting-development_684272.shtml</a></p><p>丧文化火了，走心的营销还会远吗？ <a href=\"http://www.myzaker.com/article/5952f5d79490cb030200000f/\" target=\"_blank\" rel=\"external\">http://www.myzaker.com/article/5952f5d79490cb030200000f/</a></p><blockquote><p>安卓</p></blockquote><p>Realm for Android详细教程 <a href=\"http://www.jianshu.com/p/28912c2f31db\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/28912c2f31db</a></p><p>详解Java中的clone方法 – 原型模式 <a href=\"http://blog.csdn.net/zhangjg_blog/article/details/18369201\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/zhangjg_blog/article/details/18369201</a></p><p>主题：你可能不知道的 Calendar 之 DAY_OF_WEEK <a href=\"http://www.iteye.com/topic/1145023\" target=\"_blank\" rel=\"external\">http://www.iteye.com/topic/1145023</a></p><p>说说Realm在Android上的坑 <a href=\"https://juejin.im/entry/5827f4dac4c971005438378f\" target=\"_blank\" rel=\"external\">https://juejin.im/entry/5827f4dac4c971005438378f</a></p><blockquote><p>IOS</p></blockquote><p>The Right Way to Architect iOS App with Swift <a href=\"http://limboy.me/tech/2017/06/22/the-right-way-to-ios-architecture.html\" target=\"_blank\" rel=\"external\">http://limboy.me/tech/2017/06/22/the-right-way-to-ios-architecture.html</a></p><p>ARKit 初体验 <a href=\"https://sspai.com/post/39806\" target=\"_blank\" rel=\"external\">https://sspai.com/post/39806</a></p><p>iOS 11最全面的设计通讯 <a href=\"http://www.woshipm.com/pd/702353.html\" target=\"_blank\" rel=\"external\">http://www.woshipm.com/pd/702353.html</a></p><blockquote><p>前端</p></blockquote><p>正则表达式编程: <a href=\"https://zhuanlan.zhihu.com/p/27571489?group_id=862893538252308480\" target=\"_blank\" rel=\"external\">https://zhuanlan.zhihu.com/p/27571489?group_id=862893538252308480</a></p><p>新闻: MDN被Mozilla重造，将更关注Web文档<br><a href=\"https://mp.weixin.qq.com/s?__biz=MzIwNjQwMzUwMQ==&amp;mid=2247485290&amp;idx=1&amp;sn=31020d4fd22132c21af840e6ee8456de&amp;chksm=972365a8a054ecbea8485d9f824c9a3295973fad613b18ca8a3ee5fda04dc3ad43d7d7689e98&amp;scene=0\" target=\"_blank\" rel=\"external\">https://mp.weixin.qq.com/s?__biz=MzIwNjQwMzUwMQ==&amp;mid=2247485290&amp;idx=1&amp;sn=31020d4fd22132c21af840e6ee8456de&amp;chksm=972365a8a054ecbea8485d9f824c9a3295973fad613b18ca8a3ee5fda04dc3ad43d7d7689e98&amp;scene=0</a><br><a href=\"https://blog.mozilla.org/opendesign/future-mdn-focus-web-docs/\" target=\"_blank\" rel=\"external\">https://blog.mozilla.org/opendesign/future-mdn-focus-web-docs/</a></p><blockquote><p>后台</p></blockquote><p>在Mac上的PHPSTORM配置XDebug来调试PHP程序 <a href=\"http://www.jianshu.com/p/3fe69df5d6de\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/3fe69df5d6de</a></p><p>Nginx 配置 <a href=\"https://imququ.com/post/my-nginx-conf.html\" target=\"_blank\" rel=\"external\">https://imququ.com/post/my-nginx-conf.html</a></p><blockquote><p>设计</p></blockquote><p>《临摹是设计师入门的敲门砖》<a href=\"http://www.woshipm.com/pd/697400.html\" target=\"_blank\" rel=\"external\">http://www.woshipm.com/pd/697400.html</a></p><blockquote><p>工具</p></blockquote><p>macOS 有哪些冷门但是一但发现就无法自拔的软件？ <a href=\"https://www.zhihu.com/question/35050387\" target=\"_blank\" rel=\"external\">https://www.zhihu.com/question/35050387</a></p><p>给 GitHub 项目戴上勋章 <a href=\"https://loggerhead.me/posts/gei-github-xiang-mu-dai-shang-xun-zhang.html\" target=\"_blank\" rel=\"external\">https://loggerhead.me/posts/gei-github-xiang-mu-dai-shang-xun-zhang.html</a></p><p>适合前端的vim配置: <a href=\"https://github.com/shfshanyue/vim-config\" target=\"_blank\" rel=\"external\">https://github.com/shfshanyue/vim-config</a></p><blockquote><p>测试</p></blockquote><p>Mac上安装Appium详细步骤：<a href=\"http://www.jianshu.com/p/0932149baf24\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/0932149baf24</a> 坑: 使用zsh后android环境失效</p><p>Python selenium 三种等待方式详解(必会)：<a href=\"http://www.jb51.net/article/92672.htm\" target=\"_blank\" rel=\"external\">http://www.jb51.net/article/92672.htm</a> 这是3种等待方式，不过我还没太搞懂什么时候用那种等待方式</p><p><strong>本周刊由团队成员推荐整理而成，内容来自互联网</strong></p>"},{"title":"美妆心得技术周刊2017-07-17","date":"2017-07-17T15:58:19.000Z","_content":"\n> 产品及其他\n\n【一周消费热点】Gucci将于9月推出家居用品线；巴黎著名买手店Colette底关店；A&F出售计划告吹，股价暴跌  http://36kr.com/p/5083620.html\n\n如何克服严重的拖延症，核心就是：现在，立刻，马上 https://www.zhihu.com/question/20357585/answer/95469028\n\n> 安卓\n\nLoaderManager使用详解 http://www.tuicool.com/articles/JNzYR3U\n\n快速开发工具类收集 https://github.com/AbrahamCaiJin/CommonUtilLibrary\n\n\n> IOS\n\nrealm新闻模块包含多种语言包含视频（英文字幕）和中文翻译 https://news.realm.io/cn/news/\n\n\n> 前端\n\n2017JavaScript中国开发者大会 http://2017.jsconf.cn/\n\n前端单元测试整理 https://www.one-tab.com/page/-rGEh1oYShmezpXTUscP9A\n\nVue Render函数整理  https://www.one-tab.com/page/fQm7dwt0RKOYe1dl35_Vvw\n\n即将到来的正则表达式新特性 https://juejin.im/post/59683f98f265da6c4f34eec6\n\n> 后台\n\n\nApache Thrift设计概要 http://calvin1978.blogcn.com/articles/apache-thrift.html\n\n远程调用框架Thrift分享 http://xgfe.github.io/2017/05/03/zhouxiong/Thrift/\n\nThrift相关项目（Workerman 一个高性能的PHP socket服务框架）\n\n- workerman-thrift https://github.com/walkor/workerman-thrift\n- thrift-laravel https://github.com/angejia/thrift-laravel\n\n\n> 设计\n\nhttp://mp.weixin.qq.com/s/3Tf1_PJmoGe6lH69KJMlpg：设计师必须知道的素描知识\n\n\n交互总结篇（一）：框架与布局    http://www.woshipm.com/ucd/718904.html\n\n\n> 工具\n\n\n安利一款 Mac上的效率神器：CheatSheet，它是一款显示当前软件所有快捷键的软件，只需要长按 Command  键即可显示，还可以将其存储为 PDF 文件。记住一些你经常使用的 Mac 软件的快捷键对效率提升非常明显，官网下载地址：[OCheatSheet](https://www.mediaatelier.com/CheatSheet/)\n\n\n##  安利一下VScode\n\n>用了一段时间VScode，感觉还挺不错。开项目速度比atom快比sublime略慢。资源占用方面，我开3个sublime占用280Mb，1个vscode占用70Mb，考虑到插件数量的影响应该两者差不多。插件资源也比较丰富，常用插件都有，安装、删除、禁用都很方便。最后说一下我觉得比sublime好的地方：第一是免费，不用找注册码。第二是开箱即用，不用安装package control。第三自带node调试，编辑器里直接debugger。另外自带中英文，汉化做的很不错，颜值也很高。值得一试。\n\n官网 https://code.visualstudio.com/\n\n官方插件库地址 https://marketplace.visualstudio.com/vscode\n\n### 插件推荐 ###\n\nhttp://www.cnblogs.com/zzsdream/p/6592429.html\nhttp://blog.csdn.net/luyu13141314/article/details/70238990\n我在用的插件\n\n- atom one light theme 一款白色主题\n- auto rename tag 修改html标签时自动帮你改掉另一个尖括号里的标签\n- code runner 直接在编辑器里跑代码\n- EditorConfig for vs code 规范代码风格的插件\n- intelliJ idea keybindings intelliJ 系列的快捷键设置\n- path intellisense 路径补全\n- vetur vue语法高亮、自动补全等\n\n\n> 测试\n\n生成 HTMLTestRunner 测试报告学习总结   http://www.cnblogs.com/8013-cmf/p/6644366.html\n\n记Selenium HTMLTestRunner 无法生成测试报告的总结    http://blog.csdn.net/xie_0723/article/details/50825310\n\n**本周刊由团队成员推荐整理而成，内容来自互联网**","source":"_posts/weekly-2017-07-17.md","raw":"---\ntitle: 美妆心得技术周刊2017-07-17\ndate: 2017-07-17 23:58:19\ntags:\n- weekly\n---\n\n> 产品及其他\n\n【一周消费热点】Gucci将于9月推出家居用品线；巴黎著名买手店Colette底关店；A&F出售计划告吹，股价暴跌  http://36kr.com/p/5083620.html\n\n如何克服严重的拖延症，核心就是：现在，立刻，马上 https://www.zhihu.com/question/20357585/answer/95469028\n\n> 安卓\n\nLoaderManager使用详解 http://www.tuicool.com/articles/JNzYR3U\n\n快速开发工具类收集 https://github.com/AbrahamCaiJin/CommonUtilLibrary\n\n\n> IOS\n\nrealm新闻模块包含多种语言包含视频（英文字幕）和中文翻译 https://news.realm.io/cn/news/\n\n\n> 前端\n\n2017JavaScript中国开发者大会 http://2017.jsconf.cn/\n\n前端单元测试整理 https://www.one-tab.com/page/-rGEh1oYShmezpXTUscP9A\n\nVue Render函数整理  https://www.one-tab.com/page/fQm7dwt0RKOYe1dl35_Vvw\n\n即将到来的正则表达式新特性 https://juejin.im/post/59683f98f265da6c4f34eec6\n\n> 后台\n\n\nApache Thrift设计概要 http://calvin1978.blogcn.com/articles/apache-thrift.html\n\n远程调用框架Thrift分享 http://xgfe.github.io/2017/05/03/zhouxiong/Thrift/\n\nThrift相关项目（Workerman 一个高性能的PHP socket服务框架）\n\n- workerman-thrift https://github.com/walkor/workerman-thrift\n- thrift-laravel https://github.com/angejia/thrift-laravel\n\n\n> 设计\n\nhttp://mp.weixin.qq.com/s/3Tf1_PJmoGe6lH69KJMlpg：设计师必须知道的素描知识\n\n\n交互总结篇（一）：框架与布局    http://www.woshipm.com/ucd/718904.html\n\n\n> 工具\n\n\n安利一款 Mac上的效率神器：CheatSheet，它是一款显示当前软件所有快捷键的软件，只需要长按 Command  键即可显示，还可以将其存储为 PDF 文件。记住一些你经常使用的 Mac 软件的快捷键对效率提升非常明显，官网下载地址：[OCheatSheet](https://www.mediaatelier.com/CheatSheet/)\n\n\n##  安利一下VScode\n\n>用了一段时间VScode，感觉还挺不错。开项目速度比atom快比sublime略慢。资源占用方面，我开3个sublime占用280Mb，1个vscode占用70Mb，考虑到插件数量的影响应该两者差不多。插件资源也比较丰富，常用插件都有，安装、删除、禁用都很方便。最后说一下我觉得比sublime好的地方：第一是免费，不用找注册码。第二是开箱即用，不用安装package control。第三自带node调试，编辑器里直接debugger。另外自带中英文，汉化做的很不错，颜值也很高。值得一试。\n\n官网 https://code.visualstudio.com/\n\n官方插件库地址 https://marketplace.visualstudio.com/vscode\n\n### 插件推荐 ###\n\nhttp://www.cnblogs.com/zzsdream/p/6592429.html\nhttp://blog.csdn.net/luyu13141314/article/details/70238990\n我在用的插件\n\n- atom one light theme 一款白色主题\n- auto rename tag 修改html标签时自动帮你改掉另一个尖括号里的标签\n- code runner 直接在编辑器里跑代码\n- EditorConfig for vs code 规范代码风格的插件\n- intelliJ idea keybindings intelliJ 系列的快捷键设置\n- path intellisense 路径补全\n- vetur vue语法高亮、自动补全等\n\n\n> 测试\n\n生成 HTMLTestRunner 测试报告学习总结   http://www.cnblogs.com/8013-cmf/p/6644366.html\n\n记Selenium HTMLTestRunner 无法生成测试报告的总结    http://blog.csdn.net/xie_0723/article/details/50825310\n\n**本周刊由团队成员推荐整理而成，内容来自互联网**","slug":"weekly-2017-07-17","published":1,"updated":"2017-09-18T02:12:39.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9cutiow001eds9l5jhpwlm3","content":"<blockquote><p>产品及其他</p></blockquote><p>【一周消费热点】Gucci将于9月推出家居用品线；巴黎著名买手店Colette底关店；A&amp;F出售计划告吹，股价暴跌 <a href=\"http://36kr.com/p/5083620.html\" target=\"_blank\" rel=\"external\">http://36kr.com/p/5083620.html</a></p><p>如何克服严重的拖延症，核心就是：现在，立刻，马上 <a href=\"https://www.zhihu.com/question/20357585/answer/95469028\" target=\"_blank\" rel=\"external\">https://www.zhihu.com/question/20357585/answer/95469028</a></p><blockquote><p>安卓</p></blockquote><p>LoaderManager使用详解 <a href=\"http://www.tuicool.com/articles/JNzYR3U\" target=\"_blank\" rel=\"external\">http://www.tuicool.com/articles/JNzYR3U</a></p><p>快速开发工具类收集 <a href=\"https://github.com/AbrahamCaiJin/CommonUtilLibrary\" target=\"_blank\" rel=\"external\">https://github.com/AbrahamCaiJin/CommonUtilLibrary</a></p><blockquote><p>IOS</p></blockquote><p>realm新闻模块包含多种语言包含视频（英文字幕）和中文翻译 <a href=\"https://news.realm.io/cn/news/\" target=\"_blank\" rel=\"external\">https://news.realm.io/cn/news/</a></p><blockquote><p>前端</p></blockquote><p>2017JavaScript中国开发者大会 <a href=\"http://2017.jsconf.cn/\" target=\"_blank\" rel=\"external\">http://2017.jsconf.cn/</a></p><p>前端单元测试整理 <a href=\"https://www.one-tab.com/page/-rGEh1oYShmezpXTUscP9A\" target=\"_blank\" rel=\"external\">https://www.one-tab.com/page/-rGEh1oYShmezpXTUscP9A</a></p><p>Vue Render函数整理 <a href=\"https://www.one-tab.com/page/fQm7dwt0RKOYe1dl35_Vvw\" target=\"_blank\" rel=\"external\">https://www.one-tab.com/page/fQm7dwt0RKOYe1dl35_Vvw</a></p><p>即将到来的正则表达式新特性 <a href=\"https://juejin.im/post/59683f98f265da6c4f34eec6\" target=\"_blank\" rel=\"external\">https://juejin.im/post/59683f98f265da6c4f34eec6</a></p><blockquote><p>后台</p></blockquote><p>Apache Thrift设计概要 <a href=\"http://calvin1978.blogcn.com/articles/apache-thrift.html\" target=\"_blank\" rel=\"external\">http://calvin1978.blogcn.com/articles/apache-thrift.html</a></p><p>远程调用框架Thrift分享 <a href=\"http://xgfe.github.io/2017/05/03/zhouxiong/Thrift/\" target=\"_blank\" rel=\"external\">http://xgfe.github.io/2017/05/03/zhouxiong/Thrift/</a></p><p>Thrift相关项目（Workerman 一个高性能的PHP socket服务框架）</p><ul><li>workerman-thrift <a href=\"https://github.com/walkor/workerman-thrift\" target=\"_blank\" rel=\"external\">https://github.com/walkor/workerman-thrift</a></li><li>thrift-laravel <a href=\"https://github.com/angejia/thrift-laravel\" target=\"_blank\" rel=\"external\">https://github.com/angejia/thrift-laravel</a></li></ul><blockquote><p>设计</p></blockquote><p><a href=\"http://mp.weixin.qq.com/s/3Tf1_PJmoGe6lH69KJMlpg：设计师必须知道的素描知识\" target=\"_blank\" rel=\"external\">http://mp.weixin.qq.com/s/3Tf1_PJmoGe6lH69KJMlpg：设计师必须知道的素描知识</a></p><p>交互总结篇（一）：框架与布局 <a href=\"http://www.woshipm.com/ucd/718904.html\" target=\"_blank\" rel=\"external\">http://www.woshipm.com/ucd/718904.html</a></p><blockquote><p>工具</p></blockquote><p>安利一款 Mac上的效率神器：CheatSheet，它是一款显示当前软件所有快捷键的软件，只需要长按 Command 键即可显示，还可以将其存储为 PDF 文件。记住一些你经常使用的 Mac 软件的快捷键对效率提升非常明显，官网下载地址：<a href=\"https://www.mediaatelier.com/CheatSheet/\" target=\"_blank\" rel=\"external\">OCheatSheet</a></p><h2 id=\"安利一下VScode\"><a href=\"#安利一下VScode\" class=\"headerlink\" title=\"安利一下VScode\"></a>安利一下VScode</h2><blockquote><p>用了一段时间VScode，感觉还挺不错。开项目速度比atom快比sublime略慢。资源占用方面，我开3个sublime占用280Mb，1个vscode占用70Mb，考虑到插件数量的影响应该两者差不多。插件资源也比较丰富，常用插件都有，安装、删除、禁用都很方便。最后说一下我觉得比sublime好的地方：第一是免费，不用找注册码。第二是开箱即用，不用安装package control。第三自带node调试，编辑器里直接debugger。另外自带中英文，汉化做的很不错，颜值也很高。值得一试。</p></blockquote><p>官网 <a href=\"https://code.visualstudio.com/\" target=\"_blank\" rel=\"external\">https://code.visualstudio.com/</a></p><p>官方插件库地址 <a href=\"https://marketplace.visualstudio.com/vscode\" target=\"_blank\" rel=\"external\">https://marketplace.visualstudio.com/vscode</a></p><h3 id=\"插件推荐\"><a href=\"#插件推荐\" class=\"headerlink\" title=\"插件推荐\"></a>插件推荐</h3><p><a href=\"http://www.cnblogs.com/zzsdream/p/6592429.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/zzsdream/p/6592429.html</a><br><a href=\"http://blog.csdn.net/luyu13141314/article/details/70238990\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/luyu13141314/article/details/70238990</a><br>我在用的插件</p><ul><li>atom one light theme 一款白色主题</li><li>auto rename tag 修改html标签时自动帮你改掉另一个尖括号里的标签</li><li>code runner 直接在编辑器里跑代码</li><li>EditorConfig for vs code 规范代码风格的插件</li><li>intelliJ idea keybindings intelliJ 系列的快捷键设置</li><li>path intellisense 路径补全</li><li>vetur vue语法高亮、自动补全等</li></ul><blockquote><p>测试</p></blockquote><p>生成 HTMLTestRunner 测试报告学习总结 <a href=\"http://www.cnblogs.com/8013-cmf/p/6644366.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/8013-cmf/p/6644366.html</a></p><p>记Selenium HTMLTestRunner 无法生成测试报告的总结 <a href=\"http://blog.csdn.net/xie_0723/article/details/50825310\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/xie_0723/article/details/50825310</a></p><p><strong>本周刊由团队成员推荐整理而成，内容来自互联网</strong></p>","site":{"data":{}},"excerpt":"","more":"<blockquote><p>产品及其他</p></blockquote><p>【一周消费热点】Gucci将于9月推出家居用品线；巴黎著名买手店Colette底关店；A&amp;F出售计划告吹，股价暴跌 <a href=\"http://36kr.com/p/5083620.html\" target=\"_blank\" rel=\"external\">http://36kr.com/p/5083620.html</a></p><p>如何克服严重的拖延症，核心就是：现在，立刻，马上 <a href=\"https://www.zhihu.com/question/20357585/answer/95469028\" target=\"_blank\" rel=\"external\">https://www.zhihu.com/question/20357585/answer/95469028</a></p><blockquote><p>安卓</p></blockquote><p>LoaderManager使用详解 <a href=\"http://www.tuicool.com/articles/JNzYR3U\" target=\"_blank\" rel=\"external\">http://www.tuicool.com/articles/JNzYR3U</a></p><p>快速开发工具类收集 <a href=\"https://github.com/AbrahamCaiJin/CommonUtilLibrary\" target=\"_blank\" rel=\"external\">https://github.com/AbrahamCaiJin/CommonUtilLibrary</a></p><blockquote><p>IOS</p></blockquote><p>realm新闻模块包含多种语言包含视频（英文字幕）和中文翻译 <a href=\"https://news.realm.io/cn/news/\" target=\"_blank\" rel=\"external\">https://news.realm.io/cn/news/</a></p><blockquote><p>前端</p></blockquote><p>2017JavaScript中国开发者大会 <a href=\"http://2017.jsconf.cn/\" target=\"_blank\" rel=\"external\">http://2017.jsconf.cn/</a></p><p>前端单元测试整理 <a href=\"https://www.one-tab.com/page/-rGEh1oYShmezpXTUscP9A\" target=\"_blank\" rel=\"external\">https://www.one-tab.com/page/-rGEh1oYShmezpXTUscP9A</a></p><p>Vue Render函数整理 <a href=\"https://www.one-tab.com/page/fQm7dwt0RKOYe1dl35_Vvw\" target=\"_blank\" rel=\"external\">https://www.one-tab.com/page/fQm7dwt0RKOYe1dl35_Vvw</a></p><p>即将到来的正则表达式新特性 <a href=\"https://juejin.im/post/59683f98f265da6c4f34eec6\" target=\"_blank\" rel=\"external\">https://juejin.im/post/59683f98f265da6c4f34eec6</a></p><blockquote><p>后台</p></blockquote><p>Apache Thrift设计概要 <a href=\"http://calvin1978.blogcn.com/articles/apache-thrift.html\" target=\"_blank\" rel=\"external\">http://calvin1978.blogcn.com/articles/apache-thrift.html</a></p><p>远程调用框架Thrift分享 <a href=\"http://xgfe.github.io/2017/05/03/zhouxiong/Thrift/\" target=\"_blank\" rel=\"external\">http://xgfe.github.io/2017/05/03/zhouxiong/Thrift/</a></p><p>Thrift相关项目（Workerman 一个高性能的PHP socket服务框架）</p><ul><li>workerman-thrift <a href=\"https://github.com/walkor/workerman-thrift\" target=\"_blank\" rel=\"external\">https://github.com/walkor/workerman-thrift</a></li><li>thrift-laravel <a href=\"https://github.com/angejia/thrift-laravel\" target=\"_blank\" rel=\"external\">https://github.com/angejia/thrift-laravel</a></li></ul><blockquote><p>设计</p></blockquote><p><a href=\"http://mp.weixin.qq.com/s/3Tf1_PJmoGe6lH69KJMlpg：设计师必须知道的素描知识\" target=\"_blank\" rel=\"external\">http://mp.weixin.qq.com/s/3Tf1_PJmoGe6lH69KJMlpg：设计师必须知道的素描知识</a></p><p>交互总结篇（一）：框架与布局 <a href=\"http://www.woshipm.com/ucd/718904.html\" target=\"_blank\" rel=\"external\">http://www.woshipm.com/ucd/718904.html</a></p><blockquote><p>工具</p></blockquote><p>安利一款 Mac上的效率神器：CheatSheet，它是一款显示当前软件所有快捷键的软件，只需要长按 Command 键即可显示，还可以将其存储为 PDF 文件。记住一些你经常使用的 Mac 软件的快捷键对效率提升非常明显，官网下载地址：<a href=\"https://www.mediaatelier.com/CheatSheet/\" target=\"_blank\" rel=\"external\">OCheatSheet</a></p><h2 id=\"安利一下VScode\"><a href=\"#安利一下VScode\" class=\"headerlink\" title=\"安利一下VScode\"></a>安利一下VScode</h2><blockquote><p>用了一段时间VScode，感觉还挺不错。开项目速度比atom快比sublime略慢。资源占用方面，我开3个sublime占用280Mb，1个vscode占用70Mb，考虑到插件数量的影响应该两者差不多。插件资源也比较丰富，常用插件都有，安装、删除、禁用都很方便。最后说一下我觉得比sublime好的地方：第一是免费，不用找注册码。第二是开箱即用，不用安装package control。第三自带node调试，编辑器里直接debugger。另外自带中英文，汉化做的很不错，颜值也很高。值得一试。</p></blockquote><p>官网 <a href=\"https://code.visualstudio.com/\" target=\"_blank\" rel=\"external\">https://code.visualstudio.com/</a></p><p>官方插件库地址 <a href=\"https://marketplace.visualstudio.com/vscode\" target=\"_blank\" rel=\"external\">https://marketplace.visualstudio.com/vscode</a></p><h3 id=\"插件推荐\"><a href=\"#插件推荐\" class=\"headerlink\" title=\"插件推荐\"></a>插件推荐</h3><p><a href=\"http://www.cnblogs.com/zzsdream/p/6592429.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/zzsdream/p/6592429.html</a><br><a href=\"http://blog.csdn.net/luyu13141314/article/details/70238990\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/luyu13141314/article/details/70238990</a><br>我在用的插件</p><ul><li>atom one light theme 一款白色主题</li><li>auto rename tag 修改html标签时自动帮你改掉另一个尖括号里的标签</li><li>code runner 直接在编辑器里跑代码</li><li>EditorConfig for vs code 规范代码风格的插件</li><li>intelliJ idea keybindings intelliJ 系列的快捷键设置</li><li>path intellisense 路径补全</li><li>vetur vue语法高亮、自动补全等</li></ul><blockquote><p>测试</p></blockquote><p>生成 HTMLTestRunner 测试报告学习总结 <a href=\"http://www.cnblogs.com/8013-cmf/p/6644366.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/8013-cmf/p/6644366.html</a></p><p>记Selenium HTMLTestRunner 无法生成测试报告的总结 <a href=\"http://blog.csdn.net/xie_0723/article/details/50825310\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/xie_0723/article/details/50825310</a></p><p><strong>本周刊由团队成员推荐整理而成，内容来自互联网</strong></p>"},{"title":"美妆心得技术周刊2017-07-25","date":"2017-07-25T15:58:19.000Z","_content":"\n> 产品及其他\n\n个人开发者如何注册微信小程序？ https://www.zhihu.com/question/52268924\n\n昨天杭州煤气瓶爆炸受伤50余人，900+万常住人口的城市，为什么血库会告急？\nhttps://www.zhihu.com/question/62777539\n\n一款互联网产品在成功之前该如何进行试错？有哪些值得注意的地方？ https://www.zhihu.com/question/20461927\n\n关于支付、关于安全的一些总结：https://testerhome.com/topics/9356\n\n> 安卓\n\n关于Android下方虚拟导航键相关方法：高度、是否显示，是否重写http://www.cnblogs.com/ldq2016/p/6905429.html\n\nConstraintLayout-进阶的Relativelayout    http://www.jianshu.com/p/d64d845b6b90\n\n> IOS\n\niOS 内存，缓存及存储优化 http://www.jianshu.com/p/a4684a5d2d7f\n\nswift 开发中，为什么要远离heap? http://www.cocoachina.com/swift/20170629/19671.html\n\n> 前端\n\nElectron 相关资源推荐\n\n> Electron是GitHub开发一个的开源框架。它允许使用Node.js和Chromium完成桌面GUI应用程序的开发。Electron现被已多个开源Web应用程序用于前端与后端的开发，著名项目包括GitHub的Atom和微软的Visual Studio Code。 https://zh.wikipedia.org/wiki/Electron_(%E8%BD%AF%E4%BB%B6%E6%A1%86%E6%9E%B6)\n\n- https://github.com/sindresorhus/awesome-electron\n- https://imfly.gitbooks.io/electron-docs-gitbook/content/zh-CN/index.html\n\n社区开发论坛推荐\n\n- https://atom-china.org/\n- https://forum.vuejs.org/\n- http://www.uenne.com/\n- https://ruby-china.org/\n- http://cnodejs.org/\n- https://www.v2ex.com/\n- http://www.golaravel.com/\n- http://react-china.org/\n- https://www.vue-js.com/\n\n\n纯 CSS 实现波浪效果！ http://www.cnblogs.com/coco1s/p/7197662.html\n\n从插件组件说到vue的slot上监听 http://varnull.cn/cong-cha-jian-zu-jian-shuo-dao-vuede-slotshang-jian-ting/\n\n\nVue2.0子父组件通信 http://www.jianshu.com/p/2670ca096cf8)\n\n\n> 后台\n\nPHP Array2xml, 平时不太用XML，不同库解析对应规则都各不相同，试用了几个库，这个用着还顺手。\nhttps://github.com/Jeckerson/array2xml\n\n\n> 设计\n\n设计画面太平怎破解：http://mp.weixin.qq.com/s/Zf9Zo2rhDarlnDAzf2zsMg\n\n如何配色才能锻炼出色感：http://mp.weixin.qq.com/s/XGkS_0fnR95xVYu2B5d2eQ\n\n\n> 测试\n\n求助 appium+python 脚本加了异常捕获后，HTMLTestRunner 生成报告全部显示 pass (没有找到元素也 pass)：https://testerhome.com/topics/9231\n\n**本周刊由团队成员推荐整理而成，内容来自互联网**","source":"_posts/weekly-2017-07-25.md","raw":"---\ntitle: 美妆心得技术周刊2017-07-25\ndate: 2017-07-25 23:58:19\ntags:\n- weekly\n---\n\n> 产品及其他\n\n个人开发者如何注册微信小程序？ https://www.zhihu.com/question/52268924\n\n昨天杭州煤气瓶爆炸受伤50余人，900+万常住人口的城市，为什么血库会告急？\nhttps://www.zhihu.com/question/62777539\n\n一款互联网产品在成功之前该如何进行试错？有哪些值得注意的地方？ https://www.zhihu.com/question/20461927\n\n关于支付、关于安全的一些总结：https://testerhome.com/topics/9356\n\n> 安卓\n\n关于Android下方虚拟导航键相关方法：高度、是否显示，是否重写http://www.cnblogs.com/ldq2016/p/6905429.html\n\nConstraintLayout-进阶的Relativelayout    http://www.jianshu.com/p/d64d845b6b90\n\n> IOS\n\niOS 内存，缓存及存储优化 http://www.jianshu.com/p/a4684a5d2d7f\n\nswift 开发中，为什么要远离heap? http://www.cocoachina.com/swift/20170629/19671.html\n\n> 前端\n\nElectron 相关资源推荐\n\n> Electron是GitHub开发一个的开源框架。它允许使用Node.js和Chromium完成桌面GUI应用程序的开发。Electron现被已多个开源Web应用程序用于前端与后端的开发，著名项目包括GitHub的Atom和微软的Visual Studio Code。 https://zh.wikipedia.org/wiki/Electron_(%E8%BD%AF%E4%BB%B6%E6%A1%86%E6%9E%B6)\n\n- https://github.com/sindresorhus/awesome-electron\n- https://imfly.gitbooks.io/electron-docs-gitbook/content/zh-CN/index.html\n\n社区开发论坛推荐\n\n- https://atom-china.org/\n- https://forum.vuejs.org/\n- http://www.uenne.com/\n- https://ruby-china.org/\n- http://cnodejs.org/\n- https://www.v2ex.com/\n- http://www.golaravel.com/\n- http://react-china.org/\n- https://www.vue-js.com/\n\n\n纯 CSS 实现波浪效果！ http://www.cnblogs.com/coco1s/p/7197662.html\n\n从插件组件说到vue的slot上监听 http://varnull.cn/cong-cha-jian-zu-jian-shuo-dao-vuede-slotshang-jian-ting/\n\n\nVue2.0子父组件通信 http://www.jianshu.com/p/2670ca096cf8)\n\n\n> 后台\n\nPHP Array2xml, 平时不太用XML，不同库解析对应规则都各不相同，试用了几个库，这个用着还顺手。\nhttps://github.com/Jeckerson/array2xml\n\n\n> 设计\n\n设计画面太平怎破解：http://mp.weixin.qq.com/s/Zf9Zo2rhDarlnDAzf2zsMg\n\n如何配色才能锻炼出色感：http://mp.weixin.qq.com/s/XGkS_0fnR95xVYu2B5d2eQ\n\n\n> 测试\n\n求助 appium+python 脚本加了异常捕获后，HTMLTestRunner 生成报告全部显示 pass (没有找到元素也 pass)：https://testerhome.com/topics/9231\n\n**本周刊由团队成员推荐整理而成，内容来自互联网**","slug":"weekly-2017-07-25","published":1,"updated":"2017-09-18T02:12:39.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9cutioz001gds9l6e0irkd1","content":"<blockquote><p>产品及其他</p></blockquote><p>个人开发者如何注册微信小程序？ <a href=\"https://www.zhihu.com/question/52268924\" target=\"_blank\" rel=\"external\">https://www.zhihu.com/question/52268924</a></p><p>昨天杭州煤气瓶爆炸受伤50余人，900+万常住人口的城市，为什么血库会告急？<br><a href=\"https://www.zhihu.com/question/62777539\" target=\"_blank\" rel=\"external\">https://www.zhihu.com/question/62777539</a></p><p>一款互联网产品在成功之前该如何进行试错？有哪些值得注意的地方？ <a href=\"https://www.zhihu.com/question/20461927\" target=\"_blank\" rel=\"external\">https://www.zhihu.com/question/20461927</a></p><p>关于支付、关于安全的一些总结：<a href=\"https://testerhome.com/topics/9356\" target=\"_blank\" rel=\"external\">https://testerhome.com/topics/9356</a></p><blockquote><p>安卓</p></blockquote><p>关于Android下方虚拟导航键相关方法：高度、是否显示，是否重写<a href=\"http://www.cnblogs.com/ldq2016/p/6905429.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/ldq2016/p/6905429.html</a></p><p>ConstraintLayout-进阶的Relativelayout <a href=\"http://www.jianshu.com/p/d64d845b6b90\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/d64d845b6b90</a></p><blockquote><p>IOS</p></blockquote><p>iOS 内存，缓存及存储优化 <a href=\"http://www.jianshu.com/p/a4684a5d2d7f\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/a4684a5d2d7f</a></p><p>swift 开发中，为什么要远离heap? <a href=\"http://www.cocoachina.com/swift/20170629/19671.html\" target=\"_blank\" rel=\"external\">http://www.cocoachina.com/swift/20170629/19671.html</a></p><blockquote><p>前端</p></blockquote><p>Electron 相关资源推荐</p><blockquote><p>Electron是GitHub开发一个的开源框架。它允许使用Node.js和Chromium完成桌面GUI应用程序的开发。Electron现被已多个开源Web应用程序用于前端与后端的开发，著名项目包括GitHub的Atom和微软的Visual Studio Code。 <a href=\"https://zh.wikipedia.org/wiki/Electron_(%E8%BD%AF%E4%BB%B6%E6%A1%86%E6%9E%B6\" target=\"_blank\" rel=\"external\">https://zh.wikipedia.org/wiki/Electron_(%E8%BD%AF%E4%BB%B6%E6%A1%86%E6%9E%B6</a>)</p></blockquote><ul><li><a href=\"https://github.com/sindresorhus/awesome-electron\" target=\"_blank\" rel=\"external\">https://github.com/sindresorhus/awesome-electron</a></li><li><a href=\"https://imfly.gitbooks.io/electron-docs-gitbook/content/zh-CN/index.html\" target=\"_blank\" rel=\"external\">https://imfly.gitbooks.io/electron-docs-gitbook/content/zh-CN/index.html</a></li></ul><p>社区开发论坛推荐</p><ul><li><a href=\"https://atom-china.org/\" target=\"_blank\" rel=\"external\">https://atom-china.org/</a></li><li><a href=\"https://forum.vuejs.org/\" target=\"_blank\" rel=\"external\">https://forum.vuejs.org/</a></li><li><a href=\"http://www.uenne.com/\" target=\"_blank\" rel=\"external\">http://www.uenne.com/</a></li><li><a href=\"https://ruby-china.org/\" target=\"_blank\" rel=\"external\">https://ruby-china.org/</a></li><li><a href=\"http://cnodejs.org/\" target=\"_blank\" rel=\"external\">http://cnodejs.org/</a></li><li><a href=\"https://www.v2ex.com/\" target=\"_blank\" rel=\"external\">https://www.v2ex.com/</a></li><li><a href=\"http://www.golaravel.com/\" target=\"_blank\" rel=\"external\">http://www.golaravel.com/</a></li><li><a href=\"http://react-china.org/\" target=\"_blank\" rel=\"external\">http://react-china.org/</a></li><li><a href=\"https://www.vue-js.com/\" target=\"_blank\" rel=\"external\">https://www.vue-js.com/</a></li></ul><p>纯 CSS 实现波浪效果！ <a href=\"http://www.cnblogs.com/coco1s/p/7197662.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/coco1s/p/7197662.html</a></p><p>从插件组件说到vue的slot上监听 <a href=\"http://varnull.cn/cong-cha-jian-zu-jian-shuo-dao-vuede-slotshang-jian-ting/\" target=\"_blank\" rel=\"external\">http://varnull.cn/cong-cha-jian-zu-jian-shuo-dao-vuede-slotshang-jian-ting/</a></p><p>Vue2.0子父组件通信 <a href=\"http://www.jianshu.com/p/2670ca096cf8\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/2670ca096cf8</a>)</p><blockquote><p>后台</p></blockquote><p>PHP Array2xml, 平时不太用XML，不同库解析对应规则都各不相同，试用了几个库，这个用着还顺手。<br><a href=\"https://github.com/Jeckerson/array2xml\" target=\"_blank\" rel=\"external\">https://github.com/Jeckerson/array2xml</a></p><blockquote><p>设计</p></blockquote><p>设计画面太平怎破解：<a href=\"http://mp.weixin.qq.com/s/Zf9Zo2rhDarlnDAzf2zsMg\" target=\"_blank\" rel=\"external\">http://mp.weixin.qq.com/s/Zf9Zo2rhDarlnDAzf2zsMg</a></p><p>如何配色才能锻炼出色感：<a href=\"http://mp.weixin.qq.com/s/XGkS_0fnR95xVYu2B5d2eQ\" target=\"_blank\" rel=\"external\">http://mp.weixin.qq.com/s/XGkS_0fnR95xVYu2B5d2eQ</a></p><blockquote><p>测试</p></blockquote><p>求助 appium+python 脚本加了异常捕获后，HTMLTestRunner 生成报告全部显示 pass (没有找到元素也 pass)：<a href=\"https://testerhome.com/topics/9231\" target=\"_blank\" rel=\"external\">https://testerhome.com/topics/9231</a></p><p><strong>本周刊由团队成员推荐整理而成，内容来自互联网</strong></p>","site":{"data":{}},"excerpt":"","more":"<blockquote><p>产品及其他</p></blockquote><p>个人开发者如何注册微信小程序？ <a href=\"https://www.zhihu.com/question/52268924\" target=\"_blank\" rel=\"external\">https://www.zhihu.com/question/52268924</a></p><p>昨天杭州煤气瓶爆炸受伤50余人，900+万常住人口的城市，为什么血库会告急？<br><a href=\"https://www.zhihu.com/question/62777539\" target=\"_blank\" rel=\"external\">https://www.zhihu.com/question/62777539</a></p><p>一款互联网产品在成功之前该如何进行试错？有哪些值得注意的地方？ <a href=\"https://www.zhihu.com/question/20461927\" target=\"_blank\" rel=\"external\">https://www.zhihu.com/question/20461927</a></p><p>关于支付、关于安全的一些总结：<a href=\"https://testerhome.com/topics/9356\" target=\"_blank\" rel=\"external\">https://testerhome.com/topics/9356</a></p><blockquote><p>安卓</p></blockquote><p>关于Android下方虚拟导航键相关方法：高度、是否显示，是否重写<a href=\"http://www.cnblogs.com/ldq2016/p/6905429.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/ldq2016/p/6905429.html</a></p><p>ConstraintLayout-进阶的Relativelayout <a href=\"http://www.jianshu.com/p/d64d845b6b90\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/d64d845b6b90</a></p><blockquote><p>IOS</p></blockquote><p>iOS 内存，缓存及存储优化 <a href=\"http://www.jianshu.com/p/a4684a5d2d7f\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/a4684a5d2d7f</a></p><p>swift 开发中，为什么要远离heap? <a href=\"http://www.cocoachina.com/swift/20170629/19671.html\" target=\"_blank\" rel=\"external\">http://www.cocoachina.com/swift/20170629/19671.html</a></p><blockquote><p>前端</p></blockquote><p>Electron 相关资源推荐</p><blockquote><p>Electron是GitHub开发一个的开源框架。它允许使用Node.js和Chromium完成桌面GUI应用程序的开发。Electron现被已多个开源Web应用程序用于前端与后端的开发，著名项目包括GitHub的Atom和微软的Visual Studio Code。 <a href=\"https://zh.wikipedia.org/wiki/Electron_(%E8%BD%AF%E4%BB%B6%E6%A1%86%E6%9E%B6\" target=\"_blank\" rel=\"external\">https://zh.wikipedia.org/wiki/Electron_(%E8%BD%AF%E4%BB%B6%E6%A1%86%E6%9E%B6</a>)</p></blockquote><ul><li><a href=\"https://github.com/sindresorhus/awesome-electron\" target=\"_blank\" rel=\"external\">https://github.com/sindresorhus/awesome-electron</a></li><li><a href=\"https://imfly.gitbooks.io/electron-docs-gitbook/content/zh-CN/index.html\" target=\"_blank\" rel=\"external\">https://imfly.gitbooks.io/electron-docs-gitbook/content/zh-CN/index.html</a></li></ul><p>社区开发论坛推荐</p><ul><li><a href=\"https://atom-china.org/\" target=\"_blank\" rel=\"external\">https://atom-china.org/</a></li><li><a href=\"https://forum.vuejs.org/\" target=\"_blank\" rel=\"external\">https://forum.vuejs.org/</a></li><li><a href=\"http://www.uenne.com/\" target=\"_blank\" rel=\"external\">http://www.uenne.com/</a></li><li><a href=\"https://ruby-china.org/\" target=\"_blank\" rel=\"external\">https://ruby-china.org/</a></li><li><a href=\"http://cnodejs.org/\" target=\"_blank\" rel=\"external\">http://cnodejs.org/</a></li><li><a href=\"https://www.v2ex.com/\" target=\"_blank\" rel=\"external\">https://www.v2ex.com/</a></li><li><a href=\"http://www.golaravel.com/\" target=\"_blank\" rel=\"external\">http://www.golaravel.com/</a></li><li><a href=\"http://react-china.org/\" target=\"_blank\" rel=\"external\">http://react-china.org/</a></li><li><a href=\"https://www.vue-js.com/\" target=\"_blank\" rel=\"external\">https://www.vue-js.com/</a></li></ul><p>纯 CSS 实现波浪效果！ <a href=\"http://www.cnblogs.com/coco1s/p/7197662.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/coco1s/p/7197662.html</a></p><p>从插件组件说到vue的slot上监听 <a href=\"http://varnull.cn/cong-cha-jian-zu-jian-shuo-dao-vuede-slotshang-jian-ting/\" target=\"_blank\" rel=\"external\">http://varnull.cn/cong-cha-jian-zu-jian-shuo-dao-vuede-slotshang-jian-ting/</a></p><p>Vue2.0子父组件通信 <a href=\"http://www.jianshu.com/p/2670ca096cf8\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/2670ca096cf8</a>)</p><blockquote><p>后台</p></blockquote><p>PHP Array2xml, 平时不太用XML，不同库解析对应规则都各不相同，试用了几个库，这个用着还顺手。<br><a href=\"https://github.com/Jeckerson/array2xml\" target=\"_blank\" rel=\"external\">https://github.com/Jeckerson/array2xml</a></p><blockquote><p>设计</p></blockquote><p>设计画面太平怎破解：<a href=\"http://mp.weixin.qq.com/s/Zf9Zo2rhDarlnDAzf2zsMg\" target=\"_blank\" rel=\"external\">http://mp.weixin.qq.com/s/Zf9Zo2rhDarlnDAzf2zsMg</a></p><p>如何配色才能锻炼出色感：<a href=\"http://mp.weixin.qq.com/s/XGkS_0fnR95xVYu2B5d2eQ\" target=\"_blank\" rel=\"external\">http://mp.weixin.qq.com/s/XGkS_0fnR95xVYu2B5d2eQ</a></p><blockquote><p>测试</p></blockquote><p>求助 appium+python 脚本加了异常捕获后，HTMLTestRunner 生成报告全部显示 pass (没有找到元素也 pass)：<a href=\"https://testerhome.com/topics/9231\" target=\"_blank\" rel=\"external\">https://testerhome.com/topics/9231</a></p><p><strong>本周刊由团队成员推荐整理而成，内容来自互联网</strong></p>"},{"title":"美妆心得技术周刊2017-07-10","date":"2017-07-10T15:58:19.000Z","_content":"\n> 产品及其他\n\n三大关键技术重构“无人零售店” 天猫新零售技术探索全面提速\nhttp://www.techweb.com.cn/news/2017-07-09/2554205.shtml\n\n如何看待「李彦宏乘坐无人驾驶汽车上北京五环，交警已经介入调查」？\nhttps://www.zhihu.com/question/62038423\n\n推荐一本书菲利普.津巴多《让时间治愈一切》\n\nApp面临着困境？！不妨让产品游戏化    http://www.woshipm.com/it/712014.html\n\n纯粹UGC社区的核心：内容流通策略    http://www.woshipm.com/it/706908.html\n\n> 安卓\n\n\nfrom java to kotlin http://www.jcodecraeer.com/demo/from-java-to-kotlin/index.html\n\n简单解释什么是 依赖注入 和 控制反转https://juejin.im/entry/5961bdc35188257fd215e294\n\ndateFormat 和 SimpleDateFormat https://my.oschina.net/xiahuawuyu/blog/62408\n\nandroid上的Calendar使用 http://www.jianshu.com/p/b3c4d61389d8\n\n\n> IOS\n\niOS面试题 https://juejin.im/post/5938dfdb8d6d810058481572\n\n多数关于MVC杂乱不堪  本文中作者一些个人见解写的很独特 http://www.cnblogs.com/winter-cn/p/4285171.html\n\n\n> 前端\n\nNodejs开发框架对比 http://www.jianshu.com/p/d5c89ee0964d\n\nnode web framework https://i5ting.github.io/nwf/\n\nNode框架Egg.js和Express有何区别，哪个更适合新手学习 https://segmentfault.com/q/1010000009613526\n\n常见的正则表达式校验 http://www.lovebxm.com/2017/05/31/RegExp/\n\n彻底搞清楚javascript中的require、import和export http://meiminjun.github.io/import%E5%92%8Cexport%E7%AC%94%E8%AE%B0/\n\n\n> 后台\n\n谁能用通俗的语言解释一下什么是 RPC 框架？\nhttps://www.zhihu.com/question/25536695\n\n\n> 设计\n\n字体思考先掌握基本技能：http://mp.weixin.qq.com/s/VPmyrk2zadYTg6s1W7ux9Q\n\n\n> 工具\n\nProcessOn是一个在线作图工具的聚合平台 https://www.processon.com\n\n\n> 测试\n\n使用python实现appium的屏幕滑动：http://www.cnblogs.com/testhub/p/5949668.html\n\n**本周刊由团队成员推荐整理而成，内容来自互联网**","source":"_posts/weekly-2017-07-10.md","raw":"---\ntitle: 美妆心得技术周刊2017-07-10\ndate: 2017-07-10 23:58:19\ntags:\n- weekly\n---\n\n> 产品及其他\n\n三大关键技术重构“无人零售店” 天猫新零售技术探索全面提速\nhttp://www.techweb.com.cn/news/2017-07-09/2554205.shtml\n\n如何看待「李彦宏乘坐无人驾驶汽车上北京五环，交警已经介入调查」？\nhttps://www.zhihu.com/question/62038423\n\n推荐一本书菲利普.津巴多《让时间治愈一切》\n\nApp面临着困境？！不妨让产品游戏化    http://www.woshipm.com/it/712014.html\n\n纯粹UGC社区的核心：内容流通策略    http://www.woshipm.com/it/706908.html\n\n> 安卓\n\n\nfrom java to kotlin http://www.jcodecraeer.com/demo/from-java-to-kotlin/index.html\n\n简单解释什么是 依赖注入 和 控制反转https://juejin.im/entry/5961bdc35188257fd215e294\n\ndateFormat 和 SimpleDateFormat https://my.oschina.net/xiahuawuyu/blog/62408\n\nandroid上的Calendar使用 http://www.jianshu.com/p/b3c4d61389d8\n\n\n> IOS\n\niOS面试题 https://juejin.im/post/5938dfdb8d6d810058481572\n\n多数关于MVC杂乱不堪  本文中作者一些个人见解写的很独特 http://www.cnblogs.com/winter-cn/p/4285171.html\n\n\n> 前端\n\nNodejs开发框架对比 http://www.jianshu.com/p/d5c89ee0964d\n\nnode web framework https://i5ting.github.io/nwf/\n\nNode框架Egg.js和Express有何区别，哪个更适合新手学习 https://segmentfault.com/q/1010000009613526\n\n常见的正则表达式校验 http://www.lovebxm.com/2017/05/31/RegExp/\n\n彻底搞清楚javascript中的require、import和export http://meiminjun.github.io/import%E5%92%8Cexport%E7%AC%94%E8%AE%B0/\n\n\n> 后台\n\n谁能用通俗的语言解释一下什么是 RPC 框架？\nhttps://www.zhihu.com/question/25536695\n\n\n> 设计\n\n字体思考先掌握基本技能：http://mp.weixin.qq.com/s/VPmyrk2zadYTg6s1W7ux9Q\n\n\n> 工具\n\nProcessOn是一个在线作图工具的聚合平台 https://www.processon.com\n\n\n> 测试\n\n使用python实现appium的屏幕滑动：http://www.cnblogs.com/testhub/p/5949668.html\n\n**本周刊由团队成员推荐整理而成，内容来自互联网**","slug":"weekly-2017-07-10","published":1,"updated":"2017-09-18T02:12:39.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9cutip0001hds9lv4njgdha","content":"<blockquote><p>产品及其他</p></blockquote><p>三大关键技术重构“无人零售店” 天猫新零售技术探索全面提速<br><a href=\"http://www.techweb.com.cn/news/2017-07-09/2554205.shtml\" target=\"_blank\" rel=\"external\">http://www.techweb.com.cn/news/2017-07-09/2554205.shtml</a></p><p>如何看待「李彦宏乘坐无人驾驶汽车上北京五环，交警已经介入调查」？<br><a href=\"https://www.zhihu.com/question/62038423\" target=\"_blank\" rel=\"external\">https://www.zhihu.com/question/62038423</a></p><p>推荐一本书菲利普.津巴多《让时间治愈一切》</p><p>App面临着困境？！不妨让产品游戏化 <a href=\"http://www.woshipm.com/it/712014.html\" target=\"_blank\" rel=\"external\">http://www.woshipm.com/it/712014.html</a></p><p>纯粹UGC社区的核心：内容流通策略 <a href=\"http://www.woshipm.com/it/706908.html\" target=\"_blank\" rel=\"external\">http://www.woshipm.com/it/706908.html</a></p><blockquote><p>安卓</p></blockquote><p>from java to kotlin <a href=\"http://www.jcodecraeer.com/demo/from-java-to-kotlin/index.html\" target=\"_blank\" rel=\"external\">http://www.jcodecraeer.com/demo/from-java-to-kotlin/index.html</a></p><p>简单解释什么是 依赖注入 和 控制反转<a href=\"https://juejin.im/entry/5961bdc35188257fd215e294\" target=\"_blank\" rel=\"external\">https://juejin.im/entry/5961bdc35188257fd215e294</a></p><p>dateFormat 和 SimpleDateFormat <a href=\"https://my.oschina.net/xiahuawuyu/blog/62408\" target=\"_blank\" rel=\"external\">https://my.oschina.net/xiahuawuyu/blog/62408</a></p><p>android上的Calendar使用 <a href=\"http://www.jianshu.com/p/b3c4d61389d8\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/b3c4d61389d8</a></p><blockquote><p>IOS</p></blockquote><p>iOS面试题 <a href=\"https://juejin.im/post/5938dfdb8d6d810058481572\" target=\"_blank\" rel=\"external\">https://juejin.im/post/5938dfdb8d6d810058481572</a></p><p>多数关于MVC杂乱不堪 本文中作者一些个人见解写的很独特 <a href=\"http://www.cnblogs.com/winter-cn/p/4285171.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/winter-cn/p/4285171.html</a></p><blockquote><p>前端</p></blockquote><p>Nodejs开发框架对比 <a href=\"http://www.jianshu.com/p/d5c89ee0964d\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/d5c89ee0964d</a></p><p>node web framework <a href=\"https://i5ting.github.io/nwf/\" target=\"_blank\" rel=\"external\">https://i5ting.github.io/nwf/</a></p><p>Node框架Egg.js和Express有何区别，哪个更适合新手学习 <a href=\"https://segmentfault.com/q/1010000009613526\" target=\"_blank\" rel=\"external\">https://segmentfault.com/q/1010000009613526</a></p><p>常见的正则表达式校验 <a href=\"http://www.lovebxm.com/2017/05/31/RegExp/\" target=\"_blank\" rel=\"external\">http://www.lovebxm.com/2017/05/31/RegExp/</a></p><p>彻底搞清楚javascript中的require、import和export <a href=\"http://meiminjun.github.io/import%E5%92%8Cexport%E7%AC%94%E8%AE%B0/\" target=\"_blank\" rel=\"external\">http://meiminjun.github.io/import%E5%92%8Cexport%E7%AC%94%E8%AE%B0/</a></p><blockquote><p>后台</p></blockquote><p>谁能用通俗的语言解释一下什么是 RPC 框架？<br><a href=\"https://www.zhihu.com/question/25536695\" target=\"_blank\" rel=\"external\">https://www.zhihu.com/question/25536695</a></p><blockquote><p>设计</p></blockquote><p>字体思考先掌握基本技能：<a href=\"http://mp.weixin.qq.com/s/VPmyrk2zadYTg6s1W7ux9Q\" target=\"_blank\" rel=\"external\">http://mp.weixin.qq.com/s/VPmyrk2zadYTg6s1W7ux9Q</a></p><blockquote><p>工具</p></blockquote><p>ProcessOn是一个在线作图工具的聚合平台 <a href=\"https://www.processon.com\" target=\"_blank\" rel=\"external\">https://www.processon.com</a></p><blockquote><p>测试</p></blockquote><p>使用python实现appium的屏幕滑动：<a href=\"http://www.cnblogs.com/testhub/p/5949668.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/testhub/p/5949668.html</a></p><p><strong>本周刊由团队成员推荐整理而成，内容来自互联网</strong></p>","site":{"data":{}},"excerpt":"","more":"<blockquote><p>产品及其他</p></blockquote><p>三大关键技术重构“无人零售店” 天猫新零售技术探索全面提速<br><a href=\"http://www.techweb.com.cn/news/2017-07-09/2554205.shtml\" target=\"_blank\" rel=\"external\">http://www.techweb.com.cn/news/2017-07-09/2554205.shtml</a></p><p>如何看待「李彦宏乘坐无人驾驶汽车上北京五环，交警已经介入调查」？<br><a href=\"https://www.zhihu.com/question/62038423\" target=\"_blank\" rel=\"external\">https://www.zhihu.com/question/62038423</a></p><p>推荐一本书菲利普.津巴多《让时间治愈一切》</p><p>App面临着困境？！不妨让产品游戏化 <a href=\"http://www.woshipm.com/it/712014.html\" target=\"_blank\" rel=\"external\">http://www.woshipm.com/it/712014.html</a></p><p>纯粹UGC社区的核心：内容流通策略 <a href=\"http://www.woshipm.com/it/706908.html\" target=\"_blank\" rel=\"external\">http://www.woshipm.com/it/706908.html</a></p><blockquote><p>安卓</p></blockquote><p>from java to kotlin <a href=\"http://www.jcodecraeer.com/demo/from-java-to-kotlin/index.html\" target=\"_blank\" rel=\"external\">http://www.jcodecraeer.com/demo/from-java-to-kotlin/index.html</a></p><p>简单解释什么是 依赖注入 和 控制反转<a href=\"https://juejin.im/entry/5961bdc35188257fd215e294\" target=\"_blank\" rel=\"external\">https://juejin.im/entry/5961bdc35188257fd215e294</a></p><p>dateFormat 和 SimpleDateFormat <a href=\"https://my.oschina.net/xiahuawuyu/blog/62408\" target=\"_blank\" rel=\"external\">https://my.oschina.net/xiahuawuyu/blog/62408</a></p><p>android上的Calendar使用 <a href=\"http://www.jianshu.com/p/b3c4d61389d8\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/b3c4d61389d8</a></p><blockquote><p>IOS</p></blockquote><p>iOS面试题 <a href=\"https://juejin.im/post/5938dfdb8d6d810058481572\" target=\"_blank\" rel=\"external\">https://juejin.im/post/5938dfdb8d6d810058481572</a></p><p>多数关于MVC杂乱不堪 本文中作者一些个人见解写的很独特 <a href=\"http://www.cnblogs.com/winter-cn/p/4285171.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/winter-cn/p/4285171.html</a></p><blockquote><p>前端</p></blockquote><p>Nodejs开发框架对比 <a href=\"http://www.jianshu.com/p/d5c89ee0964d\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/d5c89ee0964d</a></p><p>node web framework <a href=\"https://i5ting.github.io/nwf/\" target=\"_blank\" rel=\"external\">https://i5ting.github.io/nwf/</a></p><p>Node框架Egg.js和Express有何区别，哪个更适合新手学习 <a href=\"https://segmentfault.com/q/1010000009613526\" target=\"_blank\" rel=\"external\">https://segmentfault.com/q/1010000009613526</a></p><p>常见的正则表达式校验 <a href=\"http://www.lovebxm.com/2017/05/31/RegExp/\" target=\"_blank\" rel=\"external\">http://www.lovebxm.com/2017/05/31/RegExp/</a></p><p>彻底搞清楚javascript中的require、import和export <a href=\"http://meiminjun.github.io/import%E5%92%8Cexport%E7%AC%94%E8%AE%B0/\" target=\"_blank\" rel=\"external\">http://meiminjun.github.io/import%E5%92%8Cexport%E7%AC%94%E8%AE%B0/</a></p><blockquote><p>后台</p></blockquote><p>谁能用通俗的语言解释一下什么是 RPC 框架？<br><a href=\"https://www.zhihu.com/question/25536695\" target=\"_blank\" rel=\"external\">https://www.zhihu.com/question/25536695</a></p><blockquote><p>设计</p></blockquote><p>字体思考先掌握基本技能：<a href=\"http://mp.weixin.qq.com/s/VPmyrk2zadYTg6s1W7ux9Q\" target=\"_blank\" rel=\"external\">http://mp.weixin.qq.com/s/VPmyrk2zadYTg6s1W7ux9Q</a></p><blockquote><p>工具</p></blockquote><p>ProcessOn是一个在线作图工具的聚合平台 <a href=\"https://www.processon.com\" target=\"_blank\" rel=\"external\">https://www.processon.com</a></p><blockquote><p>测试</p></blockquote><p>使用python实现appium的屏幕滑动：<a href=\"http://www.cnblogs.com/testhub/p/5949668.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/testhub/p/5949668.html</a></p><p><strong>本周刊由团队成员推荐整理而成，内容来自互联网</strong></p>"},{"title":"美妆心得技术周刊2017-05-13","date":"2017-05-13T15:58:19.000Z","_content":"\n> 产品及其它\n\n微信新原创机制上线：不能消灭做号者，但抄袭成本会上升\n<http://36kr.com/p/5074689.html>\n\n微软和苹果“握手言和”，iTunes将全面登陆Windows Store\n<http://36kr.com/p/5074682.html>\n\n天猫APP启动页改版\n<https://mp.weixin.qq.com/s?__biz=MzI5NDI3MDI0NQ==&mid=2247484925&idx=1&sn=044489f0399be2f1605661b247d83574&chksm=ec6421b7db13a8a1553309e27d5ff15e9a249c72bde86b0addb3e437b5a15c48ec6df35eb0ff&scene=0&key=8923af037b2979185117c6f478672af680bb0e60014789c7a3816fc6de1c1e621045a3dd922fbbb778c0c7928d1a1d57bdd9ce840412fd0e1abc7b27e1f338deaa1e482dc627e37a430056be69091307&ascene=0&uin=MTA4MDA0MDcwMQ%3D%3D&devicetype=iMac+MacBookPro13%2C2+OSX+OSX+10.12.4+build>\n\n\nNASA 前阵子发布了一个包含太空照片、视频和音频等数据的在线媒体档案库\n<https://images.nasa.gov/#/>\n\n火柴人系列的一款适合打发零食时间的游戏\n<https://itunes.apple.com/cn/app/stickman-base-jumper-2/id1178082935?mt=8>\n\n几年前玩过的文字游戏，名字叫小黑屋，实在闲的慌的时候可以玩，玩的根本停不下来，以前玩的那个网站找不到了，找了半天只找到这么个链接，长的挺丑的。现在好像还有安卓版和联机版的\n<http://www.u77.com/game/1254>\n\n“工作达到较稳定的状态时，常常意味着员工工作积极性的降低，“一团和气”的集体不一定是一个高效率的集体，这时候“鲶鱼效应”将起到很好的“医疗”作用。一个组织中，如果始终有一位“鲶鱼式”的人物，无疑会激活员工”，这是一篇关于团队建设的文章分享给大家\n<http://www.jianshu.com/p/0bdcc84c899b>\n> 安卓\n\n关于material design官方介绍\n<https://material.io/guidelines/material-design/introduction.html?hl=zh-cn>\n> IOS\n\niOS直播知识点\n<http://www.jianshu.com/p/bd42bacbe4cc>\n\n> 前端\n\n10个js机器学习实例\n<http://web.jobbole.com/91219/>\n> 后台\n\nLaravel 虚拟开发环境 Homestead\n<https://docs.golaravel.com/docs/5.4/homestead/>\n\nlnmp一键安装包\n<http://lnmp.org/>\n\nComposer PHP包管理工具\n<http://www.phpcomposer.com/>\n\nLaravel 核心，服务容器\n<http://laravelacademy.org/post/769.html>\n* 依赖注入，超级工厂，有兴趣的童鞋可以先看看。\n\nPHP官方手册\n<https://secure.php.net/manual/zh/>\n\nawesome-php\n<https://github.com/JingwenTian/awesome-php>\n\n* 收集整理一些常用的PHP类库, 资源以及技巧. 以便在工作中迅速的查找所需\n* 别人整理的PHP资料库，里面推荐了很多学习资源和类库\n\n最好的 PHP 框架是什么？为什么？\n\n* 首推 Laravel ，其次是 Yii，Laravel 的设计思想以及在工程实践上的支持，超过 ThinkPHP 好几个世代。如果说原生的 PHP 是火枪，ThinkPHP 就是来福枪，Lavavel 则是冲锋枪。你要打猎的话，带把来福枪完全足够了，但是要上战场，非得更自动化的冲锋枪不行。\n\n* 以上引文有一定道理，我个人的理解是：Laravel 不是最好的框架，也不存在所谓的最好的框架，但Laravel是目前最流行的PHP框架，因为其是后来者，出现的比较晚，所以历史包袱较小，使用了很多PHP新特性，应用了许多设计模式，框架本身值得学习（Laravel 5.4最低支持PHP >= 5.6.4）。\n\n* thinkphp5 貌似相对3做了大量改进，借鉴了laravel的工程思想，官方不建议旧项目从3直接升级5（不兼容），建议新项目使用5。个人对框架使用不多，所以也不便比较，感觉平时需要多关注一下其他框架，开阔一下思路。\nLaravel 作为一个全栈的框架，大而全，开箱即用，但是性能不高；对性能要求较高，可以使用Laravel的弟弟Lumen\n\n\nLaravel China, 前身是phphub，后面改版成专门的laravel社区\n<https://laravel-china.org/>\n\nLaravel 5.4中文文档<http://d.laravel-china.org/docs/5.4>\n\n[Laracast](https://laracasts.com/series/laravel-5-fundamentals/episodes/1]), 国外PHP视频站点，附的链接是一个Laravel的基础教程地址，可以顺带学英语。国内版，是之前推荐的[laravist](https://www.laravist.com/)\n\nLaravel中大型专案架构 来自点灯坊，繁体的，貌似作者来自台湾。\n<http://oomusou.io/laravel/laravel-architecture/>\n\n[点灯坊博客首页](http://oomusou.io/)\n\n\n> 工具\n\n强大多图片站找图利器 zoommy\n<http://zoommyapp.com>\n\n> 测试\n\n【效率管理改进】养成好的工作习惯  （我觉得这个不是仅适用于新人）\n<https://mp.weixin.qq.com/s?__biz=MjM5ODY4ODIxOA==&mid=2653201363&idx=1&sn=356bebc031cb8c6aab3859bc9b9e5da7&chksm=bd16e7668a616e70e5c6a7f8878746a1c615879e7d1005f92b282c6519b1900a06ec6b43046f&scene=0&key=ec5e8f823d5203bd3b23d0f5638496d6e717a4e8d37a4ffb5d9100dedcfc099e6e6f5a21d5a30de124b6b6c156c31b092342cf3f844c9c035d63aac0594a2ca88bf166cf45a5785208de75a667a0aacc&ascene=0&uin=MTk3ODA1MDIwMQ%3D%3D&devicetype=iMac+MacBookPro11%2C1+OSX+OSX+10.11.5+build(15F34)&version=12020610&nettype=WIFI&fontScale=100&pass_ticket=KB63IHWBSzBL0aPuvhGAdx8rwz%2FzuN5uqH0WqkWW5lgX8e6lbh%2FHJw2Up%2FQMuJDl>\n\n","source":"_posts/weekly-2017-05-13.md","raw":"---\ntitle: 美妆心得技术周刊2017-05-13\ndate: 2017-05-13 23:58:19\ntags:\n- weekly\n---\n\n> 产品及其它\n\n微信新原创机制上线：不能消灭做号者，但抄袭成本会上升\n<http://36kr.com/p/5074689.html>\n\n微软和苹果“握手言和”，iTunes将全面登陆Windows Store\n<http://36kr.com/p/5074682.html>\n\n天猫APP启动页改版\n<https://mp.weixin.qq.com/s?__biz=MzI5NDI3MDI0NQ==&mid=2247484925&idx=1&sn=044489f0399be2f1605661b247d83574&chksm=ec6421b7db13a8a1553309e27d5ff15e9a249c72bde86b0addb3e437b5a15c48ec6df35eb0ff&scene=0&key=8923af037b2979185117c6f478672af680bb0e60014789c7a3816fc6de1c1e621045a3dd922fbbb778c0c7928d1a1d57bdd9ce840412fd0e1abc7b27e1f338deaa1e482dc627e37a430056be69091307&ascene=0&uin=MTA4MDA0MDcwMQ%3D%3D&devicetype=iMac+MacBookPro13%2C2+OSX+OSX+10.12.4+build>\n\n\nNASA 前阵子发布了一个包含太空照片、视频和音频等数据的在线媒体档案库\n<https://images.nasa.gov/#/>\n\n火柴人系列的一款适合打发零食时间的游戏\n<https://itunes.apple.com/cn/app/stickman-base-jumper-2/id1178082935?mt=8>\n\n几年前玩过的文字游戏，名字叫小黑屋，实在闲的慌的时候可以玩，玩的根本停不下来，以前玩的那个网站找不到了，找了半天只找到这么个链接，长的挺丑的。现在好像还有安卓版和联机版的\n<http://www.u77.com/game/1254>\n\n“工作达到较稳定的状态时，常常意味着员工工作积极性的降低，“一团和气”的集体不一定是一个高效率的集体，这时候“鲶鱼效应”将起到很好的“医疗”作用。一个组织中，如果始终有一位“鲶鱼式”的人物，无疑会激活员工”，这是一篇关于团队建设的文章分享给大家\n<http://www.jianshu.com/p/0bdcc84c899b>\n> 安卓\n\n关于material design官方介绍\n<https://material.io/guidelines/material-design/introduction.html?hl=zh-cn>\n> IOS\n\niOS直播知识点\n<http://www.jianshu.com/p/bd42bacbe4cc>\n\n> 前端\n\n10个js机器学习实例\n<http://web.jobbole.com/91219/>\n> 后台\n\nLaravel 虚拟开发环境 Homestead\n<https://docs.golaravel.com/docs/5.4/homestead/>\n\nlnmp一键安装包\n<http://lnmp.org/>\n\nComposer PHP包管理工具\n<http://www.phpcomposer.com/>\n\nLaravel 核心，服务容器\n<http://laravelacademy.org/post/769.html>\n* 依赖注入，超级工厂，有兴趣的童鞋可以先看看。\n\nPHP官方手册\n<https://secure.php.net/manual/zh/>\n\nawesome-php\n<https://github.com/JingwenTian/awesome-php>\n\n* 收集整理一些常用的PHP类库, 资源以及技巧. 以便在工作中迅速的查找所需\n* 别人整理的PHP资料库，里面推荐了很多学习资源和类库\n\n最好的 PHP 框架是什么？为什么？\n\n* 首推 Laravel ，其次是 Yii，Laravel 的设计思想以及在工程实践上的支持，超过 ThinkPHP 好几个世代。如果说原生的 PHP 是火枪，ThinkPHP 就是来福枪，Lavavel 则是冲锋枪。你要打猎的话，带把来福枪完全足够了，但是要上战场，非得更自动化的冲锋枪不行。\n\n* 以上引文有一定道理，我个人的理解是：Laravel 不是最好的框架，也不存在所谓的最好的框架，但Laravel是目前最流行的PHP框架，因为其是后来者，出现的比较晚，所以历史包袱较小，使用了很多PHP新特性，应用了许多设计模式，框架本身值得学习（Laravel 5.4最低支持PHP >= 5.6.4）。\n\n* thinkphp5 貌似相对3做了大量改进，借鉴了laravel的工程思想，官方不建议旧项目从3直接升级5（不兼容），建议新项目使用5。个人对框架使用不多，所以也不便比较，感觉平时需要多关注一下其他框架，开阔一下思路。\nLaravel 作为一个全栈的框架，大而全，开箱即用，但是性能不高；对性能要求较高，可以使用Laravel的弟弟Lumen\n\n\nLaravel China, 前身是phphub，后面改版成专门的laravel社区\n<https://laravel-china.org/>\n\nLaravel 5.4中文文档<http://d.laravel-china.org/docs/5.4>\n\n[Laracast](https://laracasts.com/series/laravel-5-fundamentals/episodes/1]), 国外PHP视频站点，附的链接是一个Laravel的基础教程地址，可以顺带学英语。国内版，是之前推荐的[laravist](https://www.laravist.com/)\n\nLaravel中大型专案架构 来自点灯坊，繁体的，貌似作者来自台湾。\n<http://oomusou.io/laravel/laravel-architecture/>\n\n[点灯坊博客首页](http://oomusou.io/)\n\n\n> 工具\n\n强大多图片站找图利器 zoommy\n<http://zoommyapp.com>\n\n> 测试\n\n【效率管理改进】养成好的工作习惯  （我觉得这个不是仅适用于新人）\n<https://mp.weixin.qq.com/s?__biz=MjM5ODY4ODIxOA==&mid=2653201363&idx=1&sn=356bebc031cb8c6aab3859bc9b9e5da7&chksm=bd16e7668a616e70e5c6a7f8878746a1c615879e7d1005f92b282c6519b1900a06ec6b43046f&scene=0&key=ec5e8f823d5203bd3b23d0f5638496d6e717a4e8d37a4ffb5d9100dedcfc099e6e6f5a21d5a30de124b6b6c156c31b092342cf3f844c9c035d63aac0594a2ca88bf166cf45a5785208de75a667a0aacc&ascene=0&uin=MTk3ODA1MDIwMQ%3D%3D&devicetype=iMac+MacBookPro11%2C1+OSX+OSX+10.11.5+build(15F34)&version=12020610&nettype=WIFI&fontScale=100&pass_ticket=KB63IHWBSzBL0aPuvhGAdx8rwz%2FzuN5uqH0WqkWW5lgX8e6lbh%2FHJw2Up%2FQMuJDl>\n\n","slug":"weekly-2017-05-13","published":1,"updated":"2017-09-26T08:15:09.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9cutip2001kds9lk51qxorc","content":"<blockquote><p>产品及其它</p></blockquote><p>微信新原创机制上线：不能消灭做号者，但抄袭成本会上升<br><a href=\"http://36kr.com/p/5074689.html\" target=\"_blank\" rel=\"external\">http://36kr.com/p/5074689.html</a></p><p>微软和苹果“握手言和”，iTunes将全面登陆Windows Store<br><a href=\"http://36kr.com/p/5074682.html\" target=\"_blank\" rel=\"external\">http://36kr.com/p/5074682.html</a></p><p>天猫APP启动页改版<br><a href=\"https://mp.weixin.qq.com/s?__biz=MzI5NDI3MDI0NQ==&amp;mid=2247484925&amp;idx=1&amp;sn=044489f0399be2f1605661b247d83574&amp;chksm=ec6421b7db13a8a1553309e27d5ff15e9a249c72bde86b0addb3e437b5a15c48ec6df35eb0ff&amp;scene=0&amp;key=8923af037b2979185117c6f478672af680bb0e60014789c7a3816fc6de1c1e621045a3dd922fbbb778c0c7928d1a1d57bdd9ce840412fd0e1abc7b27e1f338deaa1e482dc627e37a430056be69091307&amp;ascene=0&amp;uin=MTA4MDA0MDcwMQ%3D%3D&amp;devicetype=iMac+MacBookPro13%2C2+OSX+OSX+10.12.4+build\" target=\"_blank\" rel=\"external\">https://mp.weixin.qq.com/s?__biz=MzI5NDI3MDI0NQ==&amp;mid=2247484925&amp;idx=1&amp;sn=044489f0399be2f1605661b247d83574&amp;chksm=ec6421b7db13a8a1553309e27d5ff15e9a249c72bde86b0addb3e437b5a15c48ec6df35eb0ff&amp;scene=0&amp;key=8923af037b2979185117c6f478672af680bb0e60014789c7a3816fc6de1c1e621045a3dd922fbbb778c0c7928d1a1d57bdd9ce840412fd0e1abc7b27e1f338deaa1e482dc627e37a430056be69091307&amp;ascene=0&amp;uin=MTA4MDA0MDcwMQ%3D%3D&amp;devicetype=iMac+MacBookPro13%2C2+OSX+OSX+10.12.4+build</a></p><p>NASA 前阵子发布了一个包含太空照片、视频和音频等数据的在线媒体档案库<br><a href=\"https://images.nasa.gov/#/\" target=\"_blank\" rel=\"external\">https://images.nasa.gov/#/</a></p><p>火柴人系列的一款适合打发零食时间的游戏<br><a href=\"https://itunes.apple.com/cn/app/stickman-base-jumper-2/id1178082935?mt=8\" target=\"_blank\" rel=\"external\">https://itunes.apple.com/cn/app/stickman-base-jumper-2/id1178082935?mt=8</a></p><p>几年前玩过的文字游戏，名字叫小黑屋，实在闲的慌的时候可以玩，玩的根本停不下来，以前玩的那个网站找不到了，找了半天只找到这么个链接，长的挺丑的。现在好像还有安卓版和联机版的<br><a href=\"http://www.u77.com/game/1254\" target=\"_blank\" rel=\"external\">http://www.u77.com/game/1254</a></p><p>“工作达到较稳定的状态时，常常意味着员工工作积极性的降低，“一团和气”的集体不一定是一个高效率的集体，这时候“鲶鱼效应”将起到很好的“医疗”作用。一个组织中，如果始终有一位“鲶鱼式”的人物，无疑会激活员工”，这是一篇关于团队建设的文章分享给大家<br><a href=\"http://www.jianshu.com/p/0bdcc84c899b\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/0bdcc84c899b</a></p><blockquote><p>安卓</p></blockquote><p>关于material design官方介绍<br><a href=\"https://material.io/guidelines/material-design/introduction.html?hl=zh-cn\" target=\"_blank\" rel=\"external\">https://material.io/guidelines/material-design/introduction.html?hl=zh-cn</a></p><blockquote><p>IOS</p></blockquote><p>iOS直播知识点<br><a href=\"http://www.jianshu.com/p/bd42bacbe4cc\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/bd42bacbe4cc</a></p><blockquote><p>前端</p></blockquote><p>10个js机器学习实例<br><a href=\"http://web.jobbole.com/91219/\" target=\"_blank\" rel=\"external\">http://web.jobbole.com/91219/</a></p><blockquote><p>后台</p></blockquote><p>Laravel 虚拟开发环境 Homestead<br><a href=\"https://docs.golaravel.com/docs/5.4/homestead/\" target=\"_blank\" rel=\"external\">https://docs.golaravel.com/docs/5.4/homestead/</a></p><p>lnmp一键安装包<br><a href=\"http://lnmp.org/\" target=\"_blank\" rel=\"external\">http://lnmp.org/</a></p><p>Composer PHP包管理工具<br><a href=\"http://www.phpcomposer.com/\" target=\"_blank\" rel=\"external\">http://www.phpcomposer.com/</a></p><p>Laravel 核心，服务容器<br><a href=\"http://laravelacademy.org/post/769.html\" target=\"_blank\" rel=\"external\">http://laravelacademy.org/post/769.html</a></p><ul><li>依赖注入，超级工厂，有兴趣的童鞋可以先看看。</li></ul><p>PHP官方手册<br><a href=\"https://secure.php.net/manual/zh/\" target=\"_blank\" rel=\"external\">https://secure.php.net/manual/zh/</a></p><p>awesome-php<br><a href=\"https://github.com/JingwenTian/awesome-php\" target=\"_blank\" rel=\"external\">https://github.com/JingwenTian/awesome-php</a></p><ul><li>收集整理一些常用的PHP类库, 资源以及技巧. 以便在工作中迅速的查找所需</li><li>别人整理的PHP资料库，里面推荐了很多学习资源和类库</li></ul><p>最好的 PHP 框架是什么？为什么？</p><ul><li><p>首推 Laravel ，其次是 Yii，Laravel 的设计思想以及在工程实践上的支持，超过 ThinkPHP 好几个世代。如果说原生的 PHP 是火枪，ThinkPHP 就是来福枪，Lavavel 则是冲锋枪。你要打猎的话，带把来福枪完全足够了，但是要上战场，非得更自动化的冲锋枪不行。</p></li><li><p>以上引文有一定道理，我个人的理解是：Laravel 不是最好的框架，也不存在所谓的最好的框架，但Laravel是目前最流行的PHP框架，因为其是后来者，出现的比较晚，所以历史包袱较小，使用了很多PHP新特性，应用了许多设计模式，框架本身值得学习（Laravel 5.4最低支持PHP &gt;= 5.6.4）。</p></li><li><p>thinkphp5 貌似相对3做了大量改进，借鉴了laravel的工程思想，官方不建议旧项目从3直接升级5（不兼容），建议新项目使用5。个人对框架使用不多，所以也不便比较，感觉平时需要多关注一下其他框架，开阔一下思路。<br>Laravel 作为一个全栈的框架，大而全，开箱即用，但是性能不高；对性能要求较高，可以使用Laravel的弟弟Lumen</p></li></ul><p>Laravel China, 前身是phphub，后面改版成专门的laravel社区<br><a href=\"https://laravel-china.org/\" target=\"_blank\" rel=\"external\">https://laravel-china.org/</a></p><p>Laravel 5.4中文文档<a href=\"http://d.laravel-china.org/docs/5.4\" target=\"_blank\" rel=\"external\">http://d.laravel-china.org/docs/5.4</a></p><p><a href=\"https://laracasts.com/series/laravel-5-fundamentals/episodes/1]\" target=\"_blank\" rel=\"external\">Laracast</a>, 国外PHP视频站点，附的链接是一个Laravel的基础教程地址，可以顺带学英语。国内版，是之前推荐的<a href=\"https://www.laravist.com/\" target=\"_blank\" rel=\"external\">laravist</a></p><p>Laravel中大型专案架构 来自点灯坊，繁体的，貌似作者来自台湾。<br><a href=\"http://oomusou.io/laravel/laravel-architecture/\" target=\"_blank\" rel=\"external\">http://oomusou.io/laravel/laravel-architecture/</a></p><p><a href=\"http://oomusou.io/\" target=\"_blank\" rel=\"external\">点灯坊博客首页</a></p><blockquote><p>工具</p></blockquote><p>强大多图片站找图利器 zoommy<br><a href=\"http://zoommyapp.com\" target=\"_blank\" rel=\"external\">http://zoommyapp.com</a></p><blockquote><p>测试</p></blockquote><p>【效率管理改进】养成好的工作习惯 （我觉得这个不是仅适用于新人）<br><a href=\"https://mp.weixin.qq.com/s?__biz=MjM5ODY4ODIxOA==&amp;mid=2653201363&amp;idx=1&amp;sn=356bebc031cb8c6aab3859bc9b9e5da7&amp;chksm=bd16e7668a616e70e5c6a7f8878746a1c615879e7d1005f92b282c6519b1900a06ec6b43046f&amp;scene=0&amp;key=ec5e8f823d5203bd3b23d0f5638496d6e717a4e8d37a4ffb5d9100dedcfc099e6e6f5a21d5a30de124b6b6c156c31b092342cf3f844c9c035d63aac0594a2ca88bf166cf45a5785208de75a667a0aacc&amp;ascene=0&amp;uin=MTk3ODA1MDIwMQ%3D%3D&amp;devicetype=iMac+MacBookPro11%2C1+OSX+OSX+10.11.5+build(15F34)&amp;version=12020610&amp;nettype=WIFI&amp;fontScale=100&amp;pass_ticket=KB63IHWBSzBL0aPuvhGAdx8rwz%2FzuN5uqH0WqkWW5lgX8e6lbh%2FHJw2Up%2FQMuJDl\" target=\"_blank\" rel=\"external\">https://mp.weixin.qq.com/s?__biz=MjM5ODY4ODIxOA==&amp;mid=2653201363&amp;idx=1&amp;sn=356bebc031cb8c6aab3859bc9b9e5da7&amp;chksm=bd16e7668a616e70e5c6a7f8878746a1c615879e7d1005f92b282c6519b1900a06ec6b43046f&amp;scene=0&amp;key=ec5e8f823d5203bd3b23d0f5638496d6e717a4e8d37a4ffb5d9100dedcfc099e6e6f5a21d5a30de124b6b6c156c31b092342cf3f844c9c035d63aac0594a2ca88bf166cf45a5785208de75a667a0aacc&amp;ascene=0&amp;uin=MTk3ODA1MDIwMQ%3D%3D&amp;devicetype=iMac+MacBookPro11%2C1+OSX+OSX+10.11.5+build(15F34)&amp;version=12020610&amp;nettype=WIFI&amp;fontScale=100&amp;pass_ticket=KB63IHWBSzBL0aPuvhGAdx8rwz%2FzuN5uqH0WqkWW5lgX8e6lbh%2FHJw2Up%2FQMuJDl</a></p>","site":{"data":{}},"excerpt":"","more":"<blockquote><p>产品及其它</p></blockquote><p>微信新原创机制上线：不能消灭做号者，但抄袭成本会上升<br><a href=\"http://36kr.com/p/5074689.html\" target=\"_blank\" rel=\"external\">http://36kr.com/p/5074689.html</a></p><p>微软和苹果“握手言和”，iTunes将全面登陆Windows Store<br><a href=\"http://36kr.com/p/5074682.html\" target=\"_blank\" rel=\"external\">http://36kr.com/p/5074682.html</a></p><p>天猫APP启动页改版<br><a href=\"https://mp.weixin.qq.com/s?__biz=MzI5NDI3MDI0NQ==&amp;mid=2247484925&amp;idx=1&amp;sn=044489f0399be2f1605661b247d83574&amp;chksm=ec6421b7db13a8a1553309e27d5ff15e9a249c72bde86b0addb3e437b5a15c48ec6df35eb0ff&amp;scene=0&amp;key=8923af037b2979185117c6f478672af680bb0e60014789c7a3816fc6de1c1e621045a3dd922fbbb778c0c7928d1a1d57bdd9ce840412fd0e1abc7b27e1f338deaa1e482dc627e37a430056be69091307&amp;ascene=0&amp;uin=MTA4MDA0MDcwMQ%3D%3D&amp;devicetype=iMac+MacBookPro13%2C2+OSX+OSX+10.12.4+build\" target=\"_blank\" rel=\"external\">https://mp.weixin.qq.com/s?__biz=MzI5NDI3MDI0NQ==&amp;mid=2247484925&amp;idx=1&amp;sn=044489f0399be2f1605661b247d83574&amp;chksm=ec6421b7db13a8a1553309e27d5ff15e9a249c72bde86b0addb3e437b5a15c48ec6df35eb0ff&amp;scene=0&amp;key=8923af037b2979185117c6f478672af680bb0e60014789c7a3816fc6de1c1e621045a3dd922fbbb778c0c7928d1a1d57bdd9ce840412fd0e1abc7b27e1f338deaa1e482dc627e37a430056be69091307&amp;ascene=0&amp;uin=MTA4MDA0MDcwMQ%3D%3D&amp;devicetype=iMac+MacBookPro13%2C2+OSX+OSX+10.12.4+build</a></p><p>NASA 前阵子发布了一个包含太空照片、视频和音频等数据的在线媒体档案库<br><a href=\"https://images.nasa.gov/#/\" target=\"_blank\" rel=\"external\">https://images.nasa.gov/#/</a></p><p>火柴人系列的一款适合打发零食时间的游戏<br><a href=\"https://itunes.apple.com/cn/app/stickman-base-jumper-2/id1178082935?mt=8\" target=\"_blank\" rel=\"external\">https://itunes.apple.com/cn/app/stickman-base-jumper-2/id1178082935?mt=8</a></p><p>几年前玩过的文字游戏，名字叫小黑屋，实在闲的慌的时候可以玩，玩的根本停不下来，以前玩的那个网站找不到了，找了半天只找到这么个链接，长的挺丑的。现在好像还有安卓版和联机版的<br><a href=\"http://www.u77.com/game/1254\" target=\"_blank\" rel=\"external\">http://www.u77.com/game/1254</a></p><p>“工作达到较稳定的状态时，常常意味着员工工作积极性的降低，“一团和气”的集体不一定是一个高效率的集体，这时候“鲶鱼效应”将起到很好的“医疗”作用。一个组织中，如果始终有一位“鲶鱼式”的人物，无疑会激活员工”，这是一篇关于团队建设的文章分享给大家<br><a href=\"http://www.jianshu.com/p/0bdcc84c899b\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/0bdcc84c899b</a></p><blockquote><p>安卓</p></blockquote><p>关于material design官方介绍<br><a href=\"https://material.io/guidelines/material-design/introduction.html?hl=zh-cn\" target=\"_blank\" rel=\"external\">https://material.io/guidelines/material-design/introduction.html?hl=zh-cn</a></p><blockquote><p>IOS</p></blockquote><p>iOS直播知识点<br><a href=\"http://www.jianshu.com/p/bd42bacbe4cc\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/bd42bacbe4cc</a></p><blockquote><p>前端</p></blockquote><p>10个js机器学习实例<br><a href=\"http://web.jobbole.com/91219/\" target=\"_blank\" rel=\"external\">http://web.jobbole.com/91219/</a></p><blockquote><p>后台</p></blockquote><p>Laravel 虚拟开发环境 Homestead<br><a href=\"https://docs.golaravel.com/docs/5.4/homestead/\" target=\"_blank\" rel=\"external\">https://docs.golaravel.com/docs/5.4/homestead/</a></p><p>lnmp一键安装包<br><a href=\"http://lnmp.org/\" target=\"_blank\" rel=\"external\">http://lnmp.org/</a></p><p>Composer PHP包管理工具<br><a href=\"http://www.phpcomposer.com/\" target=\"_blank\" rel=\"external\">http://www.phpcomposer.com/</a></p><p>Laravel 核心，服务容器<br><a href=\"http://laravelacademy.org/post/769.html\" target=\"_blank\" rel=\"external\">http://laravelacademy.org/post/769.html</a></p><ul><li>依赖注入，超级工厂，有兴趣的童鞋可以先看看。</li></ul><p>PHP官方手册<br><a href=\"https://secure.php.net/manual/zh/\" target=\"_blank\" rel=\"external\">https://secure.php.net/manual/zh/</a></p><p>awesome-php<br><a href=\"https://github.com/JingwenTian/awesome-php\" target=\"_blank\" rel=\"external\">https://github.com/JingwenTian/awesome-php</a></p><ul><li>收集整理一些常用的PHP类库, 资源以及技巧. 以便在工作中迅速的查找所需</li><li>别人整理的PHP资料库，里面推荐了很多学习资源和类库</li></ul><p>最好的 PHP 框架是什么？为什么？</p><ul><li><p>首推 Laravel ，其次是 Yii，Laravel 的设计思想以及在工程实践上的支持，超过 ThinkPHP 好几个世代。如果说原生的 PHP 是火枪，ThinkPHP 就是来福枪，Lavavel 则是冲锋枪。你要打猎的话，带把来福枪完全足够了，但是要上战场，非得更自动化的冲锋枪不行。</p></li><li><p>以上引文有一定道理，我个人的理解是：Laravel 不是最好的框架，也不存在所谓的最好的框架，但Laravel是目前最流行的PHP框架，因为其是后来者，出现的比较晚，所以历史包袱较小，使用了很多PHP新特性，应用了许多设计模式，框架本身值得学习（Laravel 5.4最低支持PHP &gt;= 5.6.4）。</p></li><li><p>thinkphp5 貌似相对3做了大量改进，借鉴了laravel的工程思想，官方不建议旧项目从3直接升级5（不兼容），建议新项目使用5。个人对框架使用不多，所以也不便比较，感觉平时需要多关注一下其他框架，开阔一下思路。<br>Laravel 作为一个全栈的框架，大而全，开箱即用，但是性能不高；对性能要求较高，可以使用Laravel的弟弟Lumen</p></li></ul><p>Laravel China, 前身是phphub，后面改版成专门的laravel社区<br><a href=\"https://laravel-china.org/\" target=\"_blank\" rel=\"external\">https://laravel-china.org/</a></p><p>Laravel 5.4中文文档<a href=\"http://d.laravel-china.org/docs/5.4\" target=\"_blank\" rel=\"external\">http://d.laravel-china.org/docs/5.4</a></p><p><a href=\"https://laracasts.com/series/laravel-5-fundamentals/episodes/1]\" target=\"_blank\" rel=\"external\">Laracast</a>, 国外PHP视频站点，附的链接是一个Laravel的基础教程地址，可以顺带学英语。国内版，是之前推荐的<a href=\"https://www.laravist.com/\" target=\"_blank\" rel=\"external\">laravist</a></p><p>Laravel中大型专案架构 来自点灯坊，繁体的，貌似作者来自台湾。<br><a href=\"http://oomusou.io/laravel/laravel-architecture/\" target=\"_blank\" rel=\"external\">http://oomusou.io/laravel/laravel-architecture/</a></p><p><a href=\"http://oomusou.io/\" target=\"_blank\" rel=\"external\">点灯坊博客首页</a></p><blockquote><p>工具</p></blockquote><p>强大多图片站找图利器 zoommy<br><a href=\"http://zoommyapp.com\" target=\"_blank\" rel=\"external\">http://zoommyapp.com</a></p><blockquote><p>测试</p></blockquote><p>【效率管理改进】养成好的工作习惯 （我觉得这个不是仅适用于新人）<br><a href=\"https://mp.weixin.qq.com/s?__biz=MjM5ODY4ODIxOA==&amp;mid=2653201363&amp;idx=1&amp;sn=356bebc031cb8c6aab3859bc9b9e5da7&amp;chksm=bd16e7668a616e70e5c6a7f8878746a1c615879e7d1005f92b282c6519b1900a06ec6b43046f&amp;scene=0&amp;key=ec5e8f823d5203bd3b23d0f5638496d6e717a4e8d37a4ffb5d9100dedcfc099e6e6f5a21d5a30de124b6b6c156c31b092342cf3f844c9c035d63aac0594a2ca88bf166cf45a5785208de75a667a0aacc&amp;ascene=0&amp;uin=MTk3ODA1MDIwMQ%3D%3D&amp;devicetype=iMac+MacBookPro11%2C1+OSX+OSX+10.11.5+build(15F34)&amp;version=12020610&amp;nettype=WIFI&amp;fontScale=100&amp;pass_ticket=KB63IHWBSzBL0aPuvhGAdx8rwz%2FzuN5uqH0WqkWW5lgX8e6lbh%2FHJw2Up%2FQMuJDl\" target=\"_blank\" rel=\"external\">https://mp.weixin.qq.com/s?__biz=MjM5ODY4ODIxOA==&amp;mid=2653201363&amp;idx=1&amp;sn=356bebc031cb8c6aab3859bc9b9e5da7&amp;chksm=bd16e7668a616e70e5c6a7f8878746a1c615879e7d1005f92b282c6519b1900a06ec6b43046f&amp;scene=0&amp;key=ec5e8f823d5203bd3b23d0f5638496d6e717a4e8d37a4ffb5d9100dedcfc099e6e6f5a21d5a30de124b6b6c156c31b092342cf3f844c9c035d63aac0594a2ca88bf166cf45a5785208de75a667a0aacc&amp;ascene=0&amp;uin=MTk3ODA1MDIwMQ%3D%3D&amp;devicetype=iMac+MacBookPro11%2C1+OSX+OSX+10.11.5+build(15F34)&amp;version=12020610&amp;nettype=WIFI&amp;fontScale=100&amp;pass_ticket=KB63IHWBSzBL0aPuvhGAdx8rwz%2FzuN5uqH0WqkWW5lgX8e6lbh%2FHJw2Up%2FQMuJDl</a></p>"},{"title":"美妆心得技术周刊2017-08-02","date":"2017-08-02T15:58:19.000Z","_content":"\n> 产品及其他\n\n如何快速搭建系统原型（一）    http://www.woshipm.com/rp/733698.html\n\n产品经理需要了解的算法－热度算法和个性化推荐    http://36kr.com/p/5084292.html\n\n\n如何评价「饿了么」这家上海创业公司？\nhttps://www.zhihu.com/question/19654030/answer/203153671\n\n>让我比较有感触的是这句话：（共勉）\n>不管怎么样 关注过饿了么的前端团队 一般来讲 创业公司的技术团队都是被业务玩死 跟着业务跑 沉下心来 有沉淀的很少 饿了么前端团队 短短几年 就能在业界冲出一片天 可见这家公司的技术团队 是有灵魂和有追求的 漠天\n\n\nIntel 八代酷睿规格曝光 http://tech.feng.com/2017-07-30/All-the-6-core-Intel-eight-generations-core-specification-exposure-after-4.7-GHz_686895.shtml\n\n> 安卓\n\nAndroid：关于ContentProvider的知识都在这里了 http://www.jianshu.com/p/ea8bc4aaf057\n\n一个网站  https://futurestud.io/\n> Skyrocket in Android and Node.js\n> Build up your knowledge in modern Android and Node.js backend development\n\n一款简约的小视频app带你走进kotlin https://juejin.im/post/5965caa1f265da6c2d2c8173\n\n\n360加固保加固apk并自动签名\nhttp://www.jianshu.com/p/56f48602838b\n\n\n> 前端\n\nES8 新特性一览 https://github.com/xitu/gold-miner/blob/master/TODO/es8-was-released-and-here-are-its-main-new-features.md\n\nPngImg 号称全球最大的 PNG 透明背景图库，它收录了 30000+ 各种类别的免费 PNG 图像 http://pngimg.com/\n\n谈谈CSS预处理器 http://hyuhan.com/2016/09/07/compares-less-sass-and-stylus/\n\n我用了两个月的时间才理解 let https://zhuanlan.zhihu.com/p/28140450\n\n30分钟掌握ES6/ES2015核心内容 http://www.jianshu.com/p/ebfeb687eb70\n\n\n> 测试\n\n你在测试开发岗位中的亮点是什么？ https://testerhome.com/topics/9104\n\nselenium---unittest框架测试用例函数执行顺序 优先级 http://blog.csdn.net/niedongri/article/details/70272048\n\n> 书籍推荐\n\n《每天懂一点色彩心理学》\n\n《 Effective Objective-C 2.0 》\n\n**本周刊由团队成员推荐整理而成，内容来自互联网**","source":"_posts/weekly-2017-08-02.md","raw":"---\ntitle: 美妆心得技术周刊2017-08-02\ndate: 2017-08-02 23:58:19\ntags:\n- weekly\n---\n\n> 产品及其他\n\n如何快速搭建系统原型（一）    http://www.woshipm.com/rp/733698.html\n\n产品经理需要了解的算法－热度算法和个性化推荐    http://36kr.com/p/5084292.html\n\n\n如何评价「饿了么」这家上海创业公司？\nhttps://www.zhihu.com/question/19654030/answer/203153671\n\n>让我比较有感触的是这句话：（共勉）\n>不管怎么样 关注过饿了么的前端团队 一般来讲 创业公司的技术团队都是被业务玩死 跟着业务跑 沉下心来 有沉淀的很少 饿了么前端团队 短短几年 就能在业界冲出一片天 可见这家公司的技术团队 是有灵魂和有追求的 漠天\n\n\nIntel 八代酷睿规格曝光 http://tech.feng.com/2017-07-30/All-the-6-core-Intel-eight-generations-core-specification-exposure-after-4.7-GHz_686895.shtml\n\n> 安卓\n\nAndroid：关于ContentProvider的知识都在这里了 http://www.jianshu.com/p/ea8bc4aaf057\n\n一个网站  https://futurestud.io/\n> Skyrocket in Android and Node.js\n> Build up your knowledge in modern Android and Node.js backend development\n\n一款简约的小视频app带你走进kotlin https://juejin.im/post/5965caa1f265da6c2d2c8173\n\n\n360加固保加固apk并自动签名\nhttp://www.jianshu.com/p/56f48602838b\n\n\n> 前端\n\nES8 新特性一览 https://github.com/xitu/gold-miner/blob/master/TODO/es8-was-released-and-here-are-its-main-new-features.md\n\nPngImg 号称全球最大的 PNG 透明背景图库，它收录了 30000+ 各种类别的免费 PNG 图像 http://pngimg.com/\n\n谈谈CSS预处理器 http://hyuhan.com/2016/09/07/compares-less-sass-and-stylus/\n\n我用了两个月的时间才理解 let https://zhuanlan.zhihu.com/p/28140450\n\n30分钟掌握ES6/ES2015核心内容 http://www.jianshu.com/p/ebfeb687eb70\n\n\n> 测试\n\n你在测试开发岗位中的亮点是什么？ https://testerhome.com/topics/9104\n\nselenium---unittest框架测试用例函数执行顺序 优先级 http://blog.csdn.net/niedongri/article/details/70272048\n\n> 书籍推荐\n\n《每天懂一点色彩心理学》\n\n《 Effective Objective-C 2.0 》\n\n**本周刊由团队成员推荐整理而成，内容来自互联网**","slug":"weekly-2017-08-02","published":1,"updated":"2017-09-18T02:12:39.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9cutip4001lds9l4ae3et7c","content":"<blockquote><p>产品及其他</p></blockquote><p>如何快速搭建系统原型（一） <a href=\"http://www.woshipm.com/rp/733698.html\" target=\"_blank\" rel=\"external\">http://www.woshipm.com/rp/733698.html</a></p><p>产品经理需要了解的算法－热度算法和个性化推荐 <a href=\"http://36kr.com/p/5084292.html\" target=\"_blank\" rel=\"external\">http://36kr.com/p/5084292.html</a></p><p>如何评价「饿了么」这家上海创业公司？<br><a href=\"https://www.zhihu.com/question/19654030/answer/203153671\" target=\"_blank\" rel=\"external\">https://www.zhihu.com/question/19654030/answer/203153671</a></p><blockquote><p>让我比较有感触的是这句话：（共勉）<br>不管怎么样 关注过饿了么的前端团队 一般来讲 创业公司的技术团队都是被业务玩死 跟着业务跑 沉下心来 有沉淀的很少 饿了么前端团队 短短几年 就能在业界冲出一片天 可见这家公司的技术团队 是有灵魂和有追求的 漠天</p></blockquote><p>Intel 八代酷睿规格曝光 <a href=\"http://tech.feng.com/2017-07-30/All-the-6-core-Intel-eight-generations-core-specification-exposure-after-4.7-GHz_686895.shtml\" target=\"_blank\" rel=\"external\">http://tech.feng.com/2017-07-30/All-the-6-core-Intel-eight-generations-core-specification-exposure-after-4.7-GHz_686895.shtml</a></p><blockquote><p>安卓</p></blockquote><p>Android：关于ContentProvider的知识都在这里了 <a href=\"http://www.jianshu.com/p/ea8bc4aaf057\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/ea8bc4aaf057</a></p><p>一个网站 <a href=\"https://futurestud.io/\" target=\"_blank\" rel=\"external\">https://futurestud.io/</a></p><blockquote><p>Skyrocket in Android and Node.js<br>Build up your knowledge in modern Android and Node.js backend development</p></blockquote><p>一款简约的小视频app带你走进kotlin <a href=\"https://juejin.im/post/5965caa1f265da6c2d2c8173\" target=\"_blank\" rel=\"external\">https://juejin.im/post/5965caa1f265da6c2d2c8173</a></p><p>360加固保加固apk并自动签名<br><a href=\"http://www.jianshu.com/p/56f48602838b\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/56f48602838b</a></p><blockquote><p>前端</p></blockquote><p>ES8 新特性一览 <a href=\"https://github.com/xitu/gold-miner/blob/master/TODO/es8-was-released-and-here-are-its-main-new-features.md\" target=\"_blank\" rel=\"external\">https://github.com/xitu/gold-miner/blob/master/TODO/es8-was-released-and-here-are-its-main-new-features.md</a></p><p>PngImg 号称全球最大的 PNG 透明背景图库，它收录了 30000+ 各种类别的免费 PNG 图像 <a href=\"http://pngimg.com/\" target=\"_blank\" rel=\"external\">http://pngimg.com/</a></p><p>谈谈CSS预处理器 <a href=\"http://hyuhan.com/2016/09/07/compares-less-sass-and-stylus/\" target=\"_blank\" rel=\"external\">http://hyuhan.com/2016/09/07/compares-less-sass-and-stylus/</a></p><p>我用了两个月的时间才理解 let <a href=\"https://zhuanlan.zhihu.com/p/28140450\" target=\"_blank\" rel=\"external\">https://zhuanlan.zhihu.com/p/28140450</a></p><p>30分钟掌握ES6/ES2015核心内容 <a href=\"http://www.jianshu.com/p/ebfeb687eb70\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/ebfeb687eb70</a></p><blockquote><p>测试</p></blockquote><p>你在测试开发岗位中的亮点是什么？ <a href=\"https://testerhome.com/topics/9104\" target=\"_blank\" rel=\"external\">https://testerhome.com/topics/9104</a></p><p>selenium—unittest框架测试用例函数执行顺序 优先级 <a href=\"http://blog.csdn.net/niedongri/article/details/70272048\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/niedongri/article/details/70272048</a></p><blockquote><p>书籍推荐</p></blockquote><p>《每天懂一点色彩心理学》</p><p>《 Effective Objective-C 2.0 》</p><p><strong>本周刊由团队成员推荐整理而成，内容来自互联网</strong></p>","site":{"data":{}},"excerpt":"","more":"<blockquote><p>产品及其他</p></blockquote><p>如何快速搭建系统原型（一） <a href=\"http://www.woshipm.com/rp/733698.html\" target=\"_blank\" rel=\"external\">http://www.woshipm.com/rp/733698.html</a></p><p>产品经理需要了解的算法－热度算法和个性化推荐 <a href=\"http://36kr.com/p/5084292.html\" target=\"_blank\" rel=\"external\">http://36kr.com/p/5084292.html</a></p><p>如何评价「饿了么」这家上海创业公司？<br><a href=\"https://www.zhihu.com/question/19654030/answer/203153671\" target=\"_blank\" rel=\"external\">https://www.zhihu.com/question/19654030/answer/203153671</a></p><blockquote><p>让我比较有感触的是这句话：（共勉）<br>不管怎么样 关注过饿了么的前端团队 一般来讲 创业公司的技术团队都是被业务玩死 跟着业务跑 沉下心来 有沉淀的很少 饿了么前端团队 短短几年 就能在业界冲出一片天 可见这家公司的技术团队 是有灵魂和有追求的 漠天</p></blockquote><p>Intel 八代酷睿规格曝光 <a href=\"http://tech.feng.com/2017-07-30/All-the-6-core-Intel-eight-generations-core-specification-exposure-after-4.7-GHz_686895.shtml\" target=\"_blank\" rel=\"external\">http://tech.feng.com/2017-07-30/All-the-6-core-Intel-eight-generations-core-specification-exposure-after-4.7-GHz_686895.shtml</a></p><blockquote><p>安卓</p></blockquote><p>Android：关于ContentProvider的知识都在这里了 <a href=\"http://www.jianshu.com/p/ea8bc4aaf057\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/ea8bc4aaf057</a></p><p>一个网站 <a href=\"https://futurestud.io/\" target=\"_blank\" rel=\"external\">https://futurestud.io/</a></p><blockquote><p>Skyrocket in Android and Node.js<br>Build up your knowledge in modern Android and Node.js backend development</p></blockquote><p>一款简约的小视频app带你走进kotlin <a href=\"https://juejin.im/post/5965caa1f265da6c2d2c8173\" target=\"_blank\" rel=\"external\">https://juejin.im/post/5965caa1f265da6c2d2c8173</a></p><p>360加固保加固apk并自动签名<br><a href=\"http://www.jianshu.com/p/56f48602838b\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/56f48602838b</a></p><blockquote><p>前端</p></blockquote><p>ES8 新特性一览 <a href=\"https://github.com/xitu/gold-miner/blob/master/TODO/es8-was-released-and-here-are-its-main-new-features.md\" target=\"_blank\" rel=\"external\">https://github.com/xitu/gold-miner/blob/master/TODO/es8-was-released-and-here-are-its-main-new-features.md</a></p><p>PngImg 号称全球最大的 PNG 透明背景图库，它收录了 30000+ 各种类别的免费 PNG 图像 <a href=\"http://pngimg.com/\" target=\"_blank\" rel=\"external\">http://pngimg.com/</a></p><p>谈谈CSS预处理器 <a href=\"http://hyuhan.com/2016/09/07/compares-less-sass-and-stylus/\" target=\"_blank\" rel=\"external\">http://hyuhan.com/2016/09/07/compares-less-sass-and-stylus/</a></p><p>我用了两个月的时间才理解 let <a href=\"https://zhuanlan.zhihu.com/p/28140450\" target=\"_blank\" rel=\"external\">https://zhuanlan.zhihu.com/p/28140450</a></p><p>30分钟掌握ES6/ES2015核心内容 <a href=\"http://www.jianshu.com/p/ebfeb687eb70\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/ebfeb687eb70</a></p><blockquote><p>测试</p></blockquote><p>你在测试开发岗位中的亮点是什么？ <a href=\"https://testerhome.com/topics/9104\" target=\"_blank\" rel=\"external\">https://testerhome.com/topics/9104</a></p><p>selenium—unittest框架测试用例函数执行顺序 优先级 <a href=\"http://blog.csdn.net/niedongri/article/details/70272048\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/niedongri/article/details/70272048</a></p><blockquote><p>书籍推荐</p></blockquote><p>《每天懂一点色彩心理学》</p><p>《 Effective Objective-C 2.0 》</p><p><strong>本周刊由团队成员推荐整理而成，内容来自互联网</strong></p>"},{"title":"美妆心得技术周刊2017-10-09","date":"2017-10-09T07:31:25.000Z","_content":"\n> 安卓\n\nAndroid通用圆角布局https://juejin.im/entry/59d73506f265da0668762574?utm_source=gold_browser_extension\n\n自定义 View 1-6：属性动画 https://www.bilibili.com/video/av14207821/\n\nAndroid样式开发：shape https://keeganlee.me/post/android/20150830\n\nAndroid 中的Interpolator http://www.cnblogs.com/mengdd/p/3346003.html\n\n\n> 前端\n\nVue.js 中，7种定义组件模板的方法 https://mp.weixin.qq.com/s?__biz=MzA4NjE3MDg4OQ==&mid=2650964851&idx=1&sn=4d434fcd02a5354b6a713cb96d3435ec&chksm=843aef15b34d6603d0f51d0a70c0010c939fc506ed69305cf420c305425bd2ba5e4e67fc7de4&mpshare=1&scene=1&srcid=0724QEfqhBqka3aZiGbJp7an#rd\n\n前端HTML5几种存储方式的总结 http://www.admin10000.com/document/9261.html\n\n前端分享技术大会资源整理 https://github.com/huixisheng/awesome-conf\n\n文档生成工具整理 https://github.com/huixisheng/x-docs-tools\n\n\n> 测试\n\n输入框常见bug：http://www.jianshu.com/p/86f2f22cbe99?utm_campaign=hugo&utm_medium=reader_share&utm_content=note&utm_source=weixin-friends\n\n干了这碗蛋炒饭 继续APP性能提升（1）：http://www.jianshu.com/p/11911c931efc?utm_campaign=hugo&utm_medium=reader_share&utm_content=note&utm_source=weixin-friends\n\n> 产品及其他\n\n如何评价 CloudXNS 未实名用户停止解析？ https://www.zhihu.com/question/66028822\n\n什么是域名规范化? https://www.zhihu.com/question/53838228\n\n以手机淘宝为例，看原型图易缺失的交互场景  http://www.woshipm.com/rp/798263.html\n\n运营思考：如何优雅的“蹭热度”  http://www.woshipm.com/operate/804446.html\n\n**本周刊由团队成员推荐整理而成，内容来自互联网**","source":"_posts/weekly-2017-10-08.md","raw":"---\ntitle: 美妆心得技术周刊2017-10-09\ntags:\n  - weekly\ndate: 2017-10-09 15:31:25\n---\n\n> 安卓\n\nAndroid通用圆角布局https://juejin.im/entry/59d73506f265da0668762574?utm_source=gold_browser_extension\n\n自定义 View 1-6：属性动画 https://www.bilibili.com/video/av14207821/\n\nAndroid样式开发：shape https://keeganlee.me/post/android/20150830\n\nAndroid 中的Interpolator http://www.cnblogs.com/mengdd/p/3346003.html\n\n\n> 前端\n\nVue.js 中，7种定义组件模板的方法 https://mp.weixin.qq.com/s?__biz=MzA4NjE3MDg4OQ==&mid=2650964851&idx=1&sn=4d434fcd02a5354b6a713cb96d3435ec&chksm=843aef15b34d6603d0f51d0a70c0010c939fc506ed69305cf420c305425bd2ba5e4e67fc7de4&mpshare=1&scene=1&srcid=0724QEfqhBqka3aZiGbJp7an#rd\n\n前端HTML5几种存储方式的总结 http://www.admin10000.com/document/9261.html\n\n前端分享技术大会资源整理 https://github.com/huixisheng/awesome-conf\n\n文档生成工具整理 https://github.com/huixisheng/x-docs-tools\n\n\n> 测试\n\n输入框常见bug：http://www.jianshu.com/p/86f2f22cbe99?utm_campaign=hugo&utm_medium=reader_share&utm_content=note&utm_source=weixin-friends\n\n干了这碗蛋炒饭 继续APP性能提升（1）：http://www.jianshu.com/p/11911c931efc?utm_campaign=hugo&utm_medium=reader_share&utm_content=note&utm_source=weixin-friends\n\n> 产品及其他\n\n如何评价 CloudXNS 未实名用户停止解析？ https://www.zhihu.com/question/66028822\n\n什么是域名规范化? https://www.zhihu.com/question/53838228\n\n以手机淘宝为例，看原型图易缺失的交互场景  http://www.woshipm.com/rp/798263.html\n\n运营思考：如何优雅的“蹭热度”  http://www.woshipm.com/operate/804446.html\n\n**本周刊由团队成员推荐整理而成，内容来自互联网**","slug":"weekly-2017-10-08","published":1,"updated":"2017-10-09T07:35:06.873Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9cutip5001nds9ljx9imhn4","content":"<blockquote><p>安卓</p></blockquote><p>Android通用圆角布局<a href=\"https://juejin.im/entry/59d73506f265da0668762574?utm_source=gold_browser_extension\" target=\"_blank\" rel=\"external\">https://juejin.im/entry/59d73506f265da0668762574?utm_source=gold_browser_extension</a></p><p>自定义 View 1-6：属性动画 <a href=\"https://www.bilibili.com/video/av14207821/\" target=\"_blank\" rel=\"external\">https://www.bilibili.com/video/av14207821/</a></p><p>Android样式开发：shape <a href=\"https://keeganlee.me/post/android/20150830\" target=\"_blank\" rel=\"external\">https://keeganlee.me/post/android/20150830</a></p><p>Android 中的Interpolator <a href=\"http://www.cnblogs.com/mengdd/p/3346003.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/mengdd/p/3346003.html</a></p><blockquote><p>前端</p></blockquote><p>Vue.js 中，7种定义组件模板的方法 <a href=\"https://mp.weixin.qq.com/s?__biz=MzA4NjE3MDg4OQ==&amp;mid=2650964851&amp;idx=1&amp;sn=4d434fcd02a5354b6a713cb96d3435ec&amp;chksm=843aef15b34d6603d0f51d0a70c0010c939fc506ed69305cf420c305425bd2ba5e4e67fc7de4&amp;mpshare=1&amp;scene=1&amp;srcid=0724QEfqhBqka3aZiGbJp7an#rd\" target=\"_blank\" rel=\"external\">https://mp.weixin.qq.com/s?__biz=MzA4NjE3MDg4OQ==&amp;mid=2650964851&amp;idx=1&amp;sn=4d434fcd02a5354b6a713cb96d3435ec&amp;chksm=843aef15b34d6603d0f51d0a70c0010c939fc506ed69305cf420c305425bd2ba5e4e67fc7de4&amp;mpshare=1&amp;scene=1&amp;srcid=0724QEfqhBqka3aZiGbJp7an#rd</a></p><p>前端HTML5几种存储方式的总结 <a href=\"http://www.admin10000.com/document/9261.html\" target=\"_blank\" rel=\"external\">http://www.admin10000.com/document/9261.html</a></p><p>前端分享技术大会资源整理 <a href=\"https://github.com/huixisheng/awesome-conf\" target=\"_blank\" rel=\"external\">https://github.com/huixisheng/awesome-conf</a></p><p>文档生成工具整理 <a href=\"https://github.com/huixisheng/x-docs-tools\" target=\"_blank\" rel=\"external\">https://github.com/huixisheng/x-docs-tools</a></p><blockquote><p>测试</p></blockquote><p>输入框常见bug：<a href=\"http://www.jianshu.com/p/86f2f22cbe99?utm_campaign=hugo&amp;utm_medium=reader_share&amp;utm_content=note&amp;utm_source=weixin-friends\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/86f2f22cbe99?utm_campaign=hugo&amp;utm_medium=reader_share&amp;utm_content=note&amp;utm_source=weixin-friends</a></p><p>干了这碗蛋炒饭 继续APP性能提升（1）：<a href=\"http://www.jianshu.com/p/11911c931efc?utm_campaign=hugo&amp;utm_medium=reader_share&amp;utm_content=note&amp;utm_source=weixin-friends\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/11911c931efc?utm_campaign=hugo&amp;utm_medium=reader_share&amp;utm_content=note&amp;utm_source=weixin-friends</a></p><blockquote><p>产品及其他</p></blockquote><p>如何评价 CloudXNS 未实名用户停止解析？ <a href=\"https://www.zhihu.com/question/66028822\" target=\"_blank\" rel=\"external\">https://www.zhihu.com/question/66028822</a></p><p>什么是域名规范化? <a href=\"https://www.zhihu.com/question/53838228\" target=\"_blank\" rel=\"external\">https://www.zhihu.com/question/53838228</a></p><p>以手机淘宝为例，看原型图易缺失的交互场景 <a href=\"http://www.woshipm.com/rp/798263.html\" target=\"_blank\" rel=\"external\">http://www.woshipm.com/rp/798263.html</a></p><p>运营思考：如何优雅的“蹭热度” <a href=\"http://www.woshipm.com/operate/804446.html\" target=\"_blank\" rel=\"external\">http://www.woshipm.com/operate/804446.html</a></p><p><strong>本周刊由团队成员推荐整理而成，内容来自互联网</strong></p>","site":{"data":{}},"excerpt":"","more":"<blockquote><p>安卓</p></blockquote><p>Android通用圆角布局<a href=\"https://juejin.im/entry/59d73506f265da0668762574?utm_source=gold_browser_extension\" target=\"_blank\" rel=\"external\">https://juejin.im/entry/59d73506f265da0668762574?utm_source=gold_browser_extension</a></p><p>自定义 View 1-6：属性动画 <a href=\"https://www.bilibili.com/video/av14207821/\" target=\"_blank\" rel=\"external\">https://www.bilibili.com/video/av14207821/</a></p><p>Android样式开发：shape <a href=\"https://keeganlee.me/post/android/20150830\" target=\"_blank\" rel=\"external\">https://keeganlee.me/post/android/20150830</a></p><p>Android 中的Interpolator <a href=\"http://www.cnblogs.com/mengdd/p/3346003.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/mengdd/p/3346003.html</a></p><blockquote><p>前端</p></blockquote><p>Vue.js 中，7种定义组件模板的方法 <a href=\"https://mp.weixin.qq.com/s?__biz=MzA4NjE3MDg4OQ==&amp;mid=2650964851&amp;idx=1&amp;sn=4d434fcd02a5354b6a713cb96d3435ec&amp;chksm=843aef15b34d6603d0f51d0a70c0010c939fc506ed69305cf420c305425bd2ba5e4e67fc7de4&amp;mpshare=1&amp;scene=1&amp;srcid=0724QEfqhBqka3aZiGbJp7an#rd\" target=\"_blank\" rel=\"external\">https://mp.weixin.qq.com/s?__biz=MzA4NjE3MDg4OQ==&amp;mid=2650964851&amp;idx=1&amp;sn=4d434fcd02a5354b6a713cb96d3435ec&amp;chksm=843aef15b34d6603d0f51d0a70c0010c939fc506ed69305cf420c305425bd2ba5e4e67fc7de4&amp;mpshare=1&amp;scene=1&amp;srcid=0724QEfqhBqka3aZiGbJp7an#rd</a></p><p>前端HTML5几种存储方式的总结 <a href=\"http://www.admin10000.com/document/9261.html\" target=\"_blank\" rel=\"external\">http://www.admin10000.com/document/9261.html</a></p><p>前端分享技术大会资源整理 <a href=\"https://github.com/huixisheng/awesome-conf\" target=\"_blank\" rel=\"external\">https://github.com/huixisheng/awesome-conf</a></p><p>文档生成工具整理 <a href=\"https://github.com/huixisheng/x-docs-tools\" target=\"_blank\" rel=\"external\">https://github.com/huixisheng/x-docs-tools</a></p><blockquote><p>测试</p></blockquote><p>输入框常见bug：<a href=\"http://www.jianshu.com/p/86f2f22cbe99?utm_campaign=hugo&amp;utm_medium=reader_share&amp;utm_content=note&amp;utm_source=weixin-friends\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/86f2f22cbe99?utm_campaign=hugo&amp;utm_medium=reader_share&amp;utm_content=note&amp;utm_source=weixin-friends</a></p><p>干了这碗蛋炒饭 继续APP性能提升（1）：<a href=\"http://www.jianshu.com/p/11911c931efc?utm_campaign=hugo&amp;utm_medium=reader_share&amp;utm_content=note&amp;utm_source=weixin-friends\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/11911c931efc?utm_campaign=hugo&amp;utm_medium=reader_share&amp;utm_content=note&amp;utm_source=weixin-friends</a></p><blockquote><p>产品及其他</p></blockquote><p>如何评价 CloudXNS 未实名用户停止解析？ <a href=\"https://www.zhihu.com/question/66028822\" target=\"_blank\" rel=\"external\">https://www.zhihu.com/question/66028822</a></p><p>什么是域名规范化? <a href=\"https://www.zhihu.com/question/53838228\" target=\"_blank\" rel=\"external\">https://www.zhihu.com/question/53838228</a></p><p>以手机淘宝为例，看原型图易缺失的交互场景 <a href=\"http://www.woshipm.com/rp/798263.html\" target=\"_blank\" rel=\"external\">http://www.woshipm.com/rp/798263.html</a></p><p>运营思考：如何优雅的“蹭热度” <a href=\"http://www.woshipm.com/operate/804446.html\" target=\"_blank\" rel=\"external\">http://www.woshipm.com/operate/804446.html</a></p><p><strong>本周刊由团队成员推荐整理而成，内容来自互联网</strong></p>"},{"title":"美妆心得技术周刊2017-08-13","date":"2017-08-13T15:58:19.000Z","_content":"\n> 博客推荐\n\n[美团点评技术博客](https://tech.meituan.com/)(综合)\n\n[饿了么前端](https://zhuanlan.zhihu.com/ElemeFE)(前端)\n\n[网易QA Team](http://qa.blog.163.com/)(测试)\n\n[沈逸的个人站点](http://www.hishenyi.com/)\n\n[韩天峰(Rango)的博客](http://rango.swoole.com/)\n\n[博学无忧-海龙的博客](http://www.bo56.com/)\n\n> 设计\n\n[为什么我做的设计总是不耐看](http://mp.weixin.qq.com/s/DMfYl4gQUfQFX7TU_FRFTA)\n\n[玩转渐变色](http://mp.weixin.qq.com/s/VVhtQqZ8pdmrFI7jGUYz7A)\n\n[牛大拿设计师导航](http://www.niudana.com/)\n\n[做有温度的设计：设计有故事感的标签图标](http://www.woshipm.com/pd/728039.html)\n\n> 前端\n\n移动端UI组件\n\n- <http://zui.sexy/m/index.html>\n- <https://vux.li/>\n- <https://mobile.ant.design/index-cn>\n\n[JavaScript 专题之如何判断两个对象相等](https://juejin.im/post/598a701b6fb9a03c5b04bb14)\n\n> 测试\n\n[软件测试常见问题](http://www.jianshu.com/p/6d778d701653)\n\n[测试基本理论知识](http://www.jianshu.com/p/d3b1cb01a3ac)\n\n> 后端\n\n[使用预加载优化 Laravel Model 查询](https://laravel-china.org/articles/5581/optimizing-laravel-model-queries-with-preload)\n\n[从今天起，做一个会使用 view ()->exists 方法的人](https://laravel-china.org/articles/5488/from-today-on-be-a-person-who-uses-the-view-exists-method)\n\n> 安卓\n\n[快捷的去掉recyclerview的刷新闪烁动画](http://www.jianshu.com/p/654dac931667)\n\n> 产品\n\n[如何快速搭建系统原型（一）](http://www.woshipm.com/rp/733698.html)\n\n> 书籍\n\n《周鸿祎自述：我的互联网方法论》\n\n> 其他\n\n[天天写「业务代码」，如何成为「技术大牛」？](https://zhuanlan.zhihu.com/p/23030429?utm_medium=social&utm_source=wechat_session)\n\n[京东私自上传用户wifi密码](http://www.4hou.com/info/news/7104.html)","source":"_posts/weekly-2017-08-13.md","raw":"---\ntitle: 美妆心得技术周刊2017-08-13\ndate:  2017-08-13 23:58:19\ntags:\n- weekly\n---\n\n> 博客推荐\n\n[美团点评技术博客](https://tech.meituan.com/)(综合)\n\n[饿了么前端](https://zhuanlan.zhihu.com/ElemeFE)(前端)\n\n[网易QA Team](http://qa.blog.163.com/)(测试)\n\n[沈逸的个人站点](http://www.hishenyi.com/)\n\n[韩天峰(Rango)的博客](http://rango.swoole.com/)\n\n[博学无忧-海龙的博客](http://www.bo56.com/)\n\n> 设计\n\n[为什么我做的设计总是不耐看](http://mp.weixin.qq.com/s/DMfYl4gQUfQFX7TU_FRFTA)\n\n[玩转渐变色](http://mp.weixin.qq.com/s/VVhtQqZ8pdmrFI7jGUYz7A)\n\n[牛大拿设计师导航](http://www.niudana.com/)\n\n[做有温度的设计：设计有故事感的标签图标](http://www.woshipm.com/pd/728039.html)\n\n> 前端\n\n移动端UI组件\n\n- <http://zui.sexy/m/index.html>\n- <https://vux.li/>\n- <https://mobile.ant.design/index-cn>\n\n[JavaScript 专题之如何判断两个对象相等](https://juejin.im/post/598a701b6fb9a03c5b04bb14)\n\n> 测试\n\n[软件测试常见问题](http://www.jianshu.com/p/6d778d701653)\n\n[测试基本理论知识](http://www.jianshu.com/p/d3b1cb01a3ac)\n\n> 后端\n\n[使用预加载优化 Laravel Model 查询](https://laravel-china.org/articles/5581/optimizing-laravel-model-queries-with-preload)\n\n[从今天起，做一个会使用 view ()->exists 方法的人](https://laravel-china.org/articles/5488/from-today-on-be-a-person-who-uses-the-view-exists-method)\n\n> 安卓\n\n[快捷的去掉recyclerview的刷新闪烁动画](http://www.jianshu.com/p/654dac931667)\n\n> 产品\n\n[如何快速搭建系统原型（一）](http://www.woshipm.com/rp/733698.html)\n\n> 书籍\n\n《周鸿祎自述：我的互联网方法论》\n\n> 其他\n\n[天天写「业务代码」，如何成为「技术大牛」？](https://zhuanlan.zhihu.com/p/23030429?utm_medium=social&utm_source=wechat_session)\n\n[京东私自上传用户wifi密码](http://www.4hou.com/info/news/7104.html)","slug":"weekly-2017-08-13","published":1,"updated":"2017-09-26T08:40:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9cutip7001pds9luv6dzeum","content":"<blockquote><p>博客推荐</p></blockquote><p><a href=\"https://tech.meituan.com/\" target=\"_blank\" rel=\"external\">美团点评技术博客</a>(综合)</p><p><a href=\"https://zhuanlan.zhihu.com/ElemeFE\" target=\"_blank\" rel=\"external\">饿了么前端</a>(前端)</p><p><a href=\"http://qa.blog.163.com/\" target=\"_blank\" rel=\"external\">网易QA Team</a>(测试)</p><p><a href=\"http://www.hishenyi.com/\" target=\"_blank\" rel=\"external\">沈逸的个人站点</a></p><p><a href=\"http://rango.swoole.com/\" target=\"_blank\" rel=\"external\">韩天峰(Rango)的博客</a></p><p><a href=\"http://www.bo56.com/\" target=\"_blank\" rel=\"external\">博学无忧-海龙的博客</a></p><blockquote><p>设计</p></blockquote><p><a href=\"http://mp.weixin.qq.com/s/DMfYl4gQUfQFX7TU_FRFTA\" target=\"_blank\" rel=\"external\">为什么我做的设计总是不耐看</a></p><p><a href=\"http://mp.weixin.qq.com/s/VVhtQqZ8pdmrFI7jGUYz7A\" target=\"_blank\" rel=\"external\">玩转渐变色</a></p><p><a href=\"http://www.niudana.com/\" target=\"_blank\" rel=\"external\">牛大拿设计师导航</a></p><p><a href=\"http://www.woshipm.com/pd/728039.html\" target=\"_blank\" rel=\"external\">做有温度的设计：设计有故事感的标签图标</a></p><blockquote><p>前端</p></blockquote><p>移动端UI组件</p><ul><li><a href=\"http://zui.sexy/m/index.html\" target=\"_blank\" rel=\"external\">http://zui.sexy/m/index.html</a></li><li><a href=\"https://vux.li/\" target=\"_blank\" rel=\"external\">https://vux.li/</a></li><li><a href=\"https://mobile.ant.design/index-cn\" target=\"_blank\" rel=\"external\">https://mobile.ant.design/index-cn</a></li></ul><p><a href=\"https://juejin.im/post/598a701b6fb9a03c5b04bb14\" target=\"_blank\" rel=\"external\">JavaScript 专题之如何判断两个对象相等</a></p><blockquote><p>测试</p></blockquote><p><a href=\"http://www.jianshu.com/p/6d778d701653\" target=\"_blank\" rel=\"external\">软件测试常见问题</a></p><p><a href=\"http://www.jianshu.com/p/d3b1cb01a3ac\" target=\"_blank\" rel=\"external\">测试基本理论知识</a></p><blockquote><p>后端</p></blockquote><p><a href=\"https://laravel-china.org/articles/5581/optimizing-laravel-model-queries-with-preload\" target=\"_blank\" rel=\"external\">使用预加载优化 Laravel Model 查询</a></p><p><a href=\"https://laravel-china.org/articles/5488/from-today-on-be-a-person-who-uses-the-view-exists-method\" target=\"_blank\" rel=\"external\">从今天起，做一个会使用 view ()-&gt;exists 方法的人</a></p><blockquote><p>安卓</p></blockquote><p><a href=\"http://www.jianshu.com/p/654dac931667\" target=\"_blank\" rel=\"external\">快捷的去掉recyclerview的刷新闪烁动画</a></p><blockquote><p>产品</p></blockquote><p><a href=\"http://www.woshipm.com/rp/733698.html\" target=\"_blank\" rel=\"external\">如何快速搭建系统原型（一）</a></p><blockquote><p>书籍</p></blockquote><p>《周鸿祎自述：我的互联网方法论》</p><blockquote><p>其他</p></blockquote><p><a href=\"https://zhuanlan.zhihu.com/p/23030429?utm_medium=social&amp;utm_source=wechat_session\" target=\"_blank\" rel=\"external\">天天写「业务代码」，如何成为「技术大牛」？</a></p><p><a href=\"http://www.4hou.com/info/news/7104.html\" target=\"_blank\" rel=\"external\">京东私自上传用户wifi密码</a></p>","site":{"data":{}},"excerpt":"","more":"<blockquote><p>博客推荐</p></blockquote><p><a href=\"https://tech.meituan.com/\" target=\"_blank\" rel=\"external\">美团点评技术博客</a>(综合)</p><p><a href=\"https://zhuanlan.zhihu.com/ElemeFE\" target=\"_blank\" rel=\"external\">饿了么前端</a>(前端)</p><p><a href=\"http://qa.blog.163.com/\" target=\"_blank\" rel=\"external\">网易QA Team</a>(测试)</p><p><a href=\"http://www.hishenyi.com/\" target=\"_blank\" rel=\"external\">沈逸的个人站点</a></p><p><a href=\"http://rango.swoole.com/\" target=\"_blank\" rel=\"external\">韩天峰(Rango)的博客</a></p><p><a href=\"http://www.bo56.com/\" target=\"_blank\" rel=\"external\">博学无忧-海龙的博客</a></p><blockquote><p>设计</p></blockquote><p><a href=\"http://mp.weixin.qq.com/s/DMfYl4gQUfQFX7TU_FRFTA\" target=\"_blank\" rel=\"external\">为什么我做的设计总是不耐看</a></p><p><a href=\"http://mp.weixin.qq.com/s/VVhtQqZ8pdmrFI7jGUYz7A\" target=\"_blank\" rel=\"external\">玩转渐变色</a></p><p><a href=\"http://www.niudana.com/\" target=\"_blank\" rel=\"external\">牛大拿设计师导航</a></p><p><a href=\"http://www.woshipm.com/pd/728039.html\" target=\"_blank\" rel=\"external\">做有温度的设计：设计有故事感的标签图标</a></p><blockquote><p>前端</p></blockquote><p>移动端UI组件</p><ul><li><a href=\"http://zui.sexy/m/index.html\" target=\"_blank\" rel=\"external\">http://zui.sexy/m/index.html</a></li><li><a href=\"https://vux.li/\" target=\"_blank\" rel=\"external\">https://vux.li/</a></li><li><a href=\"https://mobile.ant.design/index-cn\" target=\"_blank\" rel=\"external\">https://mobile.ant.design/index-cn</a></li></ul><p><a href=\"https://juejin.im/post/598a701b6fb9a03c5b04bb14\" target=\"_blank\" rel=\"external\">JavaScript 专题之如何判断两个对象相等</a></p><blockquote><p>测试</p></blockquote><p><a href=\"http://www.jianshu.com/p/6d778d701653\" target=\"_blank\" rel=\"external\">软件测试常见问题</a></p><p><a href=\"http://www.jianshu.com/p/d3b1cb01a3ac\" target=\"_blank\" rel=\"external\">测试基本理论知识</a></p><blockquote><p>后端</p></blockquote><p><a href=\"https://laravel-china.org/articles/5581/optimizing-laravel-model-queries-with-preload\" target=\"_blank\" rel=\"external\">使用预加载优化 Laravel Model 查询</a></p><p><a href=\"https://laravel-china.org/articles/5488/from-today-on-be-a-person-who-uses-the-view-exists-method\" target=\"_blank\" rel=\"external\">从今天起，做一个会使用 view ()-&gt;exists 方法的人</a></p><blockquote><p>安卓</p></blockquote><p><a href=\"http://www.jianshu.com/p/654dac931667\" target=\"_blank\" rel=\"external\">快捷的去掉recyclerview的刷新闪烁动画</a></p><blockquote><p>产品</p></blockquote><p><a href=\"http://www.woshipm.com/rp/733698.html\" target=\"_blank\" rel=\"external\">如何快速搭建系统原型（一）</a></p><blockquote><p>书籍</p></blockquote><p>《周鸿祎自述：我的互联网方法论》</p><blockquote><p>其他</p></blockquote><p><a href=\"https://zhuanlan.zhihu.com/p/23030429?utm_medium=social&amp;utm_source=wechat_session\" target=\"_blank\" rel=\"external\">天天写「业务代码」，如何成为「技术大牛」？</a></p><p><a href=\"http://www.4hou.com/info/news/7104.html\" target=\"_blank\" rel=\"external\">京东私自上传用户wifi密码</a></p>"},{"title":"美妆心得技术周刊2017-08-20","date":"2017-08-19T16:00:00.000Z","_content":"\n> 产品及其它\n\n[阿里系创业人“团灭”？淘宝城2.5公里外是创业\"坟场\"](https://m.huxiu.com/article/210310.html)\n\n[Stay hungry. Stay foolish.最好的汉语翻译是什么？](https://www.zhihu.com/question/19557797 )\n\n[完美的一天：与自己讨厌的事情这样“较劲”](http://36kr.com/p/5088436.html)\n\n[继“试妆魔镜”后，AR公司ModiFace又推新功能：分析皮肤状况推荐护肤品](http://36kr.com/p/5088837.html)\n\n> 安卓\n\n [android studio 调试技巧](http://www.cnblogs.com/gaoteng/p/5711314.html)\n\n> IOS\n\n[iOS App 的启动优化](http://www.cocoachina.com/ios/20170731/20071.html)\n\n[iOS代码架构，创建一个易复用的组件](https://juejin.im/post/598034ca6fb9a03c493b55a2)\n\n\n> 前端\n\n [webpack进阶——DllPlugin优化打包性能（基于vue-cli](http://www.jianshu.com/p/9c7815024bf5)\n\n [What the f*ck JavaScript?](https://github.com/denysdovhan/wtfjs/blob/4c42f77c4b3bcfb7b3ff965bc43a346eecfc3e2f/README-zh-cn.md)\n\n [Learn Regex](https://github.com/zeeshanu/learn-regex)\n\n\n> 设计\n\n[浅谈色彩功能：主色、副色、点缀色](http://mp.weixin.qq.com/s/dqkzc6fkgMwo0baxRS8kmQ)\n\n> 测试\n\n[小麦转转016--带有支付功能的产品如何测试](http://www.jianshu.com/p/da7b7b67c8e4)\n\n[支付流程测试点](http://www.51testing.com/html/90/140390-227458.html)","source":"_posts/weekly-2017-08-20.md","raw":"---\ntitle: 美妆心得技术周刊2017-08-20\ndate:  2017-08-20\ntags:\n- weekly\n---\n\n> 产品及其它\n\n[阿里系创业人“团灭”？淘宝城2.5公里外是创业\"坟场\"](https://m.huxiu.com/article/210310.html)\n\n[Stay hungry. Stay foolish.最好的汉语翻译是什么？](https://www.zhihu.com/question/19557797 )\n\n[完美的一天：与自己讨厌的事情这样“较劲”](http://36kr.com/p/5088436.html)\n\n[继“试妆魔镜”后，AR公司ModiFace又推新功能：分析皮肤状况推荐护肤品](http://36kr.com/p/5088837.html)\n\n> 安卓\n\n [android studio 调试技巧](http://www.cnblogs.com/gaoteng/p/5711314.html)\n\n> IOS\n\n[iOS App 的启动优化](http://www.cocoachina.com/ios/20170731/20071.html)\n\n[iOS代码架构，创建一个易复用的组件](https://juejin.im/post/598034ca6fb9a03c493b55a2)\n\n\n> 前端\n\n [webpack进阶——DllPlugin优化打包性能（基于vue-cli](http://www.jianshu.com/p/9c7815024bf5)\n\n [What the f*ck JavaScript?](https://github.com/denysdovhan/wtfjs/blob/4c42f77c4b3bcfb7b3ff965bc43a346eecfc3e2f/README-zh-cn.md)\n\n [Learn Regex](https://github.com/zeeshanu/learn-regex)\n\n\n> 设计\n\n[浅谈色彩功能：主色、副色、点缀色](http://mp.weixin.qq.com/s/dqkzc6fkgMwo0baxRS8kmQ)\n\n> 测试\n\n[小麦转转016--带有支付功能的产品如何测试](http://www.jianshu.com/p/da7b7b67c8e4)\n\n[支付流程测试点](http://www.51testing.com/html/90/140390-227458.html)","slug":"weekly-2017-08-20","published":1,"updated":"2017-09-19T13:59:32.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9cutip9001rds9l4eyzmyvu","content":"<blockquote><p>产品及其它</p></blockquote><p><a href=\"https://m.huxiu.com/article/210310.html\" target=\"_blank\" rel=\"external\">阿里系创业人“团灭”？淘宝城2.5公里外是创业”坟场”</a></p><p><a href=\"https://www.zhihu.com/question/19557797\" target=\"_blank\" rel=\"external\">Stay hungry. Stay foolish.最好的汉语翻译是什么？</a></p><p><a href=\"http://36kr.com/p/5088436.html\" target=\"_blank\" rel=\"external\">完美的一天：与自己讨厌的事情这样“较劲”</a></p><p><a href=\"http://36kr.com/p/5088837.html\" target=\"_blank\" rel=\"external\">继“试妆魔镜”后，AR公司ModiFace又推新功能：分析皮肤状况推荐护肤品</a></p><blockquote><p>安卓</p></blockquote><p><a href=\"http://www.cnblogs.com/gaoteng/p/5711314.html\" target=\"_blank\" rel=\"external\">android studio 调试技巧</a></p><blockquote><p>IOS</p></blockquote><p><a href=\"http://www.cocoachina.com/ios/20170731/20071.html\" target=\"_blank\" rel=\"external\">iOS App 的启动优化</a></p><p><a href=\"https://juejin.im/post/598034ca6fb9a03c493b55a2\" target=\"_blank\" rel=\"external\">iOS代码架构，创建一个易复用的组件</a></p><blockquote><p>前端</p></blockquote><p><a href=\"http://www.jianshu.com/p/9c7815024bf5\" target=\"_blank\" rel=\"external\">webpack进阶——DllPlugin优化打包性能（基于vue-cli</a></p><p><a href=\"https://github.com/denysdovhan/wtfjs/blob/4c42f77c4b3bcfb7b3ff965bc43a346eecfc3e2f/README-zh-cn.md\" target=\"_blank\" rel=\"external\">What the f*ck JavaScript?</a></p><p><a href=\"https://github.com/zeeshanu/learn-regex\" target=\"_blank\" rel=\"external\">Learn Regex</a></p><blockquote><p>设计</p></blockquote><p><a href=\"http://mp.weixin.qq.com/s/dqkzc6fkgMwo0baxRS8kmQ\" target=\"_blank\" rel=\"external\">浅谈色彩功能：主色、副色、点缀色</a></p><blockquote><p>测试</p></blockquote><p><a href=\"http://www.jianshu.com/p/da7b7b67c8e4\" target=\"_blank\" rel=\"external\">小麦转转016–带有支付功能的产品如何测试</a></p><p><a href=\"http://www.51testing.com/html/90/140390-227458.html\" target=\"_blank\" rel=\"external\">支付流程测试点</a></p>","site":{"data":{}},"excerpt":"","more":"<blockquote><p>产品及其它</p></blockquote><p><a href=\"https://m.huxiu.com/article/210310.html\" target=\"_blank\" rel=\"external\">阿里系创业人“团灭”？淘宝城2.5公里外是创业”坟场”</a></p><p><a href=\"https://www.zhihu.com/question/19557797\" target=\"_blank\" rel=\"external\">Stay hungry. Stay foolish.最好的汉语翻译是什么？</a></p><p><a href=\"http://36kr.com/p/5088436.html\" target=\"_blank\" rel=\"external\">完美的一天：与自己讨厌的事情这样“较劲”</a></p><p><a href=\"http://36kr.com/p/5088837.html\" target=\"_blank\" rel=\"external\">继“试妆魔镜”后，AR公司ModiFace又推新功能：分析皮肤状况推荐护肤品</a></p><blockquote><p>安卓</p></blockquote><p><a href=\"http://www.cnblogs.com/gaoteng/p/5711314.html\" target=\"_blank\" rel=\"external\">android studio 调试技巧</a></p><blockquote><p>IOS</p></blockquote><p><a href=\"http://www.cocoachina.com/ios/20170731/20071.html\" target=\"_blank\" rel=\"external\">iOS App 的启动优化</a></p><p><a href=\"https://juejin.im/post/598034ca6fb9a03c493b55a2\" target=\"_blank\" rel=\"external\">iOS代码架构，创建一个易复用的组件</a></p><blockquote><p>前端</p></blockquote><p><a href=\"http://www.jianshu.com/p/9c7815024bf5\" target=\"_blank\" rel=\"external\">webpack进阶——DllPlugin优化打包性能（基于vue-cli</a></p><p><a href=\"https://github.com/denysdovhan/wtfjs/blob/4c42f77c4b3bcfb7b3ff965bc43a346eecfc3e2f/README-zh-cn.md\" target=\"_blank\" rel=\"external\">What the f*ck JavaScript?</a></p><p><a href=\"https://github.com/zeeshanu/learn-regex\" target=\"_blank\" rel=\"external\">Learn Regex</a></p><blockquote><p>设计</p></blockquote><p><a href=\"http://mp.weixin.qq.com/s/dqkzc6fkgMwo0baxRS8kmQ\" target=\"_blank\" rel=\"external\">浅谈色彩功能：主色、副色、点缀色</a></p><blockquote><p>测试</p></blockquote><p><a href=\"http://www.jianshu.com/p/da7b7b67c8e4\" target=\"_blank\" rel=\"external\">小麦转转016–带有支付功能的产品如何测试</a></p><p><a href=\"http://www.51testing.com/html/90/140390-227458.html\" target=\"_blank\" rel=\"external\">支付流程测试点</a></p>"},{"title":"美妆心得技术周刊2017-09-30","date":"2017-09-30T07:16:45.000Z","_content":"\n> 安卓\n\n网易严选 App 感受 Weex 开发 https://mp.weixin.qq.com/s/uH1vaNCaVlyhq0x4IYSQIg\n\nVegaLayoutManager https://github.com/xmuSistone/VegaLayoutManagerc\n\nandroid 崩溃手动处理 http://www.jianshu.com/p/c75192c77e28\n\nAndroid 详细分析AppBarLayout的五种ScrollFlags http://www.jianshu.com/p/7caa5f4f49bd\n\n> IOS\n\nXcode 9的一些新变化http://www.cocoachina.com/ios/20170922/20626.html\n\niOS开发，为你的应用兼容iPhone Xhttp://www.cocoachina.com/ios/20170920/20608.html\n\nios11更新了，给你100＋个ios11使用技巧    http://36kr.com/p/5094158.html\n\n> 前端\n\n关于nodejs调试 http://i5ting.github.io/node-debug-tutorial/\n\n给 Web 开发人员推荐的文档生成工具 https://juejin.im/entry/59c47ad7f265da065e323334\n\nfacebook修改开源协议风波 https://juejin.im/post/59c58b846fb9a00a3f24eafa\n\nJavaScript 也来挑战ACM http://blog.gfdsa.net/2014/05/18/nodejs/jsforoj/\n\n有没有可以用javascript做类似ACM算法题的平台或渠道，最好是国内的？https://www.zhihu.com/question/41108995\n\nTypeScript体系调研报告 https://juejin.im/post/59c46bc86fb9a00a4636f939\n\n\n> 后台\n\n\n> 设计\n\n设计师要懂的印刷知识：http://mp.weixin.qq.com/s/aROrVPWLsBzmyWMdwb6Vlw\n\n90%的设计师没注意过的细节，你了解嘛？：http://mp.weixin.qq.com/s/KiZEcLTBXC_LFJ32YBbOHw\n\n> 工具和资源\n\n验证码识别Api。\n- 京东万象 https://wx.jcloud.com/market/datas/18/11701\n- 聚合数据 https://www.juhe.cn/docs/api/id/60\n- 开源项目 Sample\n- https://github.com/ypwhs/captcha_break\n- https://github.com/ladingwu/identfying_code_recognize\n\nsublime使用技巧 https://www.zhihu.com/question/24896283\n\nhttps://github.com/pandao/editor.md\n\ngoflyway go写的http隧道代理服务 https://github.com/coyove/goflyway\n\n\n> 产品及其他\n\n提升顾客忠诚度：除了改进产品，其实还有捷径可走：http://www.jianshu.com/p/8285c2ad57ae\n\n如何把一件事讲得言简意赅，语出惊人，少即是多：http://www.jianshu.com/p/09f4c707e95c?utm_campaign=maleskine&utm_content=note&utm_medium=mobile_all_hots&utm_source=recommendation\n\n3个方法，你也能写出”共鸣文案“  http://www.woshipm.com/operate/796468.html\n\n\n**本周刊由团队成员推荐整理而成，内容来自互联网**","source":"_posts/weekly-2017-09-30.md","raw":"---\ntitle: 美妆心得技术周刊2017-09-30\ntags:\n  - weekly\ndate: 2017-09-30 15:16:45\n---\n\n> 安卓\n\n网易严选 App 感受 Weex 开发 https://mp.weixin.qq.com/s/uH1vaNCaVlyhq0x4IYSQIg\n\nVegaLayoutManager https://github.com/xmuSistone/VegaLayoutManagerc\n\nandroid 崩溃手动处理 http://www.jianshu.com/p/c75192c77e28\n\nAndroid 详细分析AppBarLayout的五种ScrollFlags http://www.jianshu.com/p/7caa5f4f49bd\n\n> IOS\n\nXcode 9的一些新变化http://www.cocoachina.com/ios/20170922/20626.html\n\niOS开发，为你的应用兼容iPhone Xhttp://www.cocoachina.com/ios/20170920/20608.html\n\nios11更新了，给你100＋个ios11使用技巧    http://36kr.com/p/5094158.html\n\n> 前端\n\n关于nodejs调试 http://i5ting.github.io/node-debug-tutorial/\n\n给 Web 开发人员推荐的文档生成工具 https://juejin.im/entry/59c47ad7f265da065e323334\n\nfacebook修改开源协议风波 https://juejin.im/post/59c58b846fb9a00a3f24eafa\n\nJavaScript 也来挑战ACM http://blog.gfdsa.net/2014/05/18/nodejs/jsforoj/\n\n有没有可以用javascript做类似ACM算法题的平台或渠道，最好是国内的？https://www.zhihu.com/question/41108995\n\nTypeScript体系调研报告 https://juejin.im/post/59c46bc86fb9a00a4636f939\n\n\n> 后台\n\n\n> 设计\n\n设计师要懂的印刷知识：http://mp.weixin.qq.com/s/aROrVPWLsBzmyWMdwb6Vlw\n\n90%的设计师没注意过的细节，你了解嘛？：http://mp.weixin.qq.com/s/KiZEcLTBXC_LFJ32YBbOHw\n\n> 工具和资源\n\n验证码识别Api。\n- 京东万象 https://wx.jcloud.com/market/datas/18/11701\n- 聚合数据 https://www.juhe.cn/docs/api/id/60\n- 开源项目 Sample\n- https://github.com/ypwhs/captcha_break\n- https://github.com/ladingwu/identfying_code_recognize\n\nsublime使用技巧 https://www.zhihu.com/question/24896283\n\nhttps://github.com/pandao/editor.md\n\ngoflyway go写的http隧道代理服务 https://github.com/coyove/goflyway\n\n\n> 产品及其他\n\n提升顾客忠诚度：除了改进产品，其实还有捷径可走：http://www.jianshu.com/p/8285c2ad57ae\n\n如何把一件事讲得言简意赅，语出惊人，少即是多：http://www.jianshu.com/p/09f4c707e95c?utm_campaign=maleskine&utm_content=note&utm_medium=mobile_all_hots&utm_source=recommendation\n\n3个方法，你也能写出”共鸣文案“  http://www.woshipm.com/operate/796468.html\n\n\n**本周刊由团队成员推荐整理而成，内容来自互联网**","slug":"weekly-2017-09-30","published":1,"updated":"2017-10-09T07:24:45.064Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9cutipb001tds9l731qpc7k","content":"<blockquote><p>安卓</p></blockquote><p>网易严选 App 感受 Weex 开发 <a href=\"https://mp.weixin.qq.com/s/uH1vaNCaVlyhq0x4IYSQIg\" target=\"_blank\" rel=\"external\">https://mp.weixin.qq.com/s/uH1vaNCaVlyhq0x4IYSQIg</a></p><p>VegaLayoutManager <a href=\"https://github.com/xmuSistone/VegaLayoutManagerc\" target=\"_blank\" rel=\"external\">https://github.com/xmuSistone/VegaLayoutManagerc</a></p><p>android 崩溃手动处理 <a href=\"http://www.jianshu.com/p/c75192c77e28\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/c75192c77e28</a></p><p>Android 详细分析AppBarLayout的五种ScrollFlags <a href=\"http://www.jianshu.com/p/7caa5f4f49bd\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/7caa5f4f49bd</a></p><blockquote><p>IOS</p></blockquote><p>Xcode 9的一些新变化<a href=\"http://www.cocoachina.com/ios/20170922/20626.html\" target=\"_blank\" rel=\"external\">http://www.cocoachina.com/ios/20170922/20626.html</a></p><p>iOS开发，为你的应用兼容iPhone X<a href=\"http://www.cocoachina.com/ios/20170920/20608.html\" target=\"_blank\" rel=\"external\">http://www.cocoachina.com/ios/20170920/20608.html</a></p><p>ios11更新了，给你100＋个ios11使用技巧 <a href=\"http://36kr.com/p/5094158.html\" target=\"_blank\" rel=\"external\">http://36kr.com/p/5094158.html</a></p><blockquote><p>前端</p></blockquote><p>关于nodejs调试 <a href=\"http://i5ting.github.io/node-debug-tutorial/\" target=\"_blank\" rel=\"external\">http://i5ting.github.io/node-debug-tutorial/</a></p><p>给 Web 开发人员推荐的文档生成工具 <a href=\"https://juejin.im/entry/59c47ad7f265da065e323334\" target=\"_blank\" rel=\"external\">https://juejin.im/entry/59c47ad7f265da065e323334</a></p><p>facebook修改开源协议风波 <a href=\"https://juejin.im/post/59c58b846fb9a00a3f24eafa\" target=\"_blank\" rel=\"external\">https://juejin.im/post/59c58b846fb9a00a3f24eafa</a></p><p>JavaScript 也来挑战ACM <a href=\"http://blog.gfdsa.net/2014/05/18/nodejs/jsforoj/\" target=\"_blank\" rel=\"external\">http://blog.gfdsa.net/2014/05/18/nodejs/jsforoj/</a></p><p>有没有可以用javascript做类似ACM算法题的平台或渠道，最好是国内的？<a href=\"https://www.zhihu.com/question/41108995\" target=\"_blank\" rel=\"external\">https://www.zhihu.com/question/41108995</a></p><p>TypeScript体系调研报告 <a href=\"https://juejin.im/post/59c46bc86fb9a00a4636f939\" target=\"_blank\" rel=\"external\">https://juejin.im/post/59c46bc86fb9a00a4636f939</a></p><blockquote><p>后台</p><p>设计</p></blockquote><p>设计师要懂的印刷知识：<a href=\"http://mp.weixin.qq.com/s/aROrVPWLsBzmyWMdwb6Vlw\" target=\"_blank\" rel=\"external\">http://mp.weixin.qq.com/s/aROrVPWLsBzmyWMdwb6Vlw</a></p><p>90%的设计师没注意过的细节，你了解嘛？：<a href=\"http://mp.weixin.qq.com/s/KiZEcLTBXC_LFJ32YBbOHw\" target=\"_blank\" rel=\"external\">http://mp.weixin.qq.com/s/KiZEcLTBXC_LFJ32YBbOHw</a></p><blockquote><p>工具和资源</p></blockquote><p>验证码识别Api。</p><ul><li>京东万象 <a href=\"https://wx.jcloud.com/market/datas/18/11701\" target=\"_blank\" rel=\"external\">https://wx.jcloud.com/market/datas/18/11701</a></li><li>聚合数据 <a href=\"https://www.juhe.cn/docs/api/id/60\" target=\"_blank\" rel=\"external\">https://www.juhe.cn/docs/api/id/60</a></li><li>开源项目 Sample</li><li><a href=\"https://github.com/ypwhs/captcha_break\" target=\"_blank\" rel=\"external\">https://github.com/ypwhs/captcha_break</a></li><li><a href=\"https://github.com/ladingwu/identfying_code_recognize\" target=\"_blank\" rel=\"external\">https://github.com/ladingwu/identfying_code_recognize</a></li></ul><p>sublime使用技巧 <a href=\"https://www.zhihu.com/question/24896283\" target=\"_blank\" rel=\"external\">https://www.zhihu.com/question/24896283</a></p><p><a href=\"https://github.com/pandao/editor.md\" target=\"_blank\" rel=\"external\">https://github.com/pandao/editor.md</a></p><p>goflyway go写的http隧道代理服务 <a href=\"https://github.com/coyove/goflyway\" target=\"_blank\" rel=\"external\">https://github.com/coyove/goflyway</a></p><blockquote><p>产品及其他</p></blockquote><p>提升顾客忠诚度：除了改进产品，其实还有捷径可走：<a href=\"http://www.jianshu.com/p/8285c2ad57ae\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/8285c2ad57ae</a></p><p>如何把一件事讲得言简意赅，语出惊人，少即是多：<a href=\"http://www.jianshu.com/p/09f4c707e95c?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=mobile_all_hots&amp;utm_source=recommendation\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/09f4c707e95c?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=mobile_all_hots&amp;utm_source=recommendation</a></p><p>3个方法，你也能写出”共鸣文案“ <a href=\"http://www.woshipm.com/operate/796468.html\" target=\"_blank\" rel=\"external\">http://www.woshipm.com/operate/796468.html</a></p><p><strong>本周刊由团队成员推荐整理而成，内容来自互联网</strong></p>","site":{"data":{}},"excerpt":"","more":"<blockquote><p>安卓</p></blockquote><p>网易严选 App 感受 Weex 开发 <a href=\"https://mp.weixin.qq.com/s/uH1vaNCaVlyhq0x4IYSQIg\" target=\"_blank\" rel=\"external\">https://mp.weixin.qq.com/s/uH1vaNCaVlyhq0x4IYSQIg</a></p><p>VegaLayoutManager <a href=\"https://github.com/xmuSistone/VegaLayoutManagerc\" target=\"_blank\" rel=\"external\">https://github.com/xmuSistone/VegaLayoutManagerc</a></p><p>android 崩溃手动处理 <a href=\"http://www.jianshu.com/p/c75192c77e28\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/c75192c77e28</a></p><p>Android 详细分析AppBarLayout的五种ScrollFlags <a href=\"http://www.jianshu.com/p/7caa5f4f49bd\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/7caa5f4f49bd</a></p><blockquote><p>IOS</p></blockquote><p>Xcode 9的一些新变化<a href=\"http://www.cocoachina.com/ios/20170922/20626.html\" target=\"_blank\" rel=\"external\">http://www.cocoachina.com/ios/20170922/20626.html</a></p><p>iOS开发，为你的应用兼容iPhone X<a href=\"http://www.cocoachina.com/ios/20170920/20608.html\" target=\"_blank\" rel=\"external\">http://www.cocoachina.com/ios/20170920/20608.html</a></p><p>ios11更新了，给你100＋个ios11使用技巧 <a href=\"http://36kr.com/p/5094158.html\" target=\"_blank\" rel=\"external\">http://36kr.com/p/5094158.html</a></p><blockquote><p>前端</p></blockquote><p>关于nodejs调试 <a href=\"http://i5ting.github.io/node-debug-tutorial/\" target=\"_blank\" rel=\"external\">http://i5ting.github.io/node-debug-tutorial/</a></p><p>给 Web 开发人员推荐的文档生成工具 <a href=\"https://juejin.im/entry/59c47ad7f265da065e323334\" target=\"_blank\" rel=\"external\">https://juejin.im/entry/59c47ad7f265da065e323334</a></p><p>facebook修改开源协议风波 <a href=\"https://juejin.im/post/59c58b846fb9a00a3f24eafa\" target=\"_blank\" rel=\"external\">https://juejin.im/post/59c58b846fb9a00a3f24eafa</a></p><p>JavaScript 也来挑战ACM <a href=\"http://blog.gfdsa.net/2014/05/18/nodejs/jsforoj/\" target=\"_blank\" rel=\"external\">http://blog.gfdsa.net/2014/05/18/nodejs/jsforoj/</a></p><p>有没有可以用javascript做类似ACM算法题的平台或渠道，最好是国内的？<a href=\"https://www.zhihu.com/question/41108995\" target=\"_blank\" rel=\"external\">https://www.zhihu.com/question/41108995</a></p><p>TypeScript体系调研报告 <a href=\"https://juejin.im/post/59c46bc86fb9a00a4636f939\" target=\"_blank\" rel=\"external\">https://juejin.im/post/59c46bc86fb9a00a4636f939</a></p><blockquote><p>后台</p><p>设计</p></blockquote><p>设计师要懂的印刷知识：<a href=\"http://mp.weixin.qq.com/s/aROrVPWLsBzmyWMdwb6Vlw\" target=\"_blank\" rel=\"external\">http://mp.weixin.qq.com/s/aROrVPWLsBzmyWMdwb6Vlw</a></p><p>90%的设计师没注意过的细节，你了解嘛？：<a href=\"http://mp.weixin.qq.com/s/KiZEcLTBXC_LFJ32YBbOHw\" target=\"_blank\" rel=\"external\">http://mp.weixin.qq.com/s/KiZEcLTBXC_LFJ32YBbOHw</a></p><blockquote><p>工具和资源</p></blockquote><p>验证码识别Api。</p><ul><li>京东万象 <a href=\"https://wx.jcloud.com/market/datas/18/11701\" target=\"_blank\" rel=\"external\">https://wx.jcloud.com/market/datas/18/11701</a></li><li>聚合数据 <a href=\"https://www.juhe.cn/docs/api/id/60\" target=\"_blank\" rel=\"external\">https://www.juhe.cn/docs/api/id/60</a></li><li>开源项目 Sample</li><li><a href=\"https://github.com/ypwhs/captcha_break\" target=\"_blank\" rel=\"external\">https://github.com/ypwhs/captcha_break</a></li><li><a href=\"https://github.com/ladingwu/identfying_code_recognize\" target=\"_blank\" rel=\"external\">https://github.com/ladingwu/identfying_code_recognize</a></li></ul><p>sublime使用技巧 <a href=\"https://www.zhihu.com/question/24896283\" target=\"_blank\" rel=\"external\">https://www.zhihu.com/question/24896283</a></p><p><a href=\"https://github.com/pandao/editor.md\" target=\"_blank\" rel=\"external\">https://github.com/pandao/editor.md</a></p><p>goflyway go写的http隧道代理服务 <a href=\"https://github.com/coyove/goflyway\" target=\"_blank\" rel=\"external\">https://github.com/coyove/goflyway</a></p><blockquote><p>产品及其他</p></blockquote><p>提升顾客忠诚度：除了改进产品，其实还有捷径可走：<a href=\"http://www.jianshu.com/p/8285c2ad57ae\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/8285c2ad57ae</a></p><p>如何把一件事讲得言简意赅，语出惊人，少即是多：<a href=\"http://www.jianshu.com/p/09f4c707e95c?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=mobile_all_hots&amp;utm_source=recommendation\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/09f4c707e95c?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=mobile_all_hots&amp;utm_source=recommendation</a></p><p>3个方法，你也能写出”共鸣文案“ <a href=\"http://www.woshipm.com/operate/796468.html\" target=\"_blank\" rel=\"external\">http://www.woshipm.com/operate/796468.html</a></p><p><strong>本周刊由团队成员推荐整理而成，内容来自互联网</strong></p>"},{"title":"美妆心得技术周刊2017-09-17","date":"2017-09-17T07:01:09.000Z","_content":"\n> 安卓\n\n自定义AlertDialog在android-7.0上距离屏幕边界margin无法消除问题 http://blog.csdn.net/kuixiaoba/article/details/70579665\n\nViewStub学习http://rkhcy.github.io/2017/09/12/ViewStub%E5%AD%A6%E4%B9%A0/\n\nAndroid截屏与WebView长图分享经验总结  http://www.jianshu.com/p/8b1bcbbae4e7\n>Android系统并没有截屏事件通知。通过监听系统相册资源变换获取截屏图片，匹配图片名称关键字，来获得截屏事件，但会有明显延迟。\n\nandroid中的bitmap http://www.jianshu.com/p/98c88f9ceafa\n\n> IOS\n\n简书App适配iOS 11http://www.cocoachina.com/ios/20170915/20580.html\n\n对于iOS开发，人工智能意味着什么？ http://www.jianshu.com/p/83b99f34d67c\n\n> 前端\n\n> 收集整理Vue和vue-router相关生命周期介绍很不错的文章，想对Vue有深入了解的伙伴，推荐阅读。完全熟悉生命周期后对写组件，特别是组件的扩展性也很大的帮助\n\n- Vue2.0 探索之路——生命周期和钩子函数的一些理解 https://segmentfault.com/a/1190000008010666\n- Vue.js 生命周期和route的生命周期讲解 http://www.jianshu.com/p/e9f884b6ba6c\n- keep-alive的深入理解与使用(配合router-view缓存整个路由页面) https://segmentfault.com/a/1190000010546663\n- Vue学习：生命周期 http://www.charlycheng.xyz/2016/12/13/Vue%E5%AD%A6%E4%B9%A0%EF%BC%9A%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/\n- vue生命周期探究（二）https://segmentfault.com/a/1190000008923105\n- Vue2.0 探索之路——生命周期和钩子函数的一些理解 https://segmentfault.com/a/1190000008010666\n\n\n> 设计\n\n一个设计师的自我反思：http://mp.weixin.qq.com/s/ap1SlxaZg5OpvBglLLzm4Q\n\n90%的设计师没注意过的细节：http://mp.weixin.qq.com/s/KiZEcLTBXC_LFJ32YBbOHw\n\n\n> 工具和资源\n\n推荐一个配色 （A dark theme for Atom, Alfred, Emacs, Highlight.js, Hyper, iTerm, JetBrains, Pygments, Slack, Sublime Text, TextMate, Terminal.app, Vim, Xcode, Zsh and many more.）\nhttps://draculatheme.com/\n\n批量修改文件名命令rename\nrename命令，brew install rename, 可使用正则进行文件名批量修改\n简单的使用举例：http://www.cnblogs.com/raomengyang/p/6038561.html\n\nWeb 开发者需要知道的 12 个终端命令 https://www.oschina.net/translate/12-terminal-commands-every-web-developer-should-know?lang=chs&page=1#\n\n12个命令有部分用过，感觉还有其他一些命令也很好用，比如cat、cp、mv、rm。\n\n附简单bash命令和语法 https://github.com/OMGZui/bash-step-to-step\n\nAwesome Mac 收录了许多好用的mac应用程序 https://github.com/jaywcjlove/awesome-mac/blob/master/README-zh.md\n\n听说atom出了atom-ide，然后就翻车了？ https://juejin.im/post/59b8f34a6fb9a00a5a31d7d5\n\n> 测试\n\n\n你不得不知道的流程规范@测试基本流程：http://mp.weixin.qq.com/s/GlVgxI7MQtFHB628E03wPA\n\n> 产品及其他\n\n只需一个中秋，京东企业购就能变身“独角兽”？ http://www.pmcaff.com/article/index/931508217006208?from=label&pmc_param%5Blabel_name%5D= [ps: 法定节假日 618年中大促 双十一 双十二，各种有的已有的节日或被创造出来的节日，需要一个故事来营造一个购物的氛围，激发用户的消费欲望，转化为app的活跃度。在保持核心理念不变的前提了，变着法的刺激用户,告诉用户我（app）很好玩诶。\n\n刚刚！比特币暴跌到18080元，13天暴跌44%！：https://bbs.feidee.com/thread-1308620-1-1.html\n\n引导好评弹窗该怎么玩？http://www.jianshu.com/p/91922e2b58fb  （喜马拉雅的弹窗加上萌图很讨喜）\n\nAxure RP 8 教程：基础设置  http://www.woshipm.com/rp/759235.html\n\n**本周刊由团队成员推荐整理而成，内容来自互联网**","source":"_posts/weekly-2017-09-17.md","raw":"---\ntitle: 美妆心得技术周刊2017-09-17\ntags:\n  - weekly\ndate: 2017-09-17 15:01:09\n---\n\n> 安卓\n\n自定义AlertDialog在android-7.0上距离屏幕边界margin无法消除问题 http://blog.csdn.net/kuixiaoba/article/details/70579665\n\nViewStub学习http://rkhcy.github.io/2017/09/12/ViewStub%E5%AD%A6%E4%B9%A0/\n\nAndroid截屏与WebView长图分享经验总结  http://www.jianshu.com/p/8b1bcbbae4e7\n>Android系统并没有截屏事件通知。通过监听系统相册资源变换获取截屏图片，匹配图片名称关键字，来获得截屏事件，但会有明显延迟。\n\nandroid中的bitmap http://www.jianshu.com/p/98c88f9ceafa\n\n> IOS\n\n简书App适配iOS 11http://www.cocoachina.com/ios/20170915/20580.html\n\n对于iOS开发，人工智能意味着什么？ http://www.jianshu.com/p/83b99f34d67c\n\n> 前端\n\n> 收集整理Vue和vue-router相关生命周期介绍很不错的文章，想对Vue有深入了解的伙伴，推荐阅读。完全熟悉生命周期后对写组件，特别是组件的扩展性也很大的帮助\n\n- Vue2.0 探索之路——生命周期和钩子函数的一些理解 https://segmentfault.com/a/1190000008010666\n- Vue.js 生命周期和route的生命周期讲解 http://www.jianshu.com/p/e9f884b6ba6c\n- keep-alive的深入理解与使用(配合router-view缓存整个路由页面) https://segmentfault.com/a/1190000010546663\n- Vue学习：生命周期 http://www.charlycheng.xyz/2016/12/13/Vue%E5%AD%A6%E4%B9%A0%EF%BC%9A%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/\n- vue生命周期探究（二）https://segmentfault.com/a/1190000008923105\n- Vue2.0 探索之路——生命周期和钩子函数的一些理解 https://segmentfault.com/a/1190000008010666\n\n\n> 设计\n\n一个设计师的自我反思：http://mp.weixin.qq.com/s/ap1SlxaZg5OpvBglLLzm4Q\n\n90%的设计师没注意过的细节：http://mp.weixin.qq.com/s/KiZEcLTBXC_LFJ32YBbOHw\n\n\n> 工具和资源\n\n推荐一个配色 （A dark theme for Atom, Alfred, Emacs, Highlight.js, Hyper, iTerm, JetBrains, Pygments, Slack, Sublime Text, TextMate, Terminal.app, Vim, Xcode, Zsh and many more.）\nhttps://draculatheme.com/\n\n批量修改文件名命令rename\nrename命令，brew install rename, 可使用正则进行文件名批量修改\n简单的使用举例：http://www.cnblogs.com/raomengyang/p/6038561.html\n\nWeb 开发者需要知道的 12 个终端命令 https://www.oschina.net/translate/12-terminal-commands-every-web-developer-should-know?lang=chs&page=1#\n\n12个命令有部分用过，感觉还有其他一些命令也很好用，比如cat、cp、mv、rm。\n\n附简单bash命令和语法 https://github.com/OMGZui/bash-step-to-step\n\nAwesome Mac 收录了许多好用的mac应用程序 https://github.com/jaywcjlove/awesome-mac/blob/master/README-zh.md\n\n听说atom出了atom-ide，然后就翻车了？ https://juejin.im/post/59b8f34a6fb9a00a5a31d7d5\n\n> 测试\n\n\n你不得不知道的流程规范@测试基本流程：http://mp.weixin.qq.com/s/GlVgxI7MQtFHB628E03wPA\n\n> 产品及其他\n\n只需一个中秋，京东企业购就能变身“独角兽”？ http://www.pmcaff.com/article/index/931508217006208?from=label&pmc_param%5Blabel_name%5D= [ps: 法定节假日 618年中大促 双十一 双十二，各种有的已有的节日或被创造出来的节日，需要一个故事来营造一个购物的氛围，激发用户的消费欲望，转化为app的活跃度。在保持核心理念不变的前提了，变着法的刺激用户,告诉用户我（app）很好玩诶。\n\n刚刚！比特币暴跌到18080元，13天暴跌44%！：https://bbs.feidee.com/thread-1308620-1-1.html\n\n引导好评弹窗该怎么玩？http://www.jianshu.com/p/91922e2b58fb  （喜马拉雅的弹窗加上萌图很讨喜）\n\nAxure RP 8 教程：基础设置  http://www.woshipm.com/rp/759235.html\n\n**本周刊由团队成员推荐整理而成，内容来自互联网**","slug":"weekly-2017-09-17","published":1,"updated":"2017-10-09T07:16:05.251Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9cutipd001vds9lojyb8gtr","content":"<blockquote><p>安卓</p></blockquote><p>自定义AlertDialog在android-7.0上距离屏幕边界margin无法消除问题 <a href=\"http://blog.csdn.net/kuixiaoba/article/details/70579665\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/kuixiaoba/article/details/70579665</a></p><p>ViewStub学习<a href=\"http://rkhcy.github.io/2017/09/12/ViewStub%E5%AD%A6%E4%B9%A0/\" target=\"_blank\" rel=\"external\">http://rkhcy.github.io/2017/09/12/ViewStub%E5%AD%A6%E4%B9%A0/</a></p><p>Android截屏与WebView长图分享经验总结 <a href=\"http://www.jianshu.com/p/8b1bcbbae4e7\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/8b1bcbbae4e7</a></p><blockquote><p>Android系统并没有截屏事件通知。通过监听系统相册资源变换获取截屏图片，匹配图片名称关键字，来获得截屏事件，但会有明显延迟。</p></blockquote><p>android中的bitmap <a href=\"http://www.jianshu.com/p/98c88f9ceafa\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/98c88f9ceafa</a></p><blockquote><p>IOS</p></blockquote><p>简书App适配iOS 11<a href=\"http://www.cocoachina.com/ios/20170915/20580.html\" target=\"_blank\" rel=\"external\">http://www.cocoachina.com/ios/20170915/20580.html</a></p><p>对于iOS开发，人工智能意味着什么？ <a href=\"http://www.jianshu.com/p/83b99f34d67c\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/83b99f34d67c</a></p><blockquote><p>前端</p><p>收集整理Vue和vue-router相关生命周期介绍很不错的文章，想对Vue有深入了解的伙伴，推荐阅读。完全熟悉生命周期后对写组件，特别是组件的扩展性也很大的帮助</p></blockquote><ul><li>Vue2.0 探索之路——生命周期和钩子函数的一些理解 <a href=\"https://segmentfault.com/a/1190000008010666\" target=\"_blank\" rel=\"external\">https://segmentfault.com/a/1190000008010666</a></li><li>Vue.js 生命周期和route的生命周期讲解 <a href=\"http://www.jianshu.com/p/e9f884b6ba6c\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/e9f884b6ba6c</a></li><li>keep-alive的深入理解与使用(配合router-view缓存整个路由页面) <a href=\"https://segmentfault.com/a/1190000010546663\" target=\"_blank\" rel=\"external\">https://segmentfault.com/a/1190000010546663</a></li><li>Vue学习：生命周期 <a href=\"http://www.charlycheng.xyz/2016/12/13/Vue%E5%AD%A6%E4%B9%A0%EF%BC%9A%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/\" target=\"_blank\" rel=\"external\">http://www.charlycheng.xyz/2016/12/13/Vue%E5%AD%A6%E4%B9%A0%EF%BC%9A%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/</a></li><li>vue生命周期探究（二）<a href=\"https://segmentfault.com/a/1190000008923105\" target=\"_blank\" rel=\"external\">https://segmentfault.com/a/1190000008923105</a></li><li>Vue2.0 探索之路——生命周期和钩子函数的一些理解 <a href=\"https://segmentfault.com/a/1190000008010666\" target=\"_blank\" rel=\"external\">https://segmentfault.com/a/1190000008010666</a></li></ul><blockquote><p>设计</p></blockquote><p>一个设计师的自我反思：<a href=\"http://mp.weixin.qq.com/s/ap1SlxaZg5OpvBglLLzm4Q\" target=\"_blank\" rel=\"external\">http://mp.weixin.qq.com/s/ap1SlxaZg5OpvBglLLzm4Q</a></p><p>90%的设计师没注意过的细节：<a href=\"http://mp.weixin.qq.com/s/KiZEcLTBXC_LFJ32YBbOHw\" target=\"_blank\" rel=\"external\">http://mp.weixin.qq.com/s/KiZEcLTBXC_LFJ32YBbOHw</a></p><blockquote><p>工具和资源</p></blockquote><p>推荐一个配色 （A dark theme for Atom, Alfred, Emacs, Highlight.js, Hyper, iTerm, JetBrains, Pygments, Slack, Sublime Text, TextMate, Terminal.app, Vim, Xcode, Zsh and many more.）<br><a href=\"https://draculatheme.com/\" target=\"_blank\" rel=\"external\">https://draculatheme.com/</a></p><p>批量修改文件名命令rename<br>rename命令，brew install rename, 可使用正则进行文件名批量修改<br>简单的使用举例：<a href=\"http://www.cnblogs.com/raomengyang/p/6038561.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/raomengyang/p/6038561.html</a></p><p>Web 开发者需要知道的 12 个终端命令 <a href=\"https://www.oschina.net/translate/12-terminal-commands-every-web-developer-should-know?lang=chs&amp;page=1#\" target=\"_blank\" rel=\"external\">https://www.oschina.net/translate/12-terminal-commands-every-web-developer-should-know?lang=chs&amp;page=1#</a></p><p>12个命令有部分用过，感觉还有其他一些命令也很好用，比如cat、cp、mv、rm。</p><p>附简单bash命令和语法 <a href=\"https://github.com/OMGZui/bash-step-to-step\" target=\"_blank\" rel=\"external\">https://github.com/OMGZui/bash-step-to-step</a></p><p>Awesome Mac 收录了许多好用的mac应用程序 <a href=\"https://github.com/jaywcjlove/awesome-mac/blob/master/README-zh.md\" target=\"_blank\" rel=\"external\">https://github.com/jaywcjlove/awesome-mac/blob/master/README-zh.md</a></p><p>听说atom出了atom-ide，然后就翻车了？ <a href=\"https://juejin.im/post/59b8f34a6fb9a00a5a31d7d5\" target=\"_blank\" rel=\"external\">https://juejin.im/post/59b8f34a6fb9a00a5a31d7d5</a></p><blockquote><p>测试</p></blockquote><p>你不得不知道的流程规范@测试基本流程：<a href=\"http://mp.weixin.qq.com/s/GlVgxI7MQtFHB628E03wPA\" target=\"_blank\" rel=\"external\">http://mp.weixin.qq.com/s/GlVgxI7MQtFHB628E03wPA</a></p><blockquote><p>产品及其他</p></blockquote><p>只需一个中秋，京东企业购就能变身“独角兽”？ <a href=\"http://www.pmcaff.com/article/index/931508217006208?from=label&amp;pmc_param%5Blabel_name%5D=\" target=\"_blank\" rel=\"external\">http://www.pmcaff.com/article/index/931508217006208?from=label&amp;pmc_param%5Blabel_name%5D=</a> [ps: 法定节假日 618年中大促 双十一 双十二，各种有的已有的节日或被创造出来的节日，需要一个故事来营造一个购物的氛围，激发用户的消费欲望，转化为app的活跃度。在保持核心理念不变的前提了，变着法的刺激用户,告诉用户我（app）很好玩诶。</p><p>刚刚！比特币暴跌到18080元，13天暴跌44%！：<a href=\"https://bbs.feidee.com/thread-1308620-1-1.html\" target=\"_blank\" rel=\"external\">https://bbs.feidee.com/thread-1308620-1-1.html</a></p><p>引导好评弹窗该怎么玩？<a href=\"http://www.jianshu.com/p/91922e2b58fb\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/91922e2b58fb</a> （喜马拉雅的弹窗加上萌图很讨喜）</p><p>Axure RP 8 教程：基础设置 <a href=\"http://www.woshipm.com/rp/759235.html\" target=\"_blank\" rel=\"external\">http://www.woshipm.com/rp/759235.html</a></p><p><strong>本周刊由团队成员推荐整理而成，内容来自互联网</strong></p>","site":{"data":{}},"excerpt":"","more":"<blockquote><p>安卓</p></blockquote><p>自定义AlertDialog在android-7.0上距离屏幕边界margin无法消除问题 <a href=\"http://blog.csdn.net/kuixiaoba/article/details/70579665\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/kuixiaoba/article/details/70579665</a></p><p>ViewStub学习<a href=\"http://rkhcy.github.io/2017/09/12/ViewStub%E5%AD%A6%E4%B9%A0/\" target=\"_blank\" rel=\"external\">http://rkhcy.github.io/2017/09/12/ViewStub%E5%AD%A6%E4%B9%A0/</a></p><p>Android截屏与WebView长图分享经验总结 <a href=\"http://www.jianshu.com/p/8b1bcbbae4e7\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/8b1bcbbae4e7</a></p><blockquote><p>Android系统并没有截屏事件通知。通过监听系统相册资源变换获取截屏图片，匹配图片名称关键字，来获得截屏事件，但会有明显延迟。</p></blockquote><p>android中的bitmap <a href=\"http://www.jianshu.com/p/98c88f9ceafa\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/98c88f9ceafa</a></p><blockquote><p>IOS</p></blockquote><p>简书App适配iOS 11<a href=\"http://www.cocoachina.com/ios/20170915/20580.html\" target=\"_blank\" rel=\"external\">http://www.cocoachina.com/ios/20170915/20580.html</a></p><p>对于iOS开发，人工智能意味着什么？ <a href=\"http://www.jianshu.com/p/83b99f34d67c\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/83b99f34d67c</a></p><blockquote><p>前端</p><p>收集整理Vue和vue-router相关生命周期介绍很不错的文章，想对Vue有深入了解的伙伴，推荐阅读。完全熟悉生命周期后对写组件，特别是组件的扩展性也很大的帮助</p></blockquote><ul><li>Vue2.0 探索之路——生命周期和钩子函数的一些理解 <a href=\"https://segmentfault.com/a/1190000008010666\" target=\"_blank\" rel=\"external\">https://segmentfault.com/a/1190000008010666</a></li><li>Vue.js 生命周期和route的生命周期讲解 <a href=\"http://www.jianshu.com/p/e9f884b6ba6c\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/e9f884b6ba6c</a></li><li>keep-alive的深入理解与使用(配合router-view缓存整个路由页面) <a href=\"https://segmentfault.com/a/1190000010546663\" target=\"_blank\" rel=\"external\">https://segmentfault.com/a/1190000010546663</a></li><li>Vue学习：生命周期 <a href=\"http://www.charlycheng.xyz/2016/12/13/Vue%E5%AD%A6%E4%B9%A0%EF%BC%9A%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/\" target=\"_blank\" rel=\"external\">http://www.charlycheng.xyz/2016/12/13/Vue%E5%AD%A6%E4%B9%A0%EF%BC%9A%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/</a></li><li>vue生命周期探究（二）<a href=\"https://segmentfault.com/a/1190000008923105\" target=\"_blank\" rel=\"external\">https://segmentfault.com/a/1190000008923105</a></li><li>Vue2.0 探索之路——生命周期和钩子函数的一些理解 <a href=\"https://segmentfault.com/a/1190000008010666\" target=\"_blank\" rel=\"external\">https://segmentfault.com/a/1190000008010666</a></li></ul><blockquote><p>设计</p></blockquote><p>一个设计师的自我反思：<a href=\"http://mp.weixin.qq.com/s/ap1SlxaZg5OpvBglLLzm4Q\" target=\"_blank\" rel=\"external\">http://mp.weixin.qq.com/s/ap1SlxaZg5OpvBglLLzm4Q</a></p><p>90%的设计师没注意过的细节：<a href=\"http://mp.weixin.qq.com/s/KiZEcLTBXC_LFJ32YBbOHw\" target=\"_blank\" rel=\"external\">http://mp.weixin.qq.com/s/KiZEcLTBXC_LFJ32YBbOHw</a></p><blockquote><p>工具和资源</p></blockquote><p>推荐一个配色 （A dark theme for Atom, Alfred, Emacs, Highlight.js, Hyper, iTerm, JetBrains, Pygments, Slack, Sublime Text, TextMate, Terminal.app, Vim, Xcode, Zsh and many more.）<br><a href=\"https://draculatheme.com/\" target=\"_blank\" rel=\"external\">https://draculatheme.com/</a></p><p>批量修改文件名命令rename<br>rename命令，brew install rename, 可使用正则进行文件名批量修改<br>简单的使用举例：<a href=\"http://www.cnblogs.com/raomengyang/p/6038561.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/raomengyang/p/6038561.html</a></p><p>Web 开发者需要知道的 12 个终端命令 <a href=\"https://www.oschina.net/translate/12-terminal-commands-every-web-developer-should-know?lang=chs&amp;page=1#\" target=\"_blank\" rel=\"external\">https://www.oschina.net/translate/12-terminal-commands-every-web-developer-should-know?lang=chs&amp;page=1#</a></p><p>12个命令有部分用过，感觉还有其他一些命令也很好用，比如cat、cp、mv、rm。</p><p>附简单bash命令和语法 <a href=\"https://github.com/OMGZui/bash-step-to-step\" target=\"_blank\" rel=\"external\">https://github.com/OMGZui/bash-step-to-step</a></p><p>Awesome Mac 收录了许多好用的mac应用程序 <a href=\"https://github.com/jaywcjlove/awesome-mac/blob/master/README-zh.md\" target=\"_blank\" rel=\"external\">https://github.com/jaywcjlove/awesome-mac/blob/master/README-zh.md</a></p><p>听说atom出了atom-ide，然后就翻车了？ <a href=\"https://juejin.im/post/59b8f34a6fb9a00a5a31d7d5\" target=\"_blank\" rel=\"external\">https://juejin.im/post/59b8f34a6fb9a00a5a31d7d5</a></p><blockquote><p>测试</p></blockquote><p>你不得不知道的流程规范@测试基本流程：<a href=\"http://mp.weixin.qq.com/s/GlVgxI7MQtFHB628E03wPA\" target=\"_blank\" rel=\"external\">http://mp.weixin.qq.com/s/GlVgxI7MQtFHB628E03wPA</a></p><blockquote><p>产品及其他</p></blockquote><p>只需一个中秋，京东企业购就能变身“独角兽”？ <a href=\"http://www.pmcaff.com/article/index/931508217006208?from=label&amp;pmc_param%5Blabel_name%5D=\" target=\"_blank\" rel=\"external\">http://www.pmcaff.com/article/index/931508217006208?from=label&amp;pmc_param%5Blabel_name%5D=</a> [ps: 法定节假日 618年中大促 双十一 双十二，各种有的已有的节日或被创造出来的节日，需要一个故事来营造一个购物的氛围，激发用户的消费欲望，转化为app的活跃度。在保持核心理念不变的前提了，变着法的刺激用户,告诉用户我（app）很好玩诶。</p><p>刚刚！比特币暴跌到18080元，13天暴跌44%！：<a href=\"https://bbs.feidee.com/thread-1308620-1-1.html\" target=\"_blank\" rel=\"external\">https://bbs.feidee.com/thread-1308620-1-1.html</a></p><p>引导好评弹窗该怎么玩？<a href=\"http://www.jianshu.com/p/91922e2b58fb\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/91922e2b58fb</a> （喜马拉雅的弹窗加上萌图很讨喜）</p><p>Axure RP 8 教程：基础设置 <a href=\"http://www.woshipm.com/rp/759235.html\" target=\"_blank\" rel=\"external\">http://www.woshipm.com/rp/759235.html</a></p><p><strong>本周刊由团队成员推荐整理而成，内容来自互联网</strong></p>"},{"title":"周报资源整理","date":"2017-06-12T15:58:19.000Z","_content":"\n根据周报中技术部推荐的资源进行整理。\n\n## 书 ##\n\n《迟到的间隔年》\n>在年轻的时候，选择一次跨国长途旅行，让自己在旅途中观看世界，认识自我，明白自己到底需要什么。这一年就叫做间隔年。”体验着作者那一幕幕挫折和艰险，问自己是否能做到，比起懵懵懂懂的笃定，这份迷茫完全值得......\n\n《微习惯》\n>如果大家准备好实现一个长期的目标，比如跑步、减肥、或者英语口语学习，或者别的，这本书提供了一个非常好的针对懒惰的大脑潜意识的对抗策略，这本书相见恨晚啊,一定要看...\n\n\n日本作家：斋藤孝，《学会学习》\n>这里面列举了很多科学有效的学习方法\n\n## 工具 ##\n\n- MAC触摸板拓展http://weibo.com/6156641637/F5QKWgqJZ?type=comment\n- 1password2.加密解密相关知识 http://www.jianshu.com/p/86f9a1ef3f24\n\niterm2 配置优化\n配色优化\n常用命令\n- 主题及配色\n- https://segmentfault.com/q/1010000006793078?_ea=1131451\n- 分屏无边框\n  - https://segmentfault.com/q/1010000006793078?_ea=1131451\n- 常用快捷键\n  - https://cnbin.github.io/blog/2015/06/20/iterm2-kuai-jie-jian-da-quan/\n  - ctrl+shift+enter  当前屏最大化\n  - ctrl+shift+d 垂直分屏\n  - ctrl+d 水平分屏\n  - command + option + 方向键盘，切换窗口\nscreen 命令\n支持退出当前命令行窗口或退出整个terminal时，程序扔保持后台运行\n网上常跟另一个命令 tmux比较 (功能更多更强，未用过，我喜欢简单的)\n我常用到的screen命令如下，第1，2，4条最常用, -S; -r; ctrl+a+d.\n\n```\n- 新建一个session会话\n  - screen -S socketname\n- 回到上一级会话 (detached)\n  - ctrl+a+d\n- 远程 detached (用其他终端退出screen session会话窗口，退出非关闭，扔保持后台运行)\n  - screen -d 名称\n- 从新恢复到screen窗口\n  - screen -r 名称\n  - 对于已经Attached Session则不能直接screen -r，需要先screen -d，然后才能screen -r\n- 列出screen session列表\n  - screen -ls\n- screen session中新建窗口\n  - ctrl+ a + c\n- 显示当前session的所有窗口\n  - ctrl + a +w\n- 在两个最近使用的 window 间切换\n  - ctrl+a ctrl+a\n- 切换到第 0..9 个 window\n  - ctrl+a 0..9\nSpaceVim\nSpaceVim 是一个社区驱动的模块化 vim/neovim 配置集合。\n作者旨在推广Vim，降低使用门槛。\n反对的声音 如何评价Vim配置文件SpaceVim?\n其他： 用 Vim 被人说装逼，怎么办？\n```\n\n### 发现好产品推荐 ###\n- https://www.producthunt.com/\n- http://next.36kr.com/posts\n- http://mindstore.io/\n- http://today.itjuzi.com/\n- [你的手机上有什么很有意思的 App？](https://www.zhihu.com/question/31476726)\n\n### 翻墙软件推荐 ###\n- 鱼摆摆 9元/月 只有mac客户端。很稳定，速度也快，不限流量\n- 吾皇SS 有各种套餐，价格便宜，可以每天无限申请试用。全平台支持。IOS的对应App, Windy\n- 浪潮 IOS应用，可以每天签到领取流量，点击一键连接可以翻墙\n- 神灯 Lantern 现在已经收费，免费的有流量限制。免费个人感觉不好用\n\n### 图片处理 ###\n- 长图拼接——想要多长的图都可以，缺点：不能横向拼图，半免费\n- 推荐app WorkFlow https://sspai.com/post/27733 虽然我没有发现亮点 但是也许在你们手机中发光\n处理图片app  prisma 效果很强大 觉得胜于一些付费的图片处理软件\n\n### 综合资源 ###\n\n- [Awesome Mac](https://github.com/jaywcjlove/awesome-mac/blob/master/README-zh.md)   这个仓库主要是收集非常好用的Mac应用程序、软件以及工具，主要面向开发者和设计师。有这个想法是因为我最近发了一篇较为火爆的涨粉儿微信公众号文章《工具武装的前端开发工程师》，于是建了这么一个仓库，持续更新作为补充，搜集更多好用的软件工具。请Star、Pull Request或者使劲搓它 issues 给我推荐优秀好用的Mac应用，很显然我是一个资深Mac用户，我需要它们帮助我快乐、高效的工作，同时也分享给你。\n- [总有你要的编程书单（GitHub）](https://juejin.im/entry/5920f4f0a0bb9f005f4d9535) 可以收藏以后当做字典查询用。\n\n## 生活娱乐 ##\n### 电影 ###\n\n- 苏有朋，嫌疑人X的献身\n- 趁着新电影《嫌疑人X的献身》 推荐可以看看同名小说或者下载日本08年那部同名电影 剧情反转比较合乎情理\n- 楚门的世界@1998年\n- 电影《寿司之神》-小野二郎-http://www.dy2018.com/html/gndy/dyzz/20120718/38699.html\n\n推荐一部反映人性的日本电影《飼育の部屋 》，故事大意是：一个男的囚禁了一个女的，并告诉她将永远与他生活下去，一开始这个女的处在各种反抗曾多次试图逃跑，男主角对女主角非常照顾，并对他讲述自己过去的经历，渐渐的这个女的慢慢原谅并接纳了这个男的，最后这个男的把这个女的给放了，男主角自己自首了。后来看了下影评说这种被爱者与加害者之间的依赖与崇拜的感情称之为“斯德哥尔摩综合症”，影片的画面与男女主人公的情感拍的比较细腻，把人性那种自私与关爱的双重性表现的很到位，日本的文艺片总是能在平淡的叙述中把人性赤裸地展现出来...\n\n\n\n## 互联网 ##\n\n- [周鸿祎：批评你的人，都是你的贵人](http://www.yixieshi.com/77541.html)\n- [留学四年的她被一个习惯毁了前程](http://www.jianshu.com/p/29bcff69064b)\n- 经期管理App美柚／大姨吗对比分析：http://www.yixieshi.com/26418.html\n- 互联网大佬的人生建议：http://www.yixieshi.com/71658.html\n- 15年图灵访谈——阮一峰（http://www.ruanyifeng.com/blog/2015/02/turing-interview.html）（在国内，）如果你想不撒谎、不干坏事、并且被公正地对待，那么可能你只能去编程了。原来文科出身呀~\n- 早起，你们都干什么？：http://www.jianshu.com/p/8f071c610534\n- 一篇blog-https://medium.com/the-mission/4-bold-decisions-that-will-stop-you-from-being-unhappy-c833c4f44ff2#.4zffbzpz7  ps:自带梯子\n- 美国的互联网工具、在线教育和智能硬件市场有哪些独角兽？     http://36kr.com/p/5078061.html\n- 10年后，重新设计的微软Skype,变得像Snapchat 和 Facebook     http://36kr.com/p/5078110.html\n\n## 开发相关 ##\n\n## 设计 ##\n- [2017年即将流行的9大UX设计趋势](http://www.uisdc.com/2017-ux-design-trends)\n\n### Vue ###\n- [如何写一手漂亮的 Vue](http://jeffjade.com/2017/03/11/120-how-to-write-vue-better/)\n- [大神面对面：Vue.js 作者尤雨溪专访](https://zhuanlan.zhihu.com/p/27205354)\n- [常见css布局方式总结](https://mp.weixin.qq.com/s?__biz=MjM5MzMyNzg0MA==&mid=2650402966&idx=1&sn=479c47c0d0de94a8d9ce83e6535a6428)\n\n### http ###\n- [一些安全相关的Http响应头](https://imququ.com/post/web-security-and-response-header.html#toc-5)\n\n### 测试 ###\n- [appium连接iOS可能的解决办法](http://www.jianshu.com/p/05943804c25e)\n\n### JavaScript ###\n- [JavaScript如何遍历Object](https://huixisheng.github.io/object-loop/)\n\n### 安卓 ###\n- Android O发布 http://news.91.com/android/s58d1bc8010d3.html\n- Android开发中遇到的坑 https://www.zhihu.com/question/27818921\n- [一文解决 Android View 滑动冲突](https://juejin.im/entry/5928bfa92f301e0057d4f414)\n- [Google 官方推出应用开发架构指南](https://juejin.im/entry/5922637b128fe1005c2ce6be)\n\n\n\n## 其他 ##\n- [三十秒的小习惯，一辈子的大影响](https://juejin.im/post/5933ffd6ac502e0068a3427a)\n- 要想好好生活，我们需要一场和自我的断舍离：了解自己的真实欲望，不盲目浪费自己的时间和精力；明晰自己的需求，不买多余的东西；懂得节制，将精力留给自己珍视的东西。\nhttp://www.jianshu.com/p/e0b63a98a7fc\n- 需求了解要做什么：https://mp.weixin.qq.com/s?__biz=MjM5ODY4ODIxOA==&mid=201952103&idx=1&sn=610a0021807808a34d46edfa1cda40b1&mpshare=1&scene=1&srcid=060200swWvNGr5BZ7TlABFZj&key=48d1218a6e2970b0aa1d0b74aaa3757e00f7f9d8c71bf52f9f8ac81708e80b0d841651b5598c3d3a20749179877849824cc0a3a47c7990c46a48ed18a83b2ffe1a7b68566aed7ee4492b63206e539bc2&ascene=0&uin=MTk3ODA1MDIwMQ%3D%3D&devicetype=iMac+MacBookPro11%2C1+OSX+OSX+10.11.5+build(15F34)&version=12020610&nettype=WIFI&fontScale=100&pass_ticket=iUIezIVUwLB39vKkS8pFwoWKy%2B8QRO9yOawuTuF5klqq4%2FYp0uD7IhxLsvvO0QV0\n\n**本周刊由团队成员推荐整理而成，内容来自互联网**","source":"_posts/weekly-awesome.md","raw":"---\ntitle: 周报资源整理\ndate: 2017-06-12 23:58:19\ntags:\n- weekly\n---\n\n根据周报中技术部推荐的资源进行整理。\n\n## 书 ##\n\n《迟到的间隔年》\n>在年轻的时候，选择一次跨国长途旅行，让自己在旅途中观看世界，认识自我，明白自己到底需要什么。这一年就叫做间隔年。”体验着作者那一幕幕挫折和艰险，问自己是否能做到，比起懵懵懂懂的笃定，这份迷茫完全值得......\n\n《微习惯》\n>如果大家准备好实现一个长期的目标，比如跑步、减肥、或者英语口语学习，或者别的，这本书提供了一个非常好的针对懒惰的大脑潜意识的对抗策略，这本书相见恨晚啊,一定要看...\n\n\n日本作家：斋藤孝，《学会学习》\n>这里面列举了很多科学有效的学习方法\n\n## 工具 ##\n\n- MAC触摸板拓展http://weibo.com/6156641637/F5QKWgqJZ?type=comment\n- 1password2.加密解密相关知识 http://www.jianshu.com/p/86f9a1ef3f24\n\niterm2 配置优化\n配色优化\n常用命令\n- 主题及配色\n- https://segmentfault.com/q/1010000006793078?_ea=1131451\n- 分屏无边框\n  - https://segmentfault.com/q/1010000006793078?_ea=1131451\n- 常用快捷键\n  - https://cnbin.github.io/blog/2015/06/20/iterm2-kuai-jie-jian-da-quan/\n  - ctrl+shift+enter  当前屏最大化\n  - ctrl+shift+d 垂直分屏\n  - ctrl+d 水平分屏\n  - command + option + 方向键盘，切换窗口\nscreen 命令\n支持退出当前命令行窗口或退出整个terminal时，程序扔保持后台运行\n网上常跟另一个命令 tmux比较 (功能更多更强，未用过，我喜欢简单的)\n我常用到的screen命令如下，第1，2，4条最常用, -S; -r; ctrl+a+d.\n\n```\n- 新建一个session会话\n  - screen -S socketname\n- 回到上一级会话 (detached)\n  - ctrl+a+d\n- 远程 detached (用其他终端退出screen session会话窗口，退出非关闭，扔保持后台运行)\n  - screen -d 名称\n- 从新恢复到screen窗口\n  - screen -r 名称\n  - 对于已经Attached Session则不能直接screen -r，需要先screen -d，然后才能screen -r\n- 列出screen session列表\n  - screen -ls\n- screen session中新建窗口\n  - ctrl+ a + c\n- 显示当前session的所有窗口\n  - ctrl + a +w\n- 在两个最近使用的 window 间切换\n  - ctrl+a ctrl+a\n- 切换到第 0..9 个 window\n  - ctrl+a 0..9\nSpaceVim\nSpaceVim 是一个社区驱动的模块化 vim/neovim 配置集合。\n作者旨在推广Vim，降低使用门槛。\n反对的声音 如何评价Vim配置文件SpaceVim?\n其他： 用 Vim 被人说装逼，怎么办？\n```\n\n### 发现好产品推荐 ###\n- https://www.producthunt.com/\n- http://next.36kr.com/posts\n- http://mindstore.io/\n- http://today.itjuzi.com/\n- [你的手机上有什么很有意思的 App？](https://www.zhihu.com/question/31476726)\n\n### 翻墙软件推荐 ###\n- 鱼摆摆 9元/月 只有mac客户端。很稳定，速度也快，不限流量\n- 吾皇SS 有各种套餐，价格便宜，可以每天无限申请试用。全平台支持。IOS的对应App, Windy\n- 浪潮 IOS应用，可以每天签到领取流量，点击一键连接可以翻墙\n- 神灯 Lantern 现在已经收费，免费的有流量限制。免费个人感觉不好用\n\n### 图片处理 ###\n- 长图拼接——想要多长的图都可以，缺点：不能横向拼图，半免费\n- 推荐app WorkFlow https://sspai.com/post/27733 虽然我没有发现亮点 但是也许在你们手机中发光\n处理图片app  prisma 效果很强大 觉得胜于一些付费的图片处理软件\n\n### 综合资源 ###\n\n- [Awesome Mac](https://github.com/jaywcjlove/awesome-mac/blob/master/README-zh.md)   这个仓库主要是收集非常好用的Mac应用程序、软件以及工具，主要面向开发者和设计师。有这个想法是因为我最近发了一篇较为火爆的涨粉儿微信公众号文章《工具武装的前端开发工程师》，于是建了这么一个仓库，持续更新作为补充，搜集更多好用的软件工具。请Star、Pull Request或者使劲搓它 issues 给我推荐优秀好用的Mac应用，很显然我是一个资深Mac用户，我需要它们帮助我快乐、高效的工作，同时也分享给你。\n- [总有你要的编程书单（GitHub）](https://juejin.im/entry/5920f4f0a0bb9f005f4d9535) 可以收藏以后当做字典查询用。\n\n## 生活娱乐 ##\n### 电影 ###\n\n- 苏有朋，嫌疑人X的献身\n- 趁着新电影《嫌疑人X的献身》 推荐可以看看同名小说或者下载日本08年那部同名电影 剧情反转比较合乎情理\n- 楚门的世界@1998年\n- 电影《寿司之神》-小野二郎-http://www.dy2018.com/html/gndy/dyzz/20120718/38699.html\n\n推荐一部反映人性的日本电影《飼育の部屋 》，故事大意是：一个男的囚禁了一个女的，并告诉她将永远与他生活下去，一开始这个女的处在各种反抗曾多次试图逃跑，男主角对女主角非常照顾，并对他讲述自己过去的经历，渐渐的这个女的慢慢原谅并接纳了这个男的，最后这个男的把这个女的给放了，男主角自己自首了。后来看了下影评说这种被爱者与加害者之间的依赖与崇拜的感情称之为“斯德哥尔摩综合症”，影片的画面与男女主人公的情感拍的比较细腻，把人性那种自私与关爱的双重性表现的很到位，日本的文艺片总是能在平淡的叙述中把人性赤裸地展现出来...\n\n\n\n## 互联网 ##\n\n- [周鸿祎：批评你的人，都是你的贵人](http://www.yixieshi.com/77541.html)\n- [留学四年的她被一个习惯毁了前程](http://www.jianshu.com/p/29bcff69064b)\n- 经期管理App美柚／大姨吗对比分析：http://www.yixieshi.com/26418.html\n- 互联网大佬的人生建议：http://www.yixieshi.com/71658.html\n- 15年图灵访谈——阮一峰（http://www.ruanyifeng.com/blog/2015/02/turing-interview.html）（在国内，）如果你想不撒谎、不干坏事、并且被公正地对待，那么可能你只能去编程了。原来文科出身呀~\n- 早起，你们都干什么？：http://www.jianshu.com/p/8f071c610534\n- 一篇blog-https://medium.com/the-mission/4-bold-decisions-that-will-stop-you-from-being-unhappy-c833c4f44ff2#.4zffbzpz7  ps:自带梯子\n- 美国的互联网工具、在线教育和智能硬件市场有哪些独角兽？     http://36kr.com/p/5078061.html\n- 10年后，重新设计的微软Skype,变得像Snapchat 和 Facebook     http://36kr.com/p/5078110.html\n\n## 开发相关 ##\n\n## 设计 ##\n- [2017年即将流行的9大UX设计趋势](http://www.uisdc.com/2017-ux-design-trends)\n\n### Vue ###\n- [如何写一手漂亮的 Vue](http://jeffjade.com/2017/03/11/120-how-to-write-vue-better/)\n- [大神面对面：Vue.js 作者尤雨溪专访](https://zhuanlan.zhihu.com/p/27205354)\n- [常见css布局方式总结](https://mp.weixin.qq.com/s?__biz=MjM5MzMyNzg0MA==&mid=2650402966&idx=1&sn=479c47c0d0de94a8d9ce83e6535a6428)\n\n### http ###\n- [一些安全相关的Http响应头](https://imququ.com/post/web-security-and-response-header.html#toc-5)\n\n### 测试 ###\n- [appium连接iOS可能的解决办法](http://www.jianshu.com/p/05943804c25e)\n\n### JavaScript ###\n- [JavaScript如何遍历Object](https://huixisheng.github.io/object-loop/)\n\n### 安卓 ###\n- Android O发布 http://news.91.com/android/s58d1bc8010d3.html\n- Android开发中遇到的坑 https://www.zhihu.com/question/27818921\n- [一文解决 Android View 滑动冲突](https://juejin.im/entry/5928bfa92f301e0057d4f414)\n- [Google 官方推出应用开发架构指南](https://juejin.im/entry/5922637b128fe1005c2ce6be)\n\n\n\n## 其他 ##\n- [三十秒的小习惯，一辈子的大影响](https://juejin.im/post/5933ffd6ac502e0068a3427a)\n- 要想好好生活，我们需要一场和自我的断舍离：了解自己的真实欲望，不盲目浪费自己的时间和精力；明晰自己的需求，不买多余的东西；懂得节制，将精力留给自己珍视的东西。\nhttp://www.jianshu.com/p/e0b63a98a7fc\n- 需求了解要做什么：https://mp.weixin.qq.com/s?__biz=MjM5ODY4ODIxOA==&mid=201952103&idx=1&sn=610a0021807808a34d46edfa1cda40b1&mpshare=1&scene=1&srcid=060200swWvNGr5BZ7TlABFZj&key=48d1218a6e2970b0aa1d0b74aaa3757e00f7f9d8c71bf52f9f8ac81708e80b0d841651b5598c3d3a20749179877849824cc0a3a47c7990c46a48ed18a83b2ffe1a7b68566aed7ee4492b63206e539bc2&ascene=0&uin=MTk3ODA1MDIwMQ%3D%3D&devicetype=iMac+MacBookPro11%2C1+OSX+OSX+10.11.5+build(15F34)&version=12020610&nettype=WIFI&fontScale=100&pass_ticket=iUIezIVUwLB39vKkS8pFwoWKy%2B8QRO9yOawuTuF5klqq4%2FYp0uD7IhxLsvvO0QV0\n\n**本周刊由团队成员推荐整理而成，内容来自互联网**","slug":"weekly-awesome","published":1,"updated":"2017-09-18T02:12:39.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9cutipe001wds9lyrylx5ic","content":"<p>根据周报中技术部推荐的资源进行整理。</p><h2 id=\"书\"><a href=\"#书\" class=\"headerlink\" title=\"书\"></a>书</h2><p>《迟到的间隔年》</p><blockquote><p>在年轻的时候，选择一次跨国长途旅行，让自己在旅途中观看世界，认识自我，明白自己到底需要什么。这一年就叫做间隔年。”体验着作者那一幕幕挫折和艰险，问自己是否能做到，比起懵懵懂懂的笃定，这份迷茫完全值得……</p></blockquote><p>《微习惯》</p><blockquote><p>如果大家准备好实现一个长期的目标，比如跑步、减肥、或者英语口语学习，或者别的，这本书提供了一个非常好的针对懒惰的大脑潜意识的对抗策略，这本书相见恨晚啊,一定要看…</p></blockquote><p>日本作家：斋藤孝，《学会学习》</p><blockquote><p>这里面列举了很多科学有效的学习方法</p></blockquote><h2 id=\"工具\"><a href=\"#工具\" class=\"headerlink\" title=\"工具\"></a>工具</h2><ul><li>MAC触摸板拓展<a href=\"http://weibo.com/6156641637/F5QKWgqJZ?type=comment\" target=\"_blank\" rel=\"external\">http://weibo.com/6156641637/F5QKWgqJZ?type=comment</a></li><li>1password2.加密解密相关知识 <a href=\"http://www.jianshu.com/p/86f9a1ef3f24\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/86f9a1ef3f24</a></li></ul><p>iterm2 配置优化<br>配色优化<br>常用命令</p><ul><li>主题及配色</li><li><a href=\"https://segmentfault.com/q/1010000006793078?_ea=1131451\" target=\"_blank\" rel=\"external\">https://segmentfault.com/q/1010000006793078?_ea=1131451</a></li><li>分屏无边框<ul><li><a href=\"https://segmentfault.com/q/1010000006793078?_ea=1131451\" target=\"_blank\" rel=\"external\">https://segmentfault.com/q/1010000006793078?_ea=1131451</a></li></ul></li><li>常用快捷键<ul><li><a href=\"https://cnbin.github.io/blog/2015/06/20/iterm2-kuai-jie-jian-da-quan/\" target=\"_blank\" rel=\"external\">https://cnbin.github.io/blog/2015/06/20/iterm2-kuai-jie-jian-da-quan/</a></li><li>ctrl+shift+enter 当前屏最大化</li><li>ctrl+shift+d 垂直分屏</li><li>ctrl+d 水平分屏</li><li>command + option + 方向键盘，切换窗口<br>screen 命令<br>支持退出当前命令行窗口或退出整个terminal时，程序扔保持后台运行<br>网上常跟另一个命令 tmux比较 (功能更多更强，未用过，我喜欢简单的)<br>我常用到的screen命令如下，第1，2，4条最常用, -S; -r; ctrl+a+d.</li></ul></li></ul><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\">- 新建一个session会话</div><div class=\"line\">  - screen -S socketname</div><div class=\"line\">- 回到上一级会话 (detached)</div><div class=\"line\">  - ctrl+a+d</div><div class=\"line\">- 远程 detached (用其他终端退出screen session会话窗口，退出非关闭，扔保持后台运行)</div><div class=\"line\">  - screen -d 名称</div><div class=\"line\">- 从新恢复到screen窗口</div><div class=\"line\">  - screen -r 名称</div><div class=\"line\">  - 对于已经Attached Session则不能直接screen -r，需要先screen -d，然后才能screen -r</div><div class=\"line\">- 列出screen session列表</div><div class=\"line\">  - screen -ls</div><div class=\"line\">- screen session中新建窗口</div><div class=\"line\">  - ctrl+ a + c</div><div class=\"line\">- 显示当前session的所有窗口</div><div class=\"line\">  - ctrl + a +w</div><div class=\"line\">- 在两个最近使用的 window 间切换</div><div class=\"line\">  - ctrl+a ctrl+a</div><div class=\"line\">- 切换到第 0..9 个 window</div><div class=\"line\">  - ctrl+a 0..9</div><div class=\"line\">SpaceVim</div><div class=\"line\">SpaceVim 是一个社区驱动的模块化 vim/neovim 配置集合。</div><div class=\"line\">作者旨在推广Vim，降低使用门槛。</div><div class=\"line\">反对的声音 如何评价Vim配置文件SpaceVim?</div><div class=\"line\">其他： 用 Vim 被人说装逼，怎么办？</div></pre></td></tr></table></figure><h3 id=\"发现好产品推荐\"><a href=\"#发现好产品推荐\" class=\"headerlink\" title=\"发现好产品推荐\"></a>发现好产品推荐</h3><ul><li><a href=\"https://www.producthunt.com/\" target=\"_blank\" rel=\"external\">https://www.producthunt.com/</a></li><li><a href=\"http://next.36kr.com/posts\" target=\"_blank\" rel=\"external\">http://next.36kr.com/posts</a></li><li><a href=\"http://mindstore.io/\" target=\"_blank\" rel=\"external\">http://mindstore.io/</a></li><li><a href=\"http://today.itjuzi.com/\" target=\"_blank\" rel=\"external\">http://today.itjuzi.com/</a></li><li><a href=\"https://www.zhihu.com/question/31476726\" target=\"_blank\" rel=\"external\">你的手机上有什么很有意思的 App？</a></li></ul><h3 id=\"翻墙软件推荐\"><a href=\"#翻墙软件推荐\" class=\"headerlink\" title=\"翻墙软件推荐\"></a>翻墙软件推荐</h3><ul><li>鱼摆摆 9元/月 只有mac客户端。很稳定，速度也快，不限流量</li><li>吾皇SS 有各种套餐，价格便宜，可以每天无限申请试用。全平台支持。IOS的对应App, Windy</li><li>浪潮 IOS应用，可以每天签到领取流量，点击一键连接可以翻墙</li><li>神灯 Lantern 现在已经收费，免费的有流量限制。免费个人感觉不好用</li></ul><h3 id=\"图片处理\"><a href=\"#图片处理\" class=\"headerlink\" title=\"图片处理\"></a>图片处理</h3><ul><li>长图拼接——想要多长的图都可以，缺点：不能横向拼图，半免费</li><li>推荐app WorkFlow <a href=\"https://sspai.com/post/27733\" target=\"_blank\" rel=\"external\">https://sspai.com/post/27733</a> 虽然我没有发现亮点 但是也许在你们手机中发光<br>处理图片app prisma 效果很强大 觉得胜于一些付费的图片处理软件</li></ul><h3 id=\"综合资源\"><a href=\"#综合资源\" class=\"headerlink\" title=\"综合资源\"></a>综合资源</h3><ul><li><a href=\"https://github.com/jaywcjlove/awesome-mac/blob/master/README-zh.md\" target=\"_blank\" rel=\"external\">Awesome Mac</a>  这个仓库主要是收集非常好用的Mac应用程序、软件以及工具，主要面向开发者和设计师。有这个想法是因为我最近发了一篇较为火爆的涨粉儿微信公众号文章《工具武装的前端开发工程师》，于是建了这么一个仓库，持续更新作为补充，搜集更多好用的软件工具。请Star、Pull Request或者使劲搓它 issues 给我推荐优秀好用的Mac应用，很显然我是一个资深Mac用户，我需要它们帮助我快乐、高效的工作，同时也分享给你。</li><li><a href=\"https://juejin.im/entry/5920f4f0a0bb9f005f4d9535\" target=\"_blank\" rel=\"external\">总有你要的编程书单（GitHub）</a> 可以收藏以后当做字典查询用。</li></ul><h2 id=\"生活娱乐\"><a href=\"#生活娱乐\" class=\"headerlink\" title=\"生活娱乐\"></a>生活娱乐</h2><h3 id=\"电影\"><a href=\"#电影\" class=\"headerlink\" title=\"电影\"></a>电影</h3><ul><li>苏有朋，嫌疑人X的献身</li><li>趁着新电影《嫌疑人X的献身》 推荐可以看看同名小说或者下载日本08年那部同名电影 剧情反转比较合乎情理</li><li>楚门的世界@1998年</li><li>电影《寿司之神》-小野二郎-<a href=\"http://www.dy2018.com/html/gndy/dyzz/20120718/38699.html\" target=\"_blank\" rel=\"external\">http://www.dy2018.com/html/gndy/dyzz/20120718/38699.html</a></li></ul><p>推荐一部反映人性的日本电影《飼育の部屋 》，故事大意是：一个男的囚禁了一个女的，并告诉她将永远与他生活下去，一开始这个女的处在各种反抗曾多次试图逃跑，男主角对女主角非常照顾，并对他讲述自己过去的经历，渐渐的这个女的慢慢原谅并接纳了这个男的，最后这个男的把这个女的给放了，男主角自己自首了。后来看了下影评说这种被爱者与加害者之间的依赖与崇拜的感情称之为“斯德哥尔摩综合症”，影片的画面与男女主人公的情感拍的比较细腻，把人性那种自私与关爱的双重性表现的很到位，日本的文艺片总是能在平淡的叙述中把人性赤裸地展现出来…</p><h2 id=\"互联网\"><a href=\"#互联网\" class=\"headerlink\" title=\"互联网\"></a>互联网</h2><ul><li><a href=\"http://www.yixieshi.com/77541.html\" target=\"_blank\" rel=\"external\">周鸿祎：批评你的人，都是你的贵人</a></li><li><a href=\"http://www.jianshu.com/p/29bcff69064b\" target=\"_blank\" rel=\"external\">留学四年的她被一个习惯毁了前程</a></li><li>经期管理App美柚／大姨吗对比分析：<a href=\"http://www.yixieshi.com/26418.html\" target=\"_blank\" rel=\"external\">http://www.yixieshi.com/26418.html</a></li><li>互联网大佬的人生建议：<a href=\"http://www.yixieshi.com/71658.html\" target=\"_blank\" rel=\"external\">http://www.yixieshi.com/71658.html</a></li><li>15年图灵访谈——阮一峰（<a href=\"http://www.ruanyifeng.com/blog/2015/02/turing-interview.html）（在国内，）如果你想不撒谎、不干坏事、并且被公正地对待，那么可能你只能去编程了。原来文科出身呀~\" target=\"_blank\" rel=\"external\">http://www.ruanyifeng.com/blog/2015/02/turing-interview.html）（在国内，）如果你想不撒谎、不干坏事、并且被公正地对待，那么可能你只能去编程了。原来文科出身呀~</a></li><li>早起，你们都干什么？：<a href=\"http://www.jianshu.com/p/8f071c610534\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/8f071c610534</a></li><li>一篇blog-<a href=\"https://medium.com/the-mission/4-bold-decisions-that-will-stop-you-from-being-unhappy-c833c4f44ff2#.4zffbzpz7\" target=\"_blank\" rel=\"external\">https://medium.com/the-mission/4-bold-decisions-that-will-stop-you-from-being-unhappy-c833c4f44ff2#.4zffbzpz7</a> ps:自带梯子</li><li>美国的互联网工具、在线教育和智能硬件市场有哪些独角兽？ <a href=\"http://36kr.com/p/5078061.html\" target=\"_blank\" rel=\"external\">http://36kr.com/p/5078061.html</a></li><li>10年后，重新设计的微软Skype,变得像Snapchat 和 Facebook <a href=\"http://36kr.com/p/5078110.html\" target=\"_blank\" rel=\"external\">http://36kr.com/p/5078110.html</a></li></ul><h2 id=\"开发相关\"><a href=\"#开发相关\" class=\"headerlink\" title=\"开发相关\"></a>开发相关</h2><h2 id=\"设计\"><a href=\"#设计\" class=\"headerlink\" title=\"设计\"></a>设计</h2><ul><li><a href=\"http://www.uisdc.com/2017-ux-design-trends\" target=\"_blank\" rel=\"external\">2017年即将流行的9大UX设计趋势</a></li></ul><h3 id=\"Vue\"><a href=\"#Vue\" class=\"headerlink\" title=\"Vue\"></a>Vue</h3><ul><li><a href=\"http://jeffjade.com/2017/03/11/120-how-to-write-vue-better/\" target=\"_blank\" rel=\"external\">如何写一手漂亮的 Vue</a></li><li><a href=\"https://zhuanlan.zhihu.com/p/27205354\" target=\"_blank\" rel=\"external\">大神面对面：Vue.js 作者尤雨溪专访</a></li><li><a href=\"https://mp.weixin.qq.com/s?__biz=MjM5MzMyNzg0MA==&amp;mid=2650402966&amp;idx=1&amp;sn=479c47c0d0de94a8d9ce83e6535a6428\" target=\"_blank\" rel=\"external\">常见css布局方式总结</a></li></ul><h3 id=\"http\"><a href=\"#http\" class=\"headerlink\" title=\"http\"></a>http</h3><ul><li><a href=\"https://imququ.com/post/web-security-and-response-header.html#toc-5\" target=\"_blank\" rel=\"external\">一些安全相关的Http响应头</a></li></ul><h3 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h3><ul><li><a href=\"http://www.jianshu.com/p/05943804c25e\" target=\"_blank\" rel=\"external\">appium连接iOS可能的解决办法</a></li></ul><h3 id=\"JavaScript\"><a href=\"#JavaScript\" class=\"headerlink\" title=\"JavaScript\"></a>JavaScript</h3><ul><li><a href=\"https://huixisheng.github.io/object-loop/\" target=\"_blank\" rel=\"external\">JavaScript如何遍历Object</a></li></ul><h3 id=\"安卓\"><a href=\"#安卓\" class=\"headerlink\" title=\"安卓\"></a>安卓</h3><ul><li>Android O发布 <a href=\"http://news.91.com/android/s58d1bc8010d3.html\" target=\"_blank\" rel=\"external\">http://news.91.com/android/s58d1bc8010d3.html</a></li><li>Android开发中遇到的坑 <a href=\"https://www.zhihu.com/question/27818921\" target=\"_blank\" rel=\"external\">https://www.zhihu.com/question/27818921</a></li><li><a href=\"https://juejin.im/entry/5928bfa92f301e0057d4f414\" target=\"_blank\" rel=\"external\">一文解决 Android View 滑动冲突</a></li><li><a href=\"https://juejin.im/entry/5922637b128fe1005c2ce6be\" target=\"_blank\" rel=\"external\">Google 官方推出应用开发架构指南</a></li></ul><h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><ul><li><a href=\"https://juejin.im/post/5933ffd6ac502e0068a3427a\" target=\"_blank\" rel=\"external\">三十秒的小习惯，一辈子的大影响</a></li><li>要想好好生活，我们需要一场和自我的断舍离：了解自己的真实欲望，不盲目浪费自己的时间和精力；明晰自己的需求，不买多余的东西；懂得节制，将精力留给自己珍视的东西。<br><a href=\"http://www.jianshu.com/p/e0b63a98a7fc\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/e0b63a98a7fc</a></li><li>需求了解要做什么：<a href=\"https://mp.weixin.qq.com/s?__biz=MjM5ODY4ODIxOA==&amp;mid=201952103&amp;idx=1&amp;sn=610a0021807808a34d46edfa1cda40b1&amp;mpshare=1&amp;scene=1&amp;srcid=060200swWvNGr5BZ7TlABFZj&amp;key=48d1218a6e2970b0aa1d0b74aaa3757e00f7f9d8c71bf52f9f8ac81708e80b0d841651b5598c3d3a20749179877849824cc0a3a47c7990c46a48ed18a83b2ffe1a7b68566aed7ee4492b63206e539bc2&amp;ascene=0&amp;uin=MTk3ODA1MDIwMQ%3D%3D&amp;devicetype=iMac+MacBookPro11%2C1+OSX+OSX+10.11.5+build(15F34)&amp;version=12020610&amp;nettype=WIFI&amp;fontScale=100&amp;pass_ticket=iUIezIVUwLB39vKkS8pFwoWKy%2B8QRO9yOawuTuF5klqq4%2FYp0uD7IhxLsvvO0QV0\" target=\"_blank\" rel=\"external\">https://mp.weixin.qq.com/s?__biz=MjM5ODY4ODIxOA==&amp;mid=201952103&amp;idx=1&amp;sn=610a0021807808a34d46edfa1cda40b1&amp;mpshare=1&amp;scene=1&amp;srcid=060200swWvNGr5BZ7TlABFZj&amp;key=48d1218a6e2970b0aa1d0b74aaa3757e00f7f9d8c71bf52f9f8ac81708e80b0d841651b5598c3d3a20749179877849824cc0a3a47c7990c46a48ed18a83b2ffe1a7b68566aed7ee4492b63206e539bc2&amp;ascene=0&amp;uin=MTk3ODA1MDIwMQ%3D%3D&amp;devicetype=iMac+MacBookPro11%2C1+OSX+OSX+10.11.5+build(15F34)&amp;version=12020610&amp;nettype=WIFI&amp;fontScale=100&amp;pass_ticket=iUIezIVUwLB39vKkS8pFwoWKy%2B8QRO9yOawuTuF5klqq4%2FYp0uD7IhxLsvvO0QV0</a></li></ul><p><strong>本周刊由团队成员推荐整理而成，内容来自互联网</strong></p>","site":{"data":{}},"excerpt":"","more":"<p>根据周报中技术部推荐的资源进行整理。</p><h2 id=\"书\"><a href=\"#书\" class=\"headerlink\" title=\"书\"></a>书</h2><p>《迟到的间隔年》</p><blockquote><p>在年轻的时候，选择一次跨国长途旅行，让自己在旅途中观看世界，认识自我，明白自己到底需要什么。这一年就叫做间隔年。”体验着作者那一幕幕挫折和艰险，问自己是否能做到，比起懵懵懂懂的笃定，这份迷茫完全值得……</p></blockquote><p>《微习惯》</p><blockquote><p>如果大家准备好实现一个长期的目标，比如跑步、减肥、或者英语口语学习，或者别的，这本书提供了一个非常好的针对懒惰的大脑潜意识的对抗策略，这本书相见恨晚啊,一定要看…</p></blockquote><p>日本作家：斋藤孝，《学会学习》</p><blockquote><p>这里面列举了很多科学有效的学习方法</p></blockquote><h2 id=\"工具\"><a href=\"#工具\" class=\"headerlink\" title=\"工具\"></a>工具</h2><ul><li>MAC触摸板拓展<a href=\"http://weibo.com/6156641637/F5QKWgqJZ?type=comment\" target=\"_blank\" rel=\"external\">http://weibo.com/6156641637/F5QKWgqJZ?type=comment</a></li><li>1password2.加密解密相关知识 <a href=\"http://www.jianshu.com/p/86f9a1ef3f24\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/86f9a1ef3f24</a></li></ul><p>iterm2 配置优化<br>配色优化<br>常用命令</p><ul><li>主题及配色</li><li><a href=\"https://segmentfault.com/q/1010000006793078?_ea=1131451\" target=\"_blank\" rel=\"external\">https://segmentfault.com/q/1010000006793078?_ea=1131451</a></li><li>分屏无边框<ul><li><a href=\"https://segmentfault.com/q/1010000006793078?_ea=1131451\" target=\"_blank\" rel=\"external\">https://segmentfault.com/q/1010000006793078?_ea=1131451</a></li></ul></li><li>常用快捷键<ul><li><a href=\"https://cnbin.github.io/blog/2015/06/20/iterm2-kuai-jie-jian-da-quan/\" target=\"_blank\" rel=\"external\">https://cnbin.github.io/blog/2015/06/20/iterm2-kuai-jie-jian-da-quan/</a></li><li>ctrl+shift+enter 当前屏最大化</li><li>ctrl+shift+d 垂直分屏</li><li>ctrl+d 水平分屏</li><li>command + option + 方向键盘，切换窗口<br>screen 命令<br>支持退出当前命令行窗口或退出整个terminal时，程序扔保持后台运行<br>网上常跟另一个命令 tmux比较 (功能更多更强，未用过，我喜欢简单的)<br>我常用到的screen命令如下，第1，2，4条最常用, -S; -r; ctrl+a+d.</li></ul></li></ul><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\">- 新建一个session会话</div><div class=\"line\">  - screen -S socketname</div><div class=\"line\">- 回到上一级会话 (detached)</div><div class=\"line\">  - ctrl+a+d</div><div class=\"line\">- 远程 detached (用其他终端退出screen session会话窗口，退出非关闭，扔保持后台运行)</div><div class=\"line\">  - screen -d 名称</div><div class=\"line\">- 从新恢复到screen窗口</div><div class=\"line\">  - screen -r 名称</div><div class=\"line\">  - 对于已经Attached Session则不能直接screen -r，需要先screen -d，然后才能screen -r</div><div class=\"line\">- 列出screen session列表</div><div class=\"line\">  - screen -ls</div><div class=\"line\">- screen session中新建窗口</div><div class=\"line\">  - ctrl+ a + c</div><div class=\"line\">- 显示当前session的所有窗口</div><div class=\"line\">  - ctrl + a +w</div><div class=\"line\">- 在两个最近使用的 window 间切换</div><div class=\"line\">  - ctrl+a ctrl+a</div><div class=\"line\">- 切换到第 0..9 个 window</div><div class=\"line\">  - ctrl+a 0..9</div><div class=\"line\">SpaceVim</div><div class=\"line\">SpaceVim 是一个社区驱动的模块化 vim/neovim 配置集合。</div><div class=\"line\">作者旨在推广Vim，降低使用门槛。</div><div class=\"line\">反对的声音 如何评价Vim配置文件SpaceVim?</div><div class=\"line\">其他： 用 Vim 被人说装逼，怎么办？</div></pre></td></tr></table></figure><h3 id=\"发现好产品推荐\"><a href=\"#发现好产品推荐\" class=\"headerlink\" title=\"发现好产品推荐\"></a>发现好产品推荐</h3><ul><li><a href=\"https://www.producthunt.com/\" target=\"_blank\" rel=\"external\">https://www.producthunt.com/</a></li><li><a href=\"http://next.36kr.com/posts\" target=\"_blank\" rel=\"external\">http://next.36kr.com/posts</a></li><li><a href=\"http://mindstore.io/\" target=\"_blank\" rel=\"external\">http://mindstore.io/</a></li><li><a href=\"http://today.itjuzi.com/\" target=\"_blank\" rel=\"external\">http://today.itjuzi.com/</a></li><li><a href=\"https://www.zhihu.com/question/31476726\" target=\"_blank\" rel=\"external\">你的手机上有什么很有意思的 App？</a></li></ul><h3 id=\"翻墙软件推荐\"><a href=\"#翻墙软件推荐\" class=\"headerlink\" title=\"翻墙软件推荐\"></a>翻墙软件推荐</h3><ul><li>鱼摆摆 9元/月 只有mac客户端。很稳定，速度也快，不限流量</li><li>吾皇SS 有各种套餐，价格便宜，可以每天无限申请试用。全平台支持。IOS的对应App, Windy</li><li>浪潮 IOS应用，可以每天签到领取流量，点击一键连接可以翻墙</li><li>神灯 Lantern 现在已经收费，免费的有流量限制。免费个人感觉不好用</li></ul><h3 id=\"图片处理\"><a href=\"#图片处理\" class=\"headerlink\" title=\"图片处理\"></a>图片处理</h3><ul><li>长图拼接——想要多长的图都可以，缺点：不能横向拼图，半免费</li><li>推荐app WorkFlow <a href=\"https://sspai.com/post/27733\" target=\"_blank\" rel=\"external\">https://sspai.com/post/27733</a> 虽然我没有发现亮点 但是也许在你们手机中发光<br>处理图片app prisma 效果很强大 觉得胜于一些付费的图片处理软件</li></ul><h3 id=\"综合资源\"><a href=\"#综合资源\" class=\"headerlink\" title=\"综合资源\"></a>综合资源</h3><ul><li><a href=\"https://github.com/jaywcjlove/awesome-mac/blob/master/README-zh.md\" target=\"_blank\" rel=\"external\">Awesome Mac</a>  这个仓库主要是收集非常好用的Mac应用程序、软件以及工具，主要面向开发者和设计师。有这个想法是因为我最近发了一篇较为火爆的涨粉儿微信公众号文章《工具武装的前端开发工程师》，于是建了这么一个仓库，持续更新作为补充，搜集更多好用的软件工具。请Star、Pull Request或者使劲搓它 issues 给我推荐优秀好用的Mac应用，很显然我是一个资深Mac用户，我需要它们帮助我快乐、高效的工作，同时也分享给你。</li><li><a href=\"https://juejin.im/entry/5920f4f0a0bb9f005f4d9535\" target=\"_blank\" rel=\"external\">总有你要的编程书单（GitHub）</a> 可以收藏以后当做字典查询用。</li></ul><h2 id=\"生活娱乐\"><a href=\"#生活娱乐\" class=\"headerlink\" title=\"生活娱乐\"></a>生活娱乐</h2><h3 id=\"电影\"><a href=\"#电影\" class=\"headerlink\" title=\"电影\"></a>电影</h3><ul><li>苏有朋，嫌疑人X的献身</li><li>趁着新电影《嫌疑人X的献身》 推荐可以看看同名小说或者下载日本08年那部同名电影 剧情反转比较合乎情理</li><li>楚门的世界@1998年</li><li>电影《寿司之神》-小野二郎-<a href=\"http://www.dy2018.com/html/gndy/dyzz/20120718/38699.html\" target=\"_blank\" rel=\"external\">http://www.dy2018.com/html/gndy/dyzz/20120718/38699.html</a></li></ul><p>推荐一部反映人性的日本电影《飼育の部屋 》，故事大意是：一个男的囚禁了一个女的，并告诉她将永远与他生活下去，一开始这个女的处在各种反抗曾多次试图逃跑，男主角对女主角非常照顾，并对他讲述自己过去的经历，渐渐的这个女的慢慢原谅并接纳了这个男的，最后这个男的把这个女的给放了，男主角自己自首了。后来看了下影评说这种被爱者与加害者之间的依赖与崇拜的感情称之为“斯德哥尔摩综合症”，影片的画面与男女主人公的情感拍的比较细腻，把人性那种自私与关爱的双重性表现的很到位，日本的文艺片总是能在平淡的叙述中把人性赤裸地展现出来…</p><h2 id=\"互联网\"><a href=\"#互联网\" class=\"headerlink\" title=\"互联网\"></a>互联网</h2><ul><li><a href=\"http://www.yixieshi.com/77541.html\" target=\"_blank\" rel=\"external\">周鸿祎：批评你的人，都是你的贵人</a></li><li><a href=\"http://www.jianshu.com/p/29bcff69064b\" target=\"_blank\" rel=\"external\">留学四年的她被一个习惯毁了前程</a></li><li>经期管理App美柚／大姨吗对比分析：<a href=\"http://www.yixieshi.com/26418.html\" target=\"_blank\" rel=\"external\">http://www.yixieshi.com/26418.html</a></li><li>互联网大佬的人生建议：<a href=\"http://www.yixieshi.com/71658.html\" target=\"_blank\" rel=\"external\">http://www.yixieshi.com/71658.html</a></li><li>15年图灵访谈——阮一峰（<a href=\"http://www.ruanyifeng.com/blog/2015/02/turing-interview.html）（在国内，）如果你想不撒谎、不干坏事、并且被公正地对待，那么可能你只能去编程了。原来文科出身呀~\" target=\"_blank\" rel=\"external\">http://www.ruanyifeng.com/blog/2015/02/turing-interview.html）（在国内，）如果你想不撒谎、不干坏事、并且被公正地对待，那么可能你只能去编程了。原来文科出身呀~</a></li><li>早起，你们都干什么？：<a href=\"http://www.jianshu.com/p/8f071c610534\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/8f071c610534</a></li><li>一篇blog-<a href=\"https://medium.com/the-mission/4-bold-decisions-that-will-stop-you-from-being-unhappy-c833c4f44ff2#.4zffbzpz7\" target=\"_blank\" rel=\"external\">https://medium.com/the-mission/4-bold-decisions-that-will-stop-you-from-being-unhappy-c833c4f44ff2#.4zffbzpz7</a> ps:自带梯子</li><li>美国的互联网工具、在线教育和智能硬件市场有哪些独角兽？ <a href=\"http://36kr.com/p/5078061.html\" target=\"_blank\" rel=\"external\">http://36kr.com/p/5078061.html</a></li><li>10年后，重新设计的微软Skype,变得像Snapchat 和 Facebook <a href=\"http://36kr.com/p/5078110.html\" target=\"_blank\" rel=\"external\">http://36kr.com/p/5078110.html</a></li></ul><h2 id=\"开发相关\"><a href=\"#开发相关\" class=\"headerlink\" title=\"开发相关\"></a>开发相关</h2><h2 id=\"设计\"><a href=\"#设计\" class=\"headerlink\" title=\"设计\"></a>设计</h2><ul><li><a href=\"http://www.uisdc.com/2017-ux-design-trends\" target=\"_blank\" rel=\"external\">2017年即将流行的9大UX设计趋势</a></li></ul><h3 id=\"Vue\"><a href=\"#Vue\" class=\"headerlink\" title=\"Vue\"></a>Vue</h3><ul><li><a href=\"http://jeffjade.com/2017/03/11/120-how-to-write-vue-better/\" target=\"_blank\" rel=\"external\">如何写一手漂亮的 Vue</a></li><li><a href=\"https://zhuanlan.zhihu.com/p/27205354\" target=\"_blank\" rel=\"external\">大神面对面：Vue.js 作者尤雨溪专访</a></li><li><a href=\"https://mp.weixin.qq.com/s?__biz=MjM5MzMyNzg0MA==&amp;mid=2650402966&amp;idx=1&amp;sn=479c47c0d0de94a8d9ce83e6535a6428\" target=\"_blank\" rel=\"external\">常见css布局方式总结</a></li></ul><h3 id=\"http\"><a href=\"#http\" class=\"headerlink\" title=\"http\"></a>http</h3><ul><li><a href=\"https://imququ.com/post/web-security-and-response-header.html#toc-5\" target=\"_blank\" rel=\"external\">一些安全相关的Http响应头</a></li></ul><h3 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h3><ul><li><a href=\"http://www.jianshu.com/p/05943804c25e\" target=\"_blank\" rel=\"external\">appium连接iOS可能的解决办法</a></li></ul><h3 id=\"JavaScript\"><a href=\"#JavaScript\" class=\"headerlink\" title=\"JavaScript\"></a>JavaScript</h3><ul><li><a href=\"https://huixisheng.github.io/object-loop/\" target=\"_blank\" rel=\"external\">JavaScript如何遍历Object</a></li></ul><h3 id=\"安卓\"><a href=\"#安卓\" class=\"headerlink\" title=\"安卓\"></a>安卓</h3><ul><li>Android O发布 <a href=\"http://news.91.com/android/s58d1bc8010d3.html\" target=\"_blank\" rel=\"external\">http://news.91.com/android/s58d1bc8010d3.html</a></li><li>Android开发中遇到的坑 <a href=\"https://www.zhihu.com/question/27818921\" target=\"_blank\" rel=\"external\">https://www.zhihu.com/question/27818921</a></li><li><a href=\"https://juejin.im/entry/5928bfa92f301e0057d4f414\" target=\"_blank\" rel=\"external\">一文解决 Android View 滑动冲突</a></li><li><a href=\"https://juejin.im/entry/5922637b128fe1005c2ce6be\" target=\"_blank\" rel=\"external\">Google 官方推出应用开发架构指南</a></li></ul><h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><ul><li><a href=\"https://juejin.im/post/5933ffd6ac502e0068a3427a\" target=\"_blank\" rel=\"external\">三十秒的小习惯，一辈子的大影响</a></li><li>要想好好生活，我们需要一场和自我的断舍离：了解自己的真实欲望，不盲目浪费自己的时间和精力；明晰自己的需求，不买多余的东西；懂得节制，将精力留给自己珍视的东西。<br><a href=\"http://www.jianshu.com/p/e0b63a98a7fc\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/e0b63a98a7fc</a></li><li>需求了解要做什么：<a href=\"https://mp.weixin.qq.com/s?__biz=MjM5ODY4ODIxOA==&amp;mid=201952103&amp;idx=1&amp;sn=610a0021807808a34d46edfa1cda40b1&amp;mpshare=1&amp;scene=1&amp;srcid=060200swWvNGr5BZ7TlABFZj&amp;key=48d1218a6e2970b0aa1d0b74aaa3757e00f7f9d8c71bf52f9f8ac81708e80b0d841651b5598c3d3a20749179877849824cc0a3a47c7990c46a48ed18a83b2ffe1a7b68566aed7ee4492b63206e539bc2&amp;ascene=0&amp;uin=MTk3ODA1MDIwMQ%3D%3D&amp;devicetype=iMac+MacBookPro11%2C1+OSX+OSX+10.11.5+build(15F34)&amp;version=12020610&amp;nettype=WIFI&amp;fontScale=100&amp;pass_ticket=iUIezIVUwLB39vKkS8pFwoWKy%2B8QRO9yOawuTuF5klqq4%2FYp0uD7IhxLsvvO0QV0\" target=\"_blank\" rel=\"external\">https://mp.weixin.qq.com/s?__biz=MjM5ODY4ODIxOA==&amp;mid=201952103&amp;idx=1&amp;sn=610a0021807808a34d46edfa1cda40b1&amp;mpshare=1&amp;scene=1&amp;srcid=060200swWvNGr5BZ7TlABFZj&amp;key=48d1218a6e2970b0aa1d0b74aaa3757e00f7f9d8c71bf52f9f8ac81708e80b0d841651b5598c3d3a20749179877849824cc0a3a47c7990c46a48ed18a83b2ffe1a7b68566aed7ee4492b63206e539bc2&amp;ascene=0&amp;uin=MTk3ODA1MDIwMQ%3D%3D&amp;devicetype=iMac+MacBookPro11%2C1+OSX+OSX+10.11.5+build(15F34)&amp;version=12020610&amp;nettype=WIFI&amp;fontScale=100&amp;pass_ticket=iUIezIVUwLB39vKkS8pFwoWKy%2B8QRO9yOawuTuF5klqq4%2FYp0uD7IhxLsvvO0QV0</a></li></ul><p><strong>本周刊由团队成员推荐整理而成，内容来自互联网</strong></p>"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cj9cutins0008ds9lc748wq0r","tag_id":"cj9cutinv000bds9l8zz3j1s7","_id":"cj9cutio3000gds9ludt2mubh"},{"post_id":"cj9cutio1000eds9le6u20zvu","tag_id":"cj9cutinv000bds9l8zz3j1s7","_id":"cj9cutio5000ids9le3ko7wqh"},{"post_id":"cj9cutinu000ads9likqzk8vm","tag_id":"cj9cutio2000fds9lm1b3msgu","_id":"cj9cutioc000mds9ljacpkaee"},{"post_id":"cj9cutinx000cds9l1nfnxh56","tag_id":"cj9cutio9000kds9l49vhh49t","_id":"cj9cutioe000qds9li8el0h09"},{"post_id":"cj9cutiny000dds9l8m73i3sp","tag_id":"cj9cutiod000ods9l7f10rw6k","_id":"cj9cutiok000xds9l3xeiyv6l"},{"post_id":"cj9cutiny000dds9l8m73i3sp","tag_id":"cj9cutiof000sds9l6gebyxn0","_id":"cj9cutiol000zds9l8i9c16a6"},{"post_id":"cj9cutio4000hds9lf10pqnyt","tag_id":"cj9cutioj000wds9loy7zdh08","_id":"cj9cution0013ds9ldqptwk42"},{"post_id":"cj9cutio7000jds9liw108brv","tag_id":"cj9cutiom0011ds9lk71iug09","_id":"cj9cutior0017ds9lq7fyw0dx"},{"post_id":"cj9cutiob000lds9lzv5teeg4","tag_id":"cj9cutioj000wds9loy7zdh08","_id":"cj9cutiou001bds9l8ter8ml0"},{"post_id":"cj9cutioc000nds9lp6btjj3v","tag_id":"cj9cutiot0019ds9lknd20sym","_id":"cj9cutioz001fds9lxi6mzw77"},{"post_id":"cj9cutioe000rds9l7oktl428","tag_id":"cj9cutiov001dds9l1yqedhok","_id":"cj9cutip2001jds9lav2555eo"},{"post_id":"cj9cutiog000tds9lugm8o17f","tag_id":"cj9cutip1001ids9l920u2nzh","_id":"cj9cutip5001ods9lcog3tm0h"},{"post_id":"cj9cutioh000uds9l3hlklzkm","tag_id":"cj9cutip4001mds9lxm0mi1jh","_id":"cj9cutipa001sds9lwkchgbxl"},{"post_id":"cj9cutioj000vds9la4plgcge","tag_id":"cj9cutip8001qds9leclguyqk","_id":"cj9cutiph001yds9lx195z9fj"},{"post_id":"cj9cutioj000vds9la4plgcge","tag_id":"cj9cutipd001uds9lbbisbimn","_id":"cj9cutiph001zds9lzr5ffe1g"},{"post_id":"cj9cutiok000yds9lue72jker","tag_id":"cj9cutiph001xds9lxmbcrgtj","_id":"cj9cutipi0021ds9lpgedc521"},{"post_id":"cj9cutiol0010ds9lhs9munw6","tag_id":"cj9cutiph0020ds9lgtz4q9rz","_id":"cj9cutipj0024ds9lskz5pe76"},{"post_id":"cj9cutiol0010ds9lhs9munw6","tag_id":"cj9cutipi0022ds9ldqneff3u","_id":"cj9cutipj0025ds9la30j3dr4"},{"post_id":"cj9cutiom0012ds9ls9xhrx5w","tag_id":"cj9cutiph001xds9lxmbcrgtj","_id":"cj9cutipk0027ds9likxmvcww"},{"post_id":"cj9cutioo0014ds9lswjlbx5c","tag_id":"cj9cutiph001xds9lxmbcrgtj","_id":"cj9cutipk0029ds9ljmocv4i4"},{"post_id":"cj9cutioq0016ds9lgre5qi39","tag_id":"cj9cutiph001xds9lxmbcrgtj","_id":"cj9cutipk002bds9lo8ylxny5"},{"post_id":"cj9cutior0018ds9lub4l1pre","tag_id":"cj9cutipk002ads9lnuzcmv1x","_id":"cj9cutipm002eds9lh2pivk4h"},{"post_id":"cj9cutior0018ds9lub4l1pre","tag_id":"cj9cutipk002cds9lod45x81g","_id":"cj9cutipm002fds9l5vszfd0t"},{"post_id":"cj9cutiot001ads9lc7n2adub","tag_id":"cj9cutiph001xds9lxmbcrgtj","_id":"cj9cutipn002hds9l3373naqg"},{"post_id":"cj9cutiou001cds9l83znib80","tag_id":"cj9cutiph001xds9lxmbcrgtj","_id":"cj9cutipo002jds9l7di36yvk"},{"post_id":"cj9cutiow001eds9l5jhpwlm3","tag_id":"cj9cutiph001xds9lxmbcrgtj","_id":"cj9cutipo002lds9lnvgcyiqr"},{"post_id":"cj9cutioz001gds9l6e0irkd1","tag_id":"cj9cutiph001xds9lxmbcrgtj","_id":"cj9cutipp002nds9ly8cxa6vo"},{"post_id":"cj9cutip0001hds9lv4njgdha","tag_id":"cj9cutiph001xds9lxmbcrgtj","_id":"cj9cutipq002pds9lkxiuw4ve"},{"post_id":"cj9cutip2001kds9lk51qxorc","tag_id":"cj9cutiph001xds9lxmbcrgtj","_id":"cj9cutipr002rds9lyvx3l8by"},{"post_id":"cj9cutip4001lds9l4ae3et7c","tag_id":"cj9cutiph001xds9lxmbcrgtj","_id":"cj9cutipr002tds9lims5dmr0"},{"post_id":"cj9cutip5001nds9ljx9imhn4","tag_id":"cj9cutiph001xds9lxmbcrgtj","_id":"cj9cutipr002vds9l9et1j5mv"},{"post_id":"cj9cutip7001pds9luv6dzeum","tag_id":"cj9cutiph001xds9lxmbcrgtj","_id":"cj9cutips002xds9lin75p4ik"},{"post_id":"cj9cutip9001rds9l4eyzmyvu","tag_id":"cj9cutiph001xds9lxmbcrgtj","_id":"cj9cutipt002zds9l8ijz5jgr"},{"post_id":"cj9cutipb001tds9l731qpc7k","tag_id":"cj9cutiph001xds9lxmbcrgtj","_id":"cj9cutipt0031ds9l2f5w1jxx"},{"post_id":"cj9cutipd001vds9lojyb8gtr","tag_id":"cj9cutiph001xds9lxmbcrgtj","_id":"cj9cutipu0033ds9l8rxwy6h4"},{"post_id":"cj9cutipe001wds9lyrylx5ic","tag_id":"cj9cutiph001xds9lxmbcrgtj","_id":"cj9cutipu0034ds9lxrn7ddi2"}],"Tag":[{"name":"Android","_id":"cj9cutinv000bds9l8zz3j1s7"},{"name":"ES6","_id":"cj9cutio2000fds9lm1b3msgu"},{"name":"hexo","_id":"cj9cutio9000kds9l49vhh49t"},{"name":"Andriod","_id":"cj9cutiod000ods9l7f10rw6k"},{"name":"翻译","_id":"cj9cutiof000sds9l6gebyxn0"},{"name":"git","_id":"cj9cutioj000wds9loy7zdh08"},{"name":"charles","_id":"cj9cutiom0011ds9lk71iug09"},{"name":"产品","_id":"cj9cutiot0019ds9lknd20sym"},{"name":"资源","_id":"cj9cutiov001dds9l1yqedhok"},{"name":"测试","_id":"cj9cutip1001ids9l920u2nzh"},{"name":"CI","_id":"cj9cutip4001mds9lxm0mi1jh"},{"name":"nodejs","_id":"cj9cutip8001qds9leclguyqk"},{"name":"npm","_id":"cj9cutipd001uds9lbbisbimn"},{"name":"weekly","_id":"cj9cutiph001xds9lxmbcrgtj"},{"name":"php","_id":"cj9cutiph0020ds9lgtz4q9rz"},{"name":"规范","_id":"cj9cutipi0022ds9ldqneff3u"},{"name":"工具","_id":"cj9cutipk002ads9lnuzcmv1x"},{"name":"SublimeText","_id":"cj9cutipk002cds9lod45x81g"}]}}